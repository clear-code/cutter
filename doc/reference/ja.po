# ja.po for Cutter Reference.
# Copyright (C) 2007-2011 Kouhei Sutou
# This file is distributed under the same license as the Cutter package.
# Kouhei Sutou <kou@clear-code.com>, 2007.
msgid ""
msgstr ""
"Project-Id-Version: Cutter 1.1.7\n"
"POT-Creation-Date: 2017-10-04 23:21+0900\n"
"PO-Revision-Date: 2020-10-07 16:18+0900\n"
"Last-Translator: Kouhei Sutou <kou@clear-code.com>\n"
"Language-Team: Japanese\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: xml/soupcutter.xml:7(refentrytitle) xml/soupcutter.xml:12(refname)
#: xml/api-index-full.xml:564(link) xml/api-index-1.0.8.xml:10(link)
msgid "SoupCutter"
msgstr ""

#: xml/soupcutter.xml:8(manvolnum) xml/soupcut-server.xml:8(manvolnum)
#: xml/soupcut-client.xml:8(manvolnum) xml/soupcut-assertions.xml:8(manvolnum)
#: xml/soupcut-assertions-helper.xml:8(manvolnum)
#: xml/gdkcutter-pixbuf.xml:8(manvolnum) xml/gdkcut-pixbuf.xml:8(manvolnum)
#: xml/gdkcut-pixbuf-assertions.xml:8(manvolnum)
#: xml/gdkcut-pixbuf-assertions-helper.xml:8(manvolnum)
#: xml/gcutter.xml:8(manvolnum) xml/gcut-value-equal.xml:8(manvolnum)
#: xml/gcut-types.xml:8(manvolnum) xml/gcut-test-utils.xml:8(manvolnum)
#: xml/gcut-string.xml:8(manvolnum) xml/gcut-string-io-channel.xml:8(manvolnum)
#: xml/gcut-public.xml:8(manvolnum) xml/gcut-process.xml:8(manvolnum)
#: xml/gcut-object.xml:8(manvolnum) xml/gcut-main.xml:8(manvolnum)
#: xml/gcut-list.xml:8(manvolnum) xml/gcut-key-file.xml:8(manvolnum)
#: xml/gcut-io.xml:8(manvolnum) xml/gcut-inspect.xml:8(manvolnum)
#: xml/gcut-hash-table.xml:8(manvolnum)
#: xml/gcut-glib-event-loop.xml:8(manvolnum)
#: xml/gcut-event-loop.xml:8(manvolnum) xml/gcut-error.xml:8(manvolnum)
#: xml/gcut-enum.xml:8(manvolnum) xml/gcut-egg.xml:8(manvolnum)
#: xml/gcut-data.xml:8(manvolnum) xml/gcut-data-helper.xml:8(manvolnum)
#: xml/gcut-assertions.xml:8(manvolnum)
#: xml/gcut-assertions-helper.xml:8(manvolnum) xml/cutter.xml:8(manvolnum)
#: xml/cut-version.xml:8(manvolnum) xml/cut-types.xml:8(manvolnum)
#: xml/cut-test-utils.xml:8(manvolnum)
#: xml/cut-string-diff-writer.xml:8(manvolnum)
#: xml/cut-multi-process.xml:8(manvolnum) xml/cut-logger.xml:8(manvolnum)
#: xml/cut-loader-customizer.xml:8(manvolnum)
#: xml/cut-loader-customizer-factory-builder.xml:8(manvolnum)
#: xml/cut-helper.xml:8(manvolnum) xml/cut-glib-compatible.xml:8(manvolnum)
#: xml/cut-features.xml:8(manvolnum) xml/cut-experimental.xml:8(manvolnum)
#: xml/cut-console.xml:8(manvolnum)
#: xml/cut-console-diff-writer.xml:8(manvolnum) xml/cut-config.xml:8(manvolnum)
#: xml/cut-assertions.xml:8(manvolnum) xml/cppcutter.xml:8(manvolnum)
#: xml/cppcut-test.xml:8(manvolnum) xml/cppcut-test-methods.xml:8(manvolnum)
#: xml/cppcut-test-iterator.xml:8(manvolnum) xml/cppcut-macros.xml:8(manvolnum)
#: xml/cppcut-iterated-test.xml:8(manvolnum)
#: xml/cppcut-assertions.xml:8(manvolnum)
msgid "3"
msgstr ""

#: xml/soupcutter.xml:9(refmiscinfo) xml/soupcut-server.xml:9(refmiscinfo)
#: xml/soupcut-client.xml:9(refmiscinfo)
#: xml/soupcut-assertions.xml:9(refmiscinfo)
#: xml/soupcut-assertions-helper.xml:9(refmiscinfo)
#: xml/gdkcutter-pixbuf.xml:9(refmiscinfo) xml/gdkcut-pixbuf.xml:9(refmiscinfo)
#: xml/gdkcut-pixbuf-assertions.xml:9(refmiscinfo)
#: xml/gdkcut-pixbuf-assertions-helper.xml:9(refmiscinfo)
#: xml/gcutter.xml:9(refmiscinfo) xml/gcut-value-equal.xml:9(refmiscinfo)
#: xml/gcut-types.xml:9(refmiscinfo) xml/gcut-test-utils.xml:9(refmiscinfo)
#: xml/gcut-string.xml:9(refmiscinfo)
#: xml/gcut-string-io-channel.xml:9(refmiscinfo)
#: xml/gcut-public.xml:9(refmiscinfo) xml/gcut-process.xml:9(refmiscinfo)
#: xml/gcut-object.xml:9(refmiscinfo) xml/gcut-main.xml:9(refmiscinfo)
#: xml/gcut-list.xml:9(refmiscinfo) xml/gcut-key-file.xml:9(refmiscinfo)
#: xml/gcut-io.xml:9(refmiscinfo) xml/gcut-inspect.xml:9(refmiscinfo)
#: xml/gcut-hash-table.xml:9(refmiscinfo)
#: xml/gcut-glib-event-loop.xml:9(refmiscinfo)
#: xml/gcut-event-loop.xml:9(refmiscinfo) xml/gcut-error.xml:9(refmiscinfo)
#: xml/gcut-enum.xml:9(refmiscinfo) xml/gcut-egg.xml:9(refmiscinfo)
#: xml/gcut-data.xml:9(refmiscinfo) xml/gcut-data-helper.xml:9(refmiscinfo)
#: xml/gcut-assertions.xml:9(refmiscinfo)
#: xml/gcut-assertions-helper.xml:9(refmiscinfo) xml/cutter.xml:9(refmiscinfo)
#: xml/cut-version.xml:9(refmiscinfo) xml/cut-types.xml:9(refmiscinfo)
#: xml/cut-test-utils.xml:9(refmiscinfo)
#: xml/cut-string-diff-writer.xml:9(refmiscinfo)
#: xml/cut-multi-process.xml:9(refmiscinfo) xml/cut-logger.xml:9(refmiscinfo)
#: xml/cut-loader-customizer.xml:9(refmiscinfo)
#: xml/cut-loader-customizer-factory-builder.xml:9(refmiscinfo)
#: xml/cut-helper.xml:9(refmiscinfo) xml/cut-glib-compatible.xml:9(refmiscinfo)
#: xml/cut-features.xml:9(refmiscinfo) xml/cut-experimental.xml:9(refmiscinfo)
#: xml/cut-console.xml:9(refmiscinfo)
#: xml/cut-console-diff-writer.xml:9(refmiscinfo)
#: xml/cut-config.xml:9(refmiscinfo) xml/cut-assertions.xml:9(refmiscinfo)
#: xml/cppcutter.xml:9(refmiscinfo) xml/cppcut-test.xml:9(refmiscinfo)
#: xml/cppcut-test-methods.xml:9(refmiscinfo)
#: xml/cppcut-test-iterator.xml:9(refmiscinfo)
#: xml/cppcut-macros.xml:9(refmiscinfo)
#: xml/cppcut-iterated-test.xml:9(refmiscinfo)
#: xml/cppcut-assertions.xml:9(refmiscinfo)
msgid "CUTTER Library"
msgstr "Cutterライブラリ"

#: xml/soupcutter.xml:13(refpurpose)
msgid "HTTP supported Cutter with libsoup."
msgstr "libsoupを用いたHTTPサポート付きのCutter。"

#: xml/soupcutter.xml:17(title) xml/soupcutter.xml:68(title)
#: xml/soupcut-server.xml:122(title) xml/soupcut-client.xml:251(title)
#: xml/soupcut-assertions.xml:194(title)
#: xml/soupcut-assertions-helper.xml:108(title)
#: xml/gdkcutter-pixbuf.xml:17(title) xml/gdkcutter-pixbuf.xml:68(title)
#: xml/gdkcut-pixbuf.xml:90(title) xml/gdkcut-pixbuf-assertions.xml:92(title)
#: xml/gdkcut-pixbuf-assertions-helper.xml:56(title) xml/gcutter.xml:17(title)
#: xml/gcutter.xml:66(title) xml/gcut-value-equal.xml:119(title)
#: xml/gcut-types.xml:75(title) xml/gcut-test-utils.xml:737(title)
#: xml/gcut-string.xml:104(title) xml/gcut-string-io-channel.xml:180(title)
#: xml/gcut-public.xml:123(title) xml/gcut-process.xml:117(title)
#: xml/gcut-process.xml:922(title) xml/gcut-object.xml:155(title)
#: xml/gcut-main.xml:81(title) xml/gcut-list.xml:701(title)
#: xml/gcut-key-file.xml:69(title) xml/gcut-io.xml:51(title)
#: xml/gcut-inspect.xml:559(title) xml/gcut-hash-table.xml:299(title)
#: xml/gcut-glib-event-loop.xml:69(title) xml/gcut-event-loop.xml:54(title)
#: xml/gcut-event-loop.xml:490(title) xml/gcut-error.xml:104(title)
#: xml/gcut-enum.xml:42(title) xml/gcut-enum.xml:247(title)
#: xml/gcut-egg.xml:103(title) xml/gcut-egg.xml:770(title)
#: xml/gcut-data.xml:744(title) xml/gcut-data-helper.xml:221(title)
#: xml/gcut-assertions.xml:1180(title)
#: xml/gcut-assertions-helper.xml:383(title) xml/cutter.xml:57(title)
#: xml/cutter.xml:535(title) xml/cut-version.xml:30(title)
#: xml/cut-version.xml:86(title) xml/cut-types.xml:33(title)
#: xml/cut-types.xml:89(title) xml/cut-test-utils.xml:688(title)
#: xml/cut-string-diff-writer.xml:61(title) xml/cut-multi-process.xml:94(title)
#: xml/cut-multi-process.xml:900(title) xml/cut-logger.xml:94(title)
#: xml/cut-logger.xml:488(title) xml/cut-loader-customizer.xml:64(title)
#: xml/cut-loader-customizer-factory-builder.xml:29(title)
#: xml/cut-helper.xml:58(title) xml/cut-helper.xml:652(title)
#: xml/cut-glib-compatible.xml:38(title) xml/cut-glib-compatible.xml:115(title)
#: xml/cut-features.xml:17(title) xml/cut-features.xml:45(title)
#: xml/cut-experimental.xml:180(title) xml/cut-console.xml:33(title)
#: xml/cut-console.xml:90(title) xml/cut-console-diff-writer.xml:189(title)
#: xml/cut-config.xml:17(title) xml/cut-config.xml:45(title)
#: xml/cut-assertions.xml:3039(title) xml/cppcutter.xml:30(title)
#: xml/cppcutter.xml:136(title) xml/cppcut-test.xml:50(title)
#: xml/cppcut-test-methods.xml:67(title) xml/cppcut-test-iterator.xml:51(title)
#: xml/cppcut-macros.xml:17(title) xml/cppcut-macros.xml:42(title)
#: xml/cppcut-iterated-test.xml:51(title) xml/cppcut-assertions.xml:227(title)
msgid "Types and Values"
msgstr ""

#: xml/soupcutter.xml:23(entry) xml/gdkcutter-pixbuf.xml:23(entry)
#: xml/gcutter.xml:23(entry) xml/gcut-test-utils.xml:52(entry)
#: xml/gcut-test-utils.xml:55(entry) xml/gcut-process.xml:123(entry)
#: xml/gcut-list.xml:46(entry) xml/gcut-list.xml:47(entry)
#: xml/gcut-list.xml:48(entry) xml/gcut-list.xml:49(entry)
#: xml/gcut-list.xml:50(entry) xml/gcut-list.xml:51(entry)
#: xml/gcut-list.xml:52(entry) xml/gcut-list.xml:53(entry)
#: xml/gcut-list.xml:54(entry) xml/gcut-event-loop.xml:60(entry)
#: xml/gcut-enum.xml:48(entry) xml/gcut-egg.xml:109(entry)
#: xml/gcut-data.xml:28(entry) xml/gcut-data.xml:35(entry)
#: xml/gcut-data.xml:36(entry) xml/gcut-data.xml:37(entry)
#: xml/cutter.xml:35(entry) xml/cutter.xml:36(entry) xml/cutter.xml:63(entry)
#: xml/cut-version.xml:23(entry) xml/cut-version.xml:36(entry)
#: xml/cut-version.xml:37(entry) xml/cut-version.xml:38(entry)
#: xml/cut-version.xml:39(entry) xml/cut-types.xml:40(entry)
#: xml/cut-types.xml:41(entry) xml/cut-test-utils.xml:43(entry)
#: xml/cut-logger.xml:23(entry) xml/cut-logger.xml:24(entry)
#: xml/cut-logger.xml:25(entry) xml/cut-logger.xml:26(entry)
#: xml/cut-logger.xml:27(entry) xml/cut-logger.xml:28(entry)
#: xml/cut-logger.xml:29(entry) xml/cut-logger.xml:30(entry)
#: xml/cut-logger.xml:31(entry) xml/cut-logger.xml:32(entry)
#: xml/cut-logger.xml:33(entry) xml/cut-logger.xml:34(entry)
#: xml/cut-logger.xml:35(entry) xml/cut-logger.xml:36(entry)
#: xml/cut-logger.xml:37(entry) xml/cut-logger.xml:38(entry)
#: xml/cut-logger.xml:39(entry) xml/cut-logger.xml:40(entry)
#: xml/cut-logger.xml:41(entry) xml/cut-logger.xml:42(entry)
#: xml/cut-logger.xml:85(entry) xml/cut-logger.xml:101(entry)
#: xml/cut-logger.xml:103(entry) xml/cut-logger.xml:105(entry)
#: xml/cut-logger.xml:106(entry) xml/cut-helper.xml:34(entry)
#: xml/cut-helper.xml:35(entry) xml/cut-helper.xml:38(entry)
#: xml/cut-helper.xml:39(entry) xml/cut-helper.xml:46(entry)
#: xml/cut-helper.xml:47(entry) xml/cut-helper.xml:64(entry)
#: xml/cut-glib-compatible.xml:23(entry) xml/cut-glib-compatible.xml:24(entry)
#: xml/cut-glib-compatible.xml:25(entry) xml/cut-glib-compatible.xml:26(entry)
#: xml/cut-glib-compatible.xml:27(entry) xml/cut-glib-compatible.xml:44(entry)
#: xml/cut-features.xml:23(entry) xml/cut-features.xml:24(entry)
#: xml/cut-features.xml:25(entry) xml/cut-features.xml:26(entry)
#: xml/cut-experimental.xml:23(entry) xml/cut-experimental.xml:24(entry)
#: xml/cut-experimental.xml:25(entry) xml/cut-experimental.xml:26(entry)
#: xml/cut-console.xml:39(entry) xml/cut-console.xml:40(entry)
#: xml/cut-console.xml:41(entry) xml/cut-console.xml:42(entry)
#: xml/cut-console.xml:43(entry) xml/cut-console.xml:44(entry)
#: xml/cut-console.xml:45(entry) xml/cut-console.xml:46(entry)
#: xml/cut-console.xml:47(entry) xml/cut-console.xml:48(entry)
#: xml/cut-console.xml:49(entry) xml/cut-console.xml:50(entry)
#: xml/cut-console.xml:51(entry) xml/cut-console.xml:52(entry)
#: xml/cut-config.xml:23(entry) xml/cut-config.xml:24(entry)
#: xml/cut-config.xml:25(entry) xml/cut-config.xml:26(entry)
#: xml/cut-assertions.xml:43(entry) xml/cut-assertions.xml:44(entry)
#: xml/cut-assertions.xml:45(entry) xml/cut-assertions.xml:46(entry)
#: xml/cut-assertions.xml:47(entry) xml/cut-assertions.xml:48(entry)
#: xml/cut-assertions.xml:49(entry) xml/cut-assertions.xml:50(entry)
#: xml/cut-assertions.xml:51(entry) xml/cut-assertions.xml:52(entry)
#: xml/cut-assertions.xml:53(entry) xml/cut-assertions.xml:54(entry)
#: xml/cut-assertions.xml:55(entry) xml/cut-assertions.xml:56(entry)
#: xml/cut-assertions.xml:57(entry) xml/cut-assertions.xml:58(entry)
#: xml/cut-assertions.xml:59(entry) xml/cut-assertions.xml:60(entry)
#: xml/cut-assertions.xml:61(entry) xml/cut-assertions.xml:62(entry)
#: xml/cut-assertions.xml:67(entry) xml/cut-assertions.xml:68(entry)
#: xml/cut-assertions.xml:69(entry) xml/cut-assertions.xml:70(entry)
#: xml/cut-assertions.xml:71(entry) xml/cut-assertions.xml:72(entry)
#: xml/cut-assertions.xml:73(entry) xml/cut-assertions.xml:74(entry)
#: xml/cut-assertions.xml:75(entry) xml/cut-assertions.xml:76(entry)
#: xml/cut-assertions.xml:77(entry) xml/cut-assertions.xml:78(entry)
#: xml/cut-assertions.xml:79(entry) xml/cut-assertions.xml:80(entry)
#: xml/cut-assertions.xml:81(entry) xml/cut-assertions.xml:82(entry)
#: xml/cut-assertions.xml:83(entry) xml/cut-assertions.xml:84(entry)
#: xml/cut-assertions.xml:85(entry) xml/cut-assertions.xml:86(entry)
#: xml/cut-assertions.xml:95(entry) xml/cut-assertions.xml:96(entry)
#: xml/cut-assertions.xml:117(entry) xml/cut-assertions.xml:118(entry)
#: xml/cut-assertions.xml:119(entry) xml/cut-assertions.xml:120(entry)
#: xml/cut-assertions.xml:121(entry) xml/cut-assertions.xml:122(entry)
#: xml/cut-assertions.xml:143(entry) xml/cut-assertions.xml:144(entry)
#: xml/cut-assertions.xml:145(entry) xml/cppcutter.xml:23(entry)
#: xml/cppcutter.xml:36(entry) xml/cppcutter.xml:37(entry)
#: xml/cppcutter.xml:38(entry) xml/cppcut-macros.xml:23(entry)
#: xml/cppcut-assertions.xml:24(entry) xml/cppcut-assertions.xml:25(entry)
#: xml/cppcut-assertions.xml:26(entry) xml/cppcut-assertions.xml:27(entry)
#: xml/cppcut-assertions.xml:28(entry)
msgid "#define"
msgstr ""

#: xml/soupcutter.xml:23(link) xml/soupcutter.xml:70(title)
#: xml/soupcutter.xml:71(primary) xml/api-index-full.xml:564(link)
#: xml/api-index-1.0.8.xml:10(link)
msgid "SOUPCUTTER_ENABLED"
msgstr ""

#: xml/soupcutter.xml:32(title) xml/soupcut-server.xml:37(title)
#: xml/soupcut-client.xml:65(title) xml/soupcut-assertions.xml:42(title)
#: xml/soupcut-assertions-helper.xml:41(title)
#: xml/gdkcutter-pixbuf.xml:32(title) xml/gdkcut-pixbuf.xml:39(title)
#: xml/gdkcut-pixbuf-assertions.xml:34(title)
#: xml/gdkcut-pixbuf-assertions-helper.xml:33(title) xml/gcutter.xml:32(title)
#: xml/gcut-value-equal.xml:36(title) xml/gcut-types.xml:33(title)
#: xml/gcut-test-utils.xml:76(title) xml/gcut-string.xml:36(title)
#: xml/gcut-string-io-channel.xml:57(title) xml/gcut-public.xml:45(title)
#: xml/gcut-process.xml:139(title) xml/gcut-object.xml:38(title)
#: xml/gcut-main.xml:39(title) xml/gcut-list.xml:63(title)
#: xml/gcut-key-file.xml:35(title) xml/gcut-io.xml:33(title)
#: xml/gcut-inspect.xml:60(title) xml/gcut-hash-table.xml:44(title)
#: xml/gcut-glib-event-loop.xml:34(title) xml/gcut-event-loop.xml:75(title)
#: xml/gcut-error.xml:36(title) xml/gcut-enum.xml:58(title)
#: xml/gcut-egg.xml:125(title) xml/gcut-data.xml:60(title)
#: xml/gcut-data-helper.xml:61(title) xml/gcut-assertions.xml:98(title)
#: xml/gcut-assertions-helper.xml:81(title) xml/cutter.xml:72(title)
#: xml/cut-version.xml:48(title) xml/cut-types.xml:50(title)
#: xml/cut-test-utils.xml:72(title) xml/cut-string-diff-writer.xml:35(title)
#: xml/cut-multi-process.xml:110(title) xml/cut-logger.xml:117(title)
#: xml/cut-loader-customizer.xml:35(title)
#: xml/cut-loader-customizer-factory-builder.xml:19(title)
#: xml/cut-helper.xml:73(title) xml/cut-glib-compatible.xml:53(title)
#: xml/cut-features.xml:35(title) xml/cut-experimental.xml:35(title)
#: xml/cut-console.xml:61(title) xml/cut-console-diff-writer.xml:57(title)
#: xml/cut-config.xml:35(title) xml/cut-assertions.xml:170(title)
#: xml/cppcutter.xml:47(title) xml/cppcut-test.xml:33(title)
#: xml/cppcut-test-methods.xml:35(title) xml/cppcut-test-iterator.xml:33(title)
#: xml/cppcut-macros.xml:32(title) xml/cppcut-iterated-test.xml:33(title)
#: xml/cppcut-assertions.xml:37(title)
msgid "Description"
msgstr "説明"

#: xml/soupcutter.xml:33(para)
msgid ""
"SoupCutter adds many useful HTTP related features based on libsoup to "
"Cutter. If you want to write tests for HTTP, it's good idea that you "
"consider SoupCutter to be used too."
msgstr ""
"SoupCutterはlibsoupを用いたHTTP関連のたくさんの便利な機能をCutterに追加しま"
"す。より簡単にHTTPのテストを書きたい場合はSoupCutterの使用を検討してくださ"
"い。"

#: xml/soupcutter.xml:37(para)
msgid ""
"It's easy to use SoupCutter. You just include &lt;soupcuttter.h&gt; instead "
"of &lt;cutter.h&gt; or &lt;gcutter.h&gt; and use soupcutter-pixbuf.pc "
"instead of cutter.pc or gcutter.pc:"
msgstr ""
"SoupCutterを使うことは簡単です。&lt;cutter.h&gt;または&lt;gcutter.h&gt;の代わ"
"りに&lt;soupcutter.h&gt;をincludeし、cutter.pcまたはgcutter.pcの代わりに"
"soupcutter.pcを使うだけです。"

#: xml/soupcutter.xml:41(para) xml/gdkcutter-pixbuf.xml:41(para)
#: xml/gcutter.xml:39(para)
msgid "test-xxx.c:"
msgstr ""

#: xml/soupcutter.xml:47(para) xml/gdkcutter-pixbuf.xml:47(para)
#: xml/gcutter.xml:45(para) xml/cppcutter.xml:60(para)
msgid "configure.ac:"
msgstr ""

#: xml/soupcutter.xml:53(para) xml/gdkcutter-pixbuf.xml:53(para)
#: xml/gcutter.xml:51(para) xml/cut-helper.xml:130(para)
#: xml/cppcutter.xml:66(para)
msgid "Makefile.am:"
msgstr ""

#: xml/soupcutter.xml:64(title) xml/soupcut-server.xml:17(title)
#: xml/soupcut-server.xml:42(title) xml/soupcut-client.xml:17(title)
#: xml/soupcut-client.xml:73(title) xml/soupcut-assertions.xml:18(title)
#: xml/soupcut-assertions.xml:46(title)
#: xml/soupcut-assertions-helper.xml:17(title)
#: xml/soupcut-assertions-helper.xml:47(title)
#: xml/gdkcutter-pixbuf.xml:64(title) xml/gdkcut-pixbuf.xml:17(title)
#: xml/gdkcut-pixbuf.xml:45(title) xml/gdkcut-pixbuf-assertions.xml:18(title)
#: xml/gdkcut-pixbuf-assertions.xml:38(title)
#: xml/gdkcut-pixbuf-assertions-helper.xml:17(title)
#: xml/gdkcut-pixbuf-assertions-helper.xml:39(title) xml/gcutter.xml:62(title)
#: xml/gcut-value-equal.xml:18(title) xml/gcut-value-equal.xml:44(title)
#: xml/gcut-types.xml:17(title) xml/gcut-types.xml:38(title)
#: xml/gcut-test-utils.xml:18(title) xml/gcut-test-utils.xml:85(title)
#: xml/gcut-string.xml:18(title) xml/gcut-string.xml:44(title)
#: xml/gcut-string-io-channel.xml:17(title)
#: xml/gcut-string-io-channel.xml:63(title) xml/gcut-public.xml:17(title)
#: xml/gcut-public.xml:51(title) xml/gcut-process.xml:18(title)
#: xml/gcut-process.xml:205(title) xml/gcut-object.xml:18(title)
#: xml/gcut-object.xml:46(title) xml/gcut-main.xml:17(title)
#: xml/gcut-main.xml:45(title) xml/gcut-list.xml:18(title)
#: xml/gcut-list.xml:71(title) xml/gcut-key-file.xml:17(title)
#: xml/gcut-key-file.xml:41(title) xml/gcut-io.xml:17(title)
#: xml/gcut-io.xml:39(title) xml/gcut-inspect.xml:18(title)
#: xml/gcut-inspect.xml:67(title) xml/gcut-hash-table.xml:18(title)
#: xml/gcut-hash-table.xml:52(title) xml/gcut-glib-event-loop.xml:18(title)
#: xml/gcut-glib-event-loop.xml:40(title) xml/gcut-event-loop.xml:18(title)
#: xml/gcut-event-loop.xml:87(title) xml/gcut-error.xml:18(title)
#: xml/gcut-error.xml:44(title) xml/gcut-enum.xml:18(title)
#: xml/gcut-enum.xml:66(title) xml/gcut-egg.xml:18(title)
#: xml/gcut-egg.xml:191(title) xml/gcut-data.xml:18(title)
#: xml/gcut-data.xml:68(title) xml/gcut-data-helper.xml:17(title)
#: xml/gcut-data-helper.xml:67(title) xml/gcut-assertions.xml:18(title)
#: xml/gcut-assertions.xml:102(title) xml/gcut-assertions-helper.xml:17(title)
#: xml/gcut-assertions-helper.xml:87(title) xml/cutter.xml:17(title)
#: xml/cutter.xml:173(title) xml/cut-version.xml:17(title)
#: xml/cut-version.xml:56(title) xml/cut-types.xml:17(title)
#: xml/cut-types.xml:55(title) xml/cut-test-utils.xml:17(title)
#: xml/cut-test-utils.xml:81(title) xml/cut-string-diff-writer.xml:17(title)
#: xml/cut-string-diff-writer.xml:41(title) xml/cut-multi-process.xml:18(title)
#: xml/cut-multi-process.xml:123(title) xml/cut-logger.xml:17(title)
#: xml/cut-logger.xml:123(title) xml/cut-loader-customizer.xml:17(title)
#: xml/cut-loader-customizer.xml:41(title)
#: xml/cut-loader-customizer-factory-builder.xml:25(title)
#: xml/cut-helper.xml:18(title) xml/cut-helper.xml:142(title)
#: xml/cut-glib-compatible.xml:17(title) xml/cut-glib-compatible.xml:59(title)
#: xml/cut-features.xml:41(title) xml/cut-experimental.xml:17(title)
#: xml/cut-experimental.xml:40(title) xml/cut-console.xml:17(title)
#: xml/cut-console.xml:67(title) xml/cut-console-diff-writer.xml:17(title)
#: xml/cut-console-diff-writer.xml:63(title) xml/cut-config.xml:41(title)
#: xml/cut-assertions.xml:17(title) xml/cut-assertions.xml:182(title)
#: xml/cppcutter.xml:17(title) xml/cppcutter.xml:104(title)
#: xml/cppcut-test.xml:17(title) xml/cppcut-test.xml:37(title)
#: xml/cppcut-test-methods.xml:17(title) xml/cppcut-test-methods.xml:41(title)
#: xml/cppcut-test-iterator.xml:17(title)
#: xml/cppcut-test-iterator.xml:37(title) xml/cppcut-macros.xml:38(title)
#: xml/cppcut-iterated-test.xml:17(title)
#: xml/cppcut-iterated-test.xml:37(title) xml/cppcut-assertions.xml:18(title)
#: xml/cppcut-assertions.xml:41(title)
msgid "Functions"
msgstr ""

#: xml/soupcutter.xml:72(programlisting)
#, no-wrap
msgid "#define SOUPCUTTER_ENABLED 1\n"
msgstr ""

#: xml/soupcutter.xml:74(para)
msgid "Defined when SoupCutter is enabled."
msgstr "SoupCutterが有効なとき定義されます。"

#: xml/soupcutter.xml:75(para) xml/soupcut-server.xml:66(para)
#: xml/soupcut-server.xml:90(para) xml/soupcut-server.xml:118(para)
#: xml/soupcut-client.xml:83(para) xml/soupcut-client.xml:108(para)
#: xml/soupcut-client.xml:137(para) xml/soupcut-client.xml:177(para)
#: xml/soupcut-client.xml:200(para) xml/soupcut-client.xml:223(para)
#: xml/soupcut-client.xml:247(para) xml/soupcut-assertions.xml:76(para)
#: xml/soupcut-assertions.xml:107(para) xml/soupcut-assertions.xml:131(para)
#: xml/soupcut-assertions.xml:160(para) xml/soupcut-assertions.xml:190(para)
#: xml/gcut-hash-table.xml:295(para)
msgid "Since: <link linkend=\"api-index-1.0.8\">1.0.8</link>"
msgstr ""

#: xml/soupcutter.xml:79(title) xml/soupcut-server.xml:126(title)
#: xml/soupcut-client.xml:265(title) xml/gdkcutter-pixbuf.xml:79(title)
#: xml/gcutter.xml:77(title) xml/cutter.xml:558(title)
#: xml/cppcutter.xml:175(title)
msgid "See Also"
msgstr "参考"

#: xml/soupcutter.xml:81(link)
msgid "Assertions for HTTP client/server based on libsoup"
msgstr "libsoupを使ったHTTPクライアント・サーバ用の検証"

#: xml/soupcut-server.xml:7(refentrytitle) xml/soupcut-server.xml:12(refname)
#: xml/api-index-full.xml:582(link) xml/api-index-full.xml:583(link)
#: xml/api-index-full.xml:584(link) xml/api-index-1.0.8.xml:23(link)
#: xml/api-index-1.0.8.xml:24(link) xml/api-index-1.0.8.xml:25(link)
msgid "Convenience HTTP server API"
msgstr "便利なHTTPサーバーAPI"

#: xml/soupcut-server.xml:13(refpurpose)
msgid "API to work as HTTP server."
msgstr "HTTPサーバーとして動作するためのAPI。"

#: xml/soupcut-server.xml:23(returnvalue)
#: xml/soupcut-server.xml:25(returnvalue)
msgid "SoupServer"
msgstr ""

#: xml/soupcut-server.xml:23(entry) xml/soupcut-server.xml:25(entry)
msgid "<link linkend=\"SoupServer\"><placeholder-1/></link> *"
msgstr ""

#: xml/soupcut-server.xml:24(link) xml/soupcut-server.xml:45(primary)
#: xml/api-index-full.xml:583(link) xml/api-index-1.0.8.xml:24(link)
msgid "soupcut_server_take"
msgstr ""

#: xml/soupcut-server.xml:24(phrase) xml/soupcut-server.xml:26(phrase)
#: xml/soupcut-server.xml:28(phrase) xml/soupcut-client.xml:24(phrase)
#: xml/soupcut-client.xml:26(phrase) xml/soupcut-client.xml:28(phrase)
#: xml/soupcut-client.xml:30(phrase) xml/soupcut-client.xml:32(phrase)
#: xml/soupcut-client.xml:34(phrase) xml/soupcut-client.xml:36(phrase)
#: xml/soupcut-assertions.xml:25(phrase) xml/soupcut-assertions.xml:27(phrase)
#: xml/soupcut-assertions.xml:29(phrase) xml/soupcut-assertions.xml:31(phrase)
#: xml/soupcut-assertions.xml:33(phrase)
#: xml/soupcut-assertions-helper.xml:24(phrase)
#: xml/soupcut-assertions-helper.xml:26(phrase)
#: xml/soupcut-assertions-helper.xml:28(phrase)
#: xml/soupcut-assertions-helper.xml:30(phrase)
#: xml/soupcut-assertions-helper.xml:32(phrase)
#: xml/gdkcut-pixbuf.xml:24(phrase) xml/gdkcut-pixbuf.xml:26(phrase)
#: xml/gdkcut-pixbuf.xml:28(phrase) xml/gdkcut-pixbuf.xml:30(phrase)
#: xml/gdkcut-pixbuf-assertions.xml:25(phrase)
#: xml/gdkcut-pixbuf-assertions-helper.xml:24(phrase)
#: xml/gcut-value-equal.xml:25(phrase) xml/gcut-value-equal.xml:27(phrase)
#: xml/gcut-types.xml:24(phrase) xml/gcut-test-utils.xml:25(phrase)
#: xml/gcut-test-utils.xml:27(phrase) xml/gcut-test-utils.xml:29(phrase)
#: xml/gcut-test-utils.xml:31(phrase) xml/gcut-test-utils.xml:33(phrase)
#: xml/gcut-test-utils.xml:35(phrase) xml/gcut-test-utils.xml:37(phrase)
#: xml/gcut-test-utils.xml:39(phrase) xml/gcut-test-utils.xml:41(phrase)
#: xml/gcut-test-utils.xml:43(phrase) xml/gcut-test-utils.xml:45(phrase)
#: xml/gcut-test-utils.xml:47(phrase) xml/gcut-test-utils.xml:49(phrase)
#: xml/gcut-test-utils.xml:51(phrase) xml/gcut-test-utils.xml:52(phrase)
#: xml/gcut-test-utils.xml:54(phrase) xml/gcut-test-utils.xml:55(phrase)
#: xml/gcut-test-utils.xml:57(phrase) xml/gcut-test-utils.xml:59(phrase)
#: xml/gcut-test-utils.xml:61(phrase) xml/gcut-test-utils.xml:63(phrase)
#: xml/gcut-test-utils.xml:65(phrase) xml/gcut-test-utils.xml:67(phrase)
#: xml/gcut-string.xml:25(phrase) xml/gcut-string.xml:27(phrase)
#: xml/gcut-string-io-channel.xml:24(phrase)
#: xml/gcut-string-io-channel.xml:26(phrase)
#: xml/gcut-string-io-channel.xml:28(phrase)
#: xml/gcut-string-io-channel.xml:30(phrase)
#: xml/gcut-string-io-channel.xml:32(phrase)
#: xml/gcut-string-io-channel.xml:34(phrase)
#: xml/gcut-string-io-channel.xml:36(phrase)
#: xml/gcut-string-io-channel.xml:38(phrase)
#: xml/gcut-string-io-channel.xml:40(phrase)
#: xml/gcut-string-io-channel.xml:42(phrase)
#: xml/gcut-string-io-channel.xml:44(phrase)
#: xml/gcut-string-io-channel.xml:46(phrase)
#: xml/gcut-string-io-channel.xml:48(phrase) xml/gcut-public.xml:24(phrase)
#: xml/gcut-public.xml:26(phrase) xml/gcut-public.xml:28(phrase)
#: xml/gcut-public.xml:30(phrase) xml/gcut-public.xml:32(phrase)
#: xml/gcut-public.xml:34(phrase) xml/gcut-public.xml:36(phrase)
#: xml/gcut-process.xml:25(phrase) xml/gcut-process.xml:27(phrase)
#: xml/gcut-process.xml:29(phrase) xml/gcut-process.xml:31(phrase)
#: xml/gcut-process.xml:33(phrase) xml/gcut-process.xml:35(phrase)
#: xml/gcut-process.xml:37(phrase) xml/gcut-process.xml:39(phrase)
#: xml/gcut-process.xml:41(phrase) xml/gcut-process.xml:43(phrase)
#: xml/gcut-process.xml:45(phrase) xml/gcut-process.xml:47(phrase)
#: xml/gcut-process.xml:49(phrase) xml/gcut-process.xml:51(phrase)
#: xml/gcut-process.xml:53(phrase) xml/gcut-process.xml:55(phrase)
#: xml/gcut-process.xml:57(phrase) xml/gcut-process.xml:59(phrase)
#: xml/gcut-process.xml:61(phrase) xml/gcut-process.xml:63(phrase)
#: xml/gcut-process.xml:65(phrase) xml/gcut-process.xml:67(phrase)
#: xml/gcut-process.xml:69(phrase) xml/gcut-process.xml:71(phrase)
#: xml/gcut-process.xml:73(phrase) xml/gcut-process.xml:75(phrase)
#: xml/gcut-process.xml:77(phrase) xml/gcut-process.xml:79(phrase)
#: xml/gcut-object.xml:25(phrase) xml/gcut-object.xml:27(phrase)
#: xml/gcut-object.xml:29(phrase) xml/gcut-main.xml:24(phrase)
#: xml/gcut-main.xml:26(phrase) xml/gcut-main.xml:28(phrase)
#: xml/gcut-main.xml:30(phrase) xml/gcut-list.xml:25(phrase)
#: xml/gcut-list.xml:27(phrase) xml/gcut-list.xml:29(phrase)
#: xml/gcut-list.xml:31(phrase) xml/gcut-list.xml:33(phrase)
#: xml/gcut-list.xml:35(phrase) xml/gcut-list.xml:37(phrase)
#: xml/gcut-list.xml:39(phrase) xml/gcut-list.xml:41(phrase)
#: xml/gcut-list.xml:43(phrase) xml/gcut-list.xml:45(phrase)
#: xml/gcut-list.xml:46(phrase) xml/gcut-list.xml:47(phrase)
#: xml/gcut-list.xml:48(phrase) xml/gcut-list.xml:49(phrase)
#: xml/gcut-list.xml:50(phrase) xml/gcut-list.xml:51(phrase)
#: xml/gcut-list.xml:52(phrase) xml/gcut-list.xml:53(phrase)
#: xml/gcut-list.xml:54(phrase) xml/gcut-key-file.xml:24(phrase)
#: xml/gcut-key-file.xml:26(phrase) xml/gcut-io.xml:24(phrase)
#: xml/gcut-inspect.xml:25(phrase) xml/gcut-inspect.xml:27(phrase)
#: xml/gcut-inspect.xml:29(phrase) xml/gcut-inspect.xml:31(phrase)
#: xml/gcut-inspect.xml:33(phrase) xml/gcut-inspect.xml:35(phrase)
#: xml/gcut-inspect.xml:37(phrase) xml/gcut-inspect.xml:39(phrase)
#: xml/gcut-inspect.xml:41(phrase) xml/gcut-inspect.xml:43(phrase)
#: xml/gcut-inspect.xml:45(phrase) xml/gcut-inspect.xml:47(phrase)
#: xml/gcut-inspect.xml:49(phrase) xml/gcut-inspect.xml:51(phrase)
#: xml/gcut-hash-table.xml:25(phrase) xml/gcut-hash-table.xml:27(phrase)
#: xml/gcut-hash-table.xml:29(phrase) xml/gcut-hash-table.xml:31(phrase)
#: xml/gcut-hash-table.xml:33(phrase) xml/gcut-hash-table.xml:35(phrase)
#: xml/gcut-glib-event-loop.xml:25(phrase) xml/gcut-event-loop.xml:25(phrase)
#: xml/gcut-event-loop.xml:27(phrase) xml/gcut-event-loop.xml:29(phrase)
#: xml/gcut-event-loop.xml:31(phrase) xml/gcut-event-loop.xml:33(phrase)
#: xml/gcut-event-loop.xml:35(phrase) xml/gcut-event-loop.xml:37(phrase)
#: xml/gcut-event-loop.xml:39(phrase) xml/gcut-event-loop.xml:41(phrase)
#: xml/gcut-event-loop.xml:43(phrase) xml/gcut-event-loop.xml:45(phrase)
#: xml/gcut-event-loop.xml:47(phrase) xml/gcut-error.xml:25(phrase)
#: xml/gcut-error.xml:27(phrase) xml/gcut-enum.xml:25(phrase)
#: xml/gcut-enum.xml:27(phrase) xml/gcut-enum.xml:29(phrase)
#: xml/gcut-enum.xml:31(phrase) xml/gcut-enum.xml:33(phrase)
#: xml/gcut-enum.xml:35(phrase) xml/gcut-egg.xml:25(phrase)
#: xml/gcut-egg.xml:27(phrase) xml/gcut-egg.xml:29(phrase)
#: xml/gcut-egg.xml:31(phrase) xml/gcut-egg.xml:33(phrase)
#: xml/gcut-egg.xml:35(phrase) xml/gcut-egg.xml:37(phrase)
#: xml/gcut-egg.xml:39(phrase) xml/gcut-egg.xml:41(phrase)
#: xml/gcut-egg.xml:43(phrase) xml/gcut-egg.xml:45(phrase)
#: xml/gcut-egg.xml:47(phrase) xml/gcut-egg.xml:49(phrase)
#: xml/gcut-egg.xml:51(phrase) xml/gcut-egg.xml:53(phrase)
#: xml/gcut-egg.xml:55(phrase) xml/gcut-egg.xml:57(phrase)
#: xml/gcut-egg.xml:59(phrase) xml/gcut-egg.xml:61(phrase)
#: xml/gcut-egg.xml:63(phrase) xml/gcut-egg.xml:65(phrase)
#: xml/gcut-data.xml:25(phrase) xml/gcut-data.xml:27(phrase)
#: xml/gcut-data.xml:28(phrase) xml/gcut-data.xml:30(phrase)
#: xml/gcut-data.xml:32(phrase) xml/gcut-data.xml:34(phrase)
#: xml/gcut-data.xml:35(phrase) xml/gcut-data.xml:36(phrase)
#: xml/gcut-data.xml:37(phrase) xml/gcut-data.xml:39(phrase)
#: xml/gcut-data.xml:41(phrase) xml/gcut-data.xml:43(phrase)
#: xml/gcut-data.xml:45(phrase) xml/gcut-data.xml:47(phrase)
#: xml/gcut-data.xml:49(phrase) xml/gcut-data.xml:51(phrase)
#: xml/gcut-data-helper.xml:24(phrase) xml/gcut-data-helper.xml:26(phrase)
#: xml/gcut-data-helper.xml:28(phrase) xml/gcut-data-helper.xml:30(phrase)
#: xml/gcut-data-helper.xml:32(phrase) xml/gcut-data-helper.xml:34(phrase)
#: xml/gcut-data-helper.xml:36(phrase) xml/gcut-data-helper.xml:38(phrase)
#: xml/gcut-data-helper.xml:40(phrase) xml/gcut-data-helper.xml:42(phrase)
#: xml/gcut-data-helper.xml:44(phrase) xml/gcut-data-helper.xml:46(phrase)
#: xml/gcut-data-helper.xml:48(phrase) xml/gcut-data-helper.xml:50(phrase)
#: xml/gcut-data-helper.xml:52(phrase) xml/gcut-assertions.xml:25(phrase)
#: xml/gcut-assertions.xml:27(phrase) xml/gcut-assertions.xml:29(phrase)
#: xml/gcut-assertions.xml:31(phrase) xml/gcut-assertions.xml:33(phrase)
#: xml/gcut-assertions.xml:35(phrase) xml/gcut-assertions.xml:37(phrase)
#: xml/gcut-assertions.xml:39(phrase) xml/gcut-assertions.xml:41(phrase)
#: xml/gcut-assertions.xml:43(phrase) xml/gcut-assertions.xml:45(phrase)
#: xml/gcut-assertions.xml:47(phrase) xml/gcut-assertions.xml:49(phrase)
#: xml/gcut-assertions.xml:51(phrase) xml/gcut-assertions.xml:53(phrase)
#: xml/gcut-assertions.xml:55(phrase) xml/gcut-assertions.xml:57(phrase)
#: xml/gcut-assertions.xml:59(phrase) xml/gcut-assertions.xml:61(phrase)
#: xml/gcut-assertions.xml:63(phrase) xml/gcut-assertions.xml:65(phrase)
#: xml/gcut-assertions.xml:67(phrase) xml/gcut-assertions.xml:69(phrase)
#: xml/gcut-assertions.xml:71(phrase) xml/gcut-assertions.xml:73(phrase)
#: xml/gcut-assertions.xml:75(phrase) xml/gcut-assertions.xml:77(phrase)
#: xml/gcut-assertions.xml:79(phrase) xml/gcut-assertions.xml:81(phrase)
#: xml/gcut-assertions.xml:83(phrase) xml/gcut-assertions.xml:85(phrase)
#: xml/gcut-assertions.xml:87(phrase) xml/gcut-assertions.xml:89(phrase)
#: xml/gcut-assertions-helper.xml:24(phrase)
#: xml/gcut-assertions-helper.xml:26(phrase)
#: xml/gcut-assertions-helper.xml:28(phrase)
#: xml/gcut-assertions-helper.xml:30(phrase)
#: xml/gcut-assertions-helper.xml:32(phrase)
#: xml/gcut-assertions-helper.xml:34(phrase)
#: xml/gcut-assertions-helper.xml:36(phrase)
#: xml/gcut-assertions-helper.xml:38(phrase)
#: xml/gcut-assertions-helper.xml:40(phrase)
#: xml/gcut-assertions-helper.xml:42(phrase)
#: xml/gcut-assertions-helper.xml:44(phrase)
#: xml/gcut-assertions-helper.xml:46(phrase)
#: xml/gcut-assertions-helper.xml:48(phrase)
#: xml/gcut-assertions-helper.xml:50(phrase)
#: xml/gcut-assertions-helper.xml:52(phrase)
#: xml/gcut-assertions-helper.xml:54(phrase)
#: xml/gcut-assertions-helper.xml:56(phrase)
#: xml/gcut-assertions-helper.xml:58(phrase)
#: xml/gcut-assertions-helper.xml:60(phrase)
#: xml/gcut-assertions-helper.xml:62(phrase)
#: xml/gcut-assertions-helper.xml:64(phrase)
#: xml/gcut-assertions-helper.xml:66(phrase)
#: xml/gcut-assertions-helper.xml:68(phrase)
#: xml/gcut-assertions-helper.xml:70(phrase)
#: xml/gcut-assertions-helper.xml:72(phrase) xml/cutter.xml:24(phrase)
#: xml/cutter.xml:26(phrase) xml/cutter.xml:28(phrase)
#: xml/cutter.xml:30(phrase) xml/cutter.xml:32(phrase)
#: xml/cutter.xml:34(phrase) xml/cutter.xml:35(phrase)
#: xml/cutter.xml:36(phrase) xml/cutter.xml:38(phrase)
#: xml/cutter.xml:40(phrase) xml/cutter.xml:42(phrase)
#: xml/cutter.xml:44(phrase) xml/cutter.xml:46(phrase)
#: xml/cutter.xml:48(phrase) xml/cutter.xml:50(phrase)
#: xml/cut-version.xml:23(phrase) xml/cut-types.xml:24(phrase)
#: xml/cut-types.xml:26(phrase) xml/cut-test-utils.xml:24(phrase)
#: xml/cut-test-utils.xml:26(phrase) xml/cut-test-utils.xml:28(phrase)
#: xml/cut-test-utils.xml:30(phrase) xml/cut-test-utils.xml:32(phrase)
#: xml/cut-test-utils.xml:34(phrase) xml/cut-test-utils.xml:36(phrase)
#: xml/cut-test-utils.xml:38(phrase) xml/cut-test-utils.xml:40(phrase)
#: xml/cut-test-utils.xml:42(phrase) xml/cut-test-utils.xml:43(phrase)
#: xml/cut-test-utils.xml:45(phrase) xml/cut-test-utils.xml:47(phrase)
#: xml/cut-test-utils.xml:49(phrase) xml/cut-test-utils.xml:51(phrase)
#: xml/cut-test-utils.xml:53(phrase) xml/cut-test-utils.xml:55(phrase)
#: xml/cut-test-utils.xml:57(phrase) xml/cut-test-utils.xml:59(phrase)
#: xml/cut-test-utils.xml:61(phrase) xml/cut-test-utils.xml:63(phrase)
#: xml/cut-string-diff-writer.xml:24(phrase)
#: xml/cut-string-diff-writer.xml:26(phrase)
#: xml/cut-multi-process.xml:25(phrase) xml/cut-multi-process.xml:27(phrase)
#: xml/cut-multi-process.xml:29(phrase) xml/cut-multi-process.xml:31(phrase)
#: xml/cut-multi-process.xml:33(phrase) xml/cut-multi-process.xml:35(phrase)
#: xml/cut-multi-process.xml:37(phrase) xml/cut-multi-process.xml:39(phrase)
#: xml/cut-multi-process.xml:41(phrase) xml/cut-multi-process.xml:43(phrase)
#: xml/cut-multi-process.xml:45(phrase) xml/cut-multi-process.xml:47(phrase)
#: xml/cut-multi-process.xml:49(phrase) xml/cut-multi-process.xml:51(phrase)
#: xml/cut-multi-process.xml:53(phrase) xml/cut-multi-process.xml:55(phrase)
#: xml/cut-multi-process.xml:57(phrase) xml/cut-multi-process.xml:59(phrase)
#: xml/cut-multi-process.xml:61(phrase) xml/cut-multi-process.xml:63(phrase)
#: xml/cut-multi-process.xml:65(phrase) xml/cut-multi-process.xml:67(phrase)
#: xml/cut-multi-process.xml:69(phrase) xml/cut-multi-process.xml:71(phrase)
#: xml/cut-multi-process.xml:73(phrase) xml/cut-multi-process.xml:75(phrase)
#: xml/cut-multi-process.xml:77(phrase) xml/cut-multi-process.xml:79(phrase)
#: xml/cut-multi-process.xml:81(phrase) xml/cut-multi-process.xml:83(phrase)
#: xml/cut-multi-process.xml:85(phrase) xml/cut-multi-process.xml:87(phrase)
#: xml/cut-logger.xml:23(phrase) xml/cut-logger.xml:24(phrase)
#: xml/cut-logger.xml:25(phrase) xml/cut-logger.xml:26(phrase)
#: xml/cut-logger.xml:27(phrase) xml/cut-logger.xml:28(phrase)
#: xml/cut-logger.xml:29(phrase) xml/cut-logger.xml:30(phrase)
#: xml/cut-logger.xml:31(phrase) xml/cut-logger.xml:34(phrase)
#: xml/cut-logger.xml:42(phrase) xml/cut-logger.xml:44(phrase)
#: xml/cut-logger.xml:46(phrase) xml/cut-logger.xml:48(phrase)
#: xml/cut-logger.xml:50(phrase) xml/cut-logger.xml:52(phrase)
#: xml/cut-logger.xml:54(phrase) xml/cut-logger.xml:56(phrase)
#: xml/cut-logger.xml:58(phrase) xml/cut-logger.xml:60(phrase)
#: xml/cut-logger.xml:62(phrase) xml/cut-logger.xml:64(phrase)
#: xml/cut-logger.xml:66(phrase) xml/cut-logger.xml:68(phrase)
#: xml/cut-logger.xml:70(phrase) xml/cut-logger.xml:72(phrase)
#: xml/cut-logger.xml:74(phrase) xml/cut-logger.xml:76(phrase)
#: xml/cut-logger.xml:78(phrase) xml/cut-logger.xml:80(phrase)
#: xml/cut-logger.xml:82(phrase) xml/cut-logger.xml:84(phrase)
#: xml/cut-logger.xml:85(phrase) xml/cut-logger.xml:87(phrase)
#: xml/cut-loader-customizer.xml:24(phrase)
#: xml/cut-loader-customizer.xml:26(phrase) xml/cut-helper.xml:25(phrase)
#: xml/cut-helper.xml:27(phrase) xml/cut-helper.xml:29(phrase)
#: xml/cut-helper.xml:31(phrase) xml/cut-helper.xml:33(phrase)
#: xml/cut-helper.xml:34(phrase) xml/cut-helper.xml:35(phrase)
#: xml/cut-helper.xml:37(phrase) xml/cut-helper.xml:38(phrase)
#: xml/cut-helper.xml:39(phrase) xml/cut-helper.xml:41(phrase)
#: xml/cut-helper.xml:43(phrase) xml/cut-helper.xml:45(phrase)
#: xml/cut-helper.xml:46(phrase) xml/cut-helper.xml:47(phrase)
#: xml/cut-helper.xml:49(phrase) xml/cut-helper.xml:51(phrase)
#: xml/cut-glib-compatible.xml:23(phrase)
#: xml/cut-glib-compatible.xml:24(phrase)
#: xml/cut-glib-compatible.xml:25(phrase)
#: xml/cut-glib-compatible.xml:27(phrase)
#: xml/cut-glib-compatible.xml:29(phrase)
#: xml/cut-glib-compatible.xml:31(phrase) xml/cut-experimental.xml:24(phrase)
#: xml/cut-experimental.xml:25(phrase) xml/cut-experimental.xml:26(phrase)
#: xml/cut-console.xml:24(phrase) xml/cut-console.xml:26(phrase)
#: xml/cut-console-diff-writer.xml:24(phrase)
#: xml/cut-console-diff-writer.xml:26(phrase)
#: xml/cut-console-diff-writer.xml:28(phrase)
#: xml/cut-console-diff-writer.xml:30(phrase)
#: xml/cut-console-diff-writer.xml:32(phrase)
#: xml/cut-console-diff-writer.xml:34(phrase)
#: xml/cut-console-diff-writer.xml:36(phrase)
#: xml/cut-console-diff-writer.xml:38(phrase)
#: xml/cut-console-diff-writer.xml:40(phrase)
#: xml/cut-console-diff-writer.xml:42(phrase)
#: xml/cut-console-diff-writer.xml:44(phrase)
#: xml/cut-console-diff-writer.xml:46(phrase)
#: xml/cut-console-diff-writer.xml:48(phrase) xml/cut-assertions.xml:24(phrase)
#: xml/cut-assertions.xml:26(phrase) xml/cut-assertions.xml:28(phrase)
#: xml/cut-assertions.xml:30(phrase) xml/cut-assertions.xml:32(phrase)
#: xml/cut-assertions.xml:34(phrase) xml/cut-assertions.xml:36(phrase)
#: xml/cut-assertions.xml:38(phrase) xml/cut-assertions.xml:40(phrase)
#: xml/cut-assertions.xml:42(phrase) xml/cut-assertions.xml:43(phrase)
#: xml/cut-assertions.xml:44(phrase) xml/cut-assertions.xml:45(phrase)
#: xml/cut-assertions.xml:46(phrase) xml/cut-assertions.xml:47(phrase)
#: xml/cut-assertions.xml:48(phrase) xml/cut-assertions.xml:49(phrase)
#: xml/cut-assertions.xml:50(phrase) xml/cut-assertions.xml:51(phrase)
#: xml/cut-assertions.xml:52(phrase) xml/cut-assertions.xml:53(phrase)
#: xml/cut-assertions.xml:54(phrase) xml/cut-assertions.xml:55(phrase)
#: xml/cut-assertions.xml:56(phrase) xml/cut-assertions.xml:57(phrase)
#: xml/cut-assertions.xml:58(phrase) xml/cut-assertions.xml:59(phrase)
#: xml/cut-assertions.xml:60(phrase) xml/cut-assertions.xml:61(phrase)
#: xml/cut-assertions.xml:62(phrase) xml/cut-assertions.xml:64(phrase)
#: xml/cut-assertions.xml:66(phrase) xml/cut-assertions.xml:67(phrase)
#: xml/cut-assertions.xml:68(phrase) xml/cut-assertions.xml:69(phrase)
#: xml/cut-assertions.xml:70(phrase) xml/cut-assertions.xml:71(phrase)
#: xml/cut-assertions.xml:72(phrase) xml/cut-assertions.xml:73(phrase)
#: xml/cut-assertions.xml:74(phrase) xml/cut-assertions.xml:75(phrase)
#: xml/cut-assertions.xml:76(phrase) xml/cut-assertions.xml:77(phrase)
#: xml/cut-assertions.xml:78(phrase) xml/cut-assertions.xml:79(phrase)
#: xml/cut-assertions.xml:80(phrase) xml/cut-assertions.xml:81(phrase)
#: xml/cut-assertions.xml:82(phrase) xml/cut-assertions.xml:83(phrase)
#: xml/cut-assertions.xml:84(phrase) xml/cut-assertions.xml:85(phrase)
#: xml/cut-assertions.xml:86(phrase) xml/cut-assertions.xml:88(phrase)
#: xml/cut-assertions.xml:90(phrase) xml/cut-assertions.xml:92(phrase)
#: xml/cut-assertions.xml:94(phrase) xml/cut-assertions.xml:95(phrase)
#: xml/cut-assertions.xml:96(phrase) xml/cut-assertions.xml:98(phrase)
#: xml/cut-assertions.xml:100(phrase) xml/cut-assertions.xml:102(phrase)
#: xml/cut-assertions.xml:104(phrase) xml/cut-assertions.xml:106(phrase)
#: xml/cut-assertions.xml:108(phrase) xml/cut-assertions.xml:110(phrase)
#: xml/cut-assertions.xml:112(phrase) xml/cut-assertions.xml:114(phrase)
#: xml/cut-assertions.xml:116(phrase) xml/cut-assertions.xml:117(phrase)
#: xml/cut-assertions.xml:118(phrase) xml/cut-assertions.xml:119(phrase)
#: xml/cut-assertions.xml:120(phrase) xml/cut-assertions.xml:121(phrase)
#: xml/cut-assertions.xml:122(phrase) xml/cut-assertions.xml:124(phrase)
#: xml/cut-assertions.xml:126(phrase) xml/cut-assertions.xml:128(phrase)
#: xml/cut-assertions.xml:130(phrase) xml/cut-assertions.xml:132(phrase)
#: xml/cut-assertions.xml:134(phrase) xml/cut-assertions.xml:136(phrase)
#: xml/cut-assertions.xml:138(phrase) xml/cut-assertions.xml:140(phrase)
#: xml/cut-assertions.xml:142(phrase) xml/cut-assertions.xml:143(phrase)
#: xml/cut-assertions.xml:144(phrase) xml/cut-assertions.xml:145(phrase)
#: xml/cut-assertions.xml:147(phrase) xml/cut-assertions.xml:149(phrase)
#: xml/cut-assertions.xml:151(phrase) xml/cut-assertions.xml:153(phrase)
#: xml/cut-assertions.xml:155(phrase) xml/cut-assertions.xml:157(phrase)
#: xml/cut-assertions.xml:159(phrase) xml/cut-assertions.xml:161(phrase)
#: xml/cppcutter.xml:23(phrase) xml/cppcut-test.xml:24(phrase)
#: xml/cppcut-test-methods.xml:24(phrase)
#: xml/cppcut-test-methods.xml:26(phrase)
#: xml/cppcut-test-iterator.xml:24(phrase)
#: xml/cppcut-iterated-test.xml:24(phrase) xml/cppcut-assertions.xml:24(phrase)
#: xml/cppcut-assertions.xml:25(phrase) xml/cppcut-assertions.xml:26(phrase)
#: xml/cppcut-assertions.xml:27(phrase) xml/cppcut-assertions.xml:28(phrase)
msgid "()"
msgstr ""

#: xml/soupcut-server.xml:24(entry) xml/soupcut-server.xml:26(entry)
#: xml/soupcut-server.xml:28(entry) xml/soupcut-client.xml:24(entry)
#: xml/soupcut-client.xml:26(entry) xml/soupcut-client.xml:28(entry)
#: xml/soupcut-client.xml:30(entry) xml/soupcut-client.xml:32(entry)
#: xml/soupcut-client.xml:34(entry) xml/soupcut-client.xml:36(entry)
#: xml/soupcut-assertions.xml:25(entry) xml/soupcut-assertions.xml:27(entry)
#: xml/soupcut-assertions.xml:29(entry) xml/soupcut-assertions.xml:31(entry)
#: xml/soupcut-assertions.xml:33(entry)
#: xml/soupcut-assertions-helper.xml:24(entry)
#: xml/soupcut-assertions-helper.xml:26(entry)
#: xml/soupcut-assertions-helper.xml:28(entry)
#: xml/soupcut-assertions-helper.xml:30(entry)
#: xml/soupcut-assertions-helper.xml:32(entry) xml/gdkcut-pixbuf.xml:24(entry)
#: xml/gdkcut-pixbuf.xml:26(entry) xml/gdkcut-pixbuf.xml:28(entry)
#: xml/gdkcut-pixbuf.xml:30(entry) xml/gdkcut-pixbuf-assertions.xml:25(entry)
#: xml/gdkcut-pixbuf-assertions-helper.xml:24(entry)
#: xml/gcut-value-equal.xml:25(entry) xml/gcut-value-equal.xml:27(entry)
#: xml/gcut-test-utils.xml:25(entry) xml/gcut-test-utils.xml:27(entry)
#: xml/gcut-test-utils.xml:29(entry) xml/gcut-test-utils.xml:31(entry)
#: xml/gcut-test-utils.xml:33(entry) xml/gcut-test-utils.xml:35(entry)
#: xml/gcut-test-utils.xml:37(entry) xml/gcut-test-utils.xml:39(entry)
#: xml/gcut-test-utils.xml:41(entry) xml/gcut-test-utils.xml:43(entry)
#: xml/gcut-test-utils.xml:45(entry) xml/gcut-test-utils.xml:47(entry)
#: xml/gcut-test-utils.xml:49(entry) xml/gcut-test-utils.xml:51(entry)
#: xml/gcut-test-utils.xml:54(entry) xml/gcut-test-utils.xml:57(entry)
#: xml/gcut-test-utils.xml:59(entry) xml/gcut-test-utils.xml:61(entry)
#: xml/gcut-test-utils.xml:63(entry) xml/gcut-test-utils.xml:65(entry)
#: xml/gcut-test-utils.xml:67(entry) xml/gcut-string.xml:25(entry)
#: xml/gcut-string.xml:27(entry) xml/gcut-string-io-channel.xml:24(entry)
#: xml/gcut-string-io-channel.xml:26(entry)
#: xml/gcut-string-io-channel.xml:28(entry)
#: xml/gcut-string-io-channel.xml:30(entry)
#: xml/gcut-string-io-channel.xml:32(entry)
#: xml/gcut-string-io-channel.xml:34(entry)
#: xml/gcut-string-io-channel.xml:36(entry)
#: xml/gcut-string-io-channel.xml:38(entry)
#: xml/gcut-string-io-channel.xml:40(entry)
#: xml/gcut-string-io-channel.xml:42(entry)
#: xml/gcut-string-io-channel.xml:44(entry)
#: xml/gcut-string-io-channel.xml:46(entry)
#: xml/gcut-string-io-channel.xml:48(entry) xml/gcut-public.xml:24(entry)
#: xml/gcut-public.xml:26(entry) xml/gcut-public.xml:28(entry)
#: xml/gcut-public.xml:30(entry) xml/gcut-public.xml:32(entry)
#: xml/gcut-public.xml:34(entry) xml/gcut-public.xml:36(entry)
#: xml/gcut-process.xml:25(entry) xml/gcut-process.xml:27(entry)
#: xml/gcut-process.xml:29(entry) xml/gcut-process.xml:31(entry)
#: xml/gcut-process.xml:33(entry) xml/gcut-process.xml:35(entry)
#: xml/gcut-process.xml:37(entry) xml/gcut-process.xml:39(entry)
#: xml/gcut-process.xml:41(entry) xml/gcut-process.xml:43(entry)
#: xml/gcut-process.xml:45(entry) xml/gcut-process.xml:47(entry)
#: xml/gcut-process.xml:49(entry) xml/gcut-process.xml:51(entry)
#: xml/gcut-process.xml:53(entry) xml/gcut-process.xml:55(entry)
#: xml/gcut-process.xml:57(entry) xml/gcut-process.xml:59(entry)
#: xml/gcut-process.xml:61(entry) xml/gcut-process.xml:63(entry)
#: xml/gcut-process.xml:65(entry) xml/gcut-process.xml:67(entry)
#: xml/gcut-process.xml:69(entry) xml/gcut-process.xml:71(entry)
#: xml/gcut-process.xml:73(entry) xml/gcut-process.xml:75(entry)
#: xml/gcut-process.xml:77(entry) xml/gcut-process.xml:79(entry)
#: xml/gcut-object.xml:25(entry) xml/gcut-object.xml:27(entry)
#: xml/gcut-object.xml:29(entry) xml/gcut-main.xml:24(entry)
#: xml/gcut-main.xml:26(entry) xml/gcut-main.xml:28(entry)
#: xml/gcut-main.xml:30(entry) xml/gcut-list.xml:25(entry)
#: xml/gcut-list.xml:27(entry) xml/gcut-list.xml:29(entry)
#: xml/gcut-list.xml:31(entry) xml/gcut-list.xml:33(entry)
#: xml/gcut-list.xml:35(entry) xml/gcut-list.xml:37(entry)
#: xml/gcut-list.xml:39(entry) xml/gcut-list.xml:41(entry)
#: xml/gcut-list.xml:43(entry) xml/gcut-list.xml:45(entry)
#: xml/gcut-key-file.xml:24(entry) xml/gcut-key-file.xml:26(entry)
#: xml/gcut-io.xml:24(entry) xml/gcut-inspect.xml:25(entry)
#: xml/gcut-inspect.xml:27(entry) xml/gcut-inspect.xml:29(entry)
#: xml/gcut-inspect.xml:31(entry) xml/gcut-inspect.xml:33(entry)
#: xml/gcut-inspect.xml:35(entry) xml/gcut-inspect.xml:37(entry)
#: xml/gcut-inspect.xml:39(entry) xml/gcut-inspect.xml:41(entry)
#: xml/gcut-inspect.xml:43(entry) xml/gcut-inspect.xml:45(entry)
#: xml/gcut-inspect.xml:47(entry) xml/gcut-inspect.xml:49(entry)
#: xml/gcut-inspect.xml:51(entry) xml/gcut-hash-table.xml:25(entry)
#: xml/gcut-hash-table.xml:27(entry) xml/gcut-hash-table.xml:29(entry)
#: xml/gcut-hash-table.xml:31(entry) xml/gcut-hash-table.xml:33(entry)
#: xml/gcut-hash-table.xml:35(entry) xml/gcut-glib-event-loop.xml:25(entry)
#: xml/gcut-event-loop.xml:25(entry) xml/gcut-event-loop.xml:27(entry)
#: xml/gcut-event-loop.xml:29(entry) xml/gcut-event-loop.xml:31(entry)
#: xml/gcut-event-loop.xml:33(entry) xml/gcut-event-loop.xml:35(entry)
#: xml/gcut-event-loop.xml:37(entry) xml/gcut-event-loop.xml:39(entry)
#: xml/gcut-event-loop.xml:41(entry) xml/gcut-event-loop.xml:43(entry)
#: xml/gcut-event-loop.xml:45(entry) xml/gcut-event-loop.xml:47(entry)
#: xml/gcut-error.xml:25(entry) xml/gcut-error.xml:27(entry)
#: xml/gcut-enum.xml:25(entry) xml/gcut-enum.xml:27(entry)
#: xml/gcut-enum.xml:29(entry) xml/gcut-enum.xml:31(entry)
#: xml/gcut-enum.xml:33(entry) xml/gcut-enum.xml:35(entry)
#: xml/gcut-egg.xml:25(entry) xml/gcut-egg.xml:27(entry)
#: xml/gcut-egg.xml:29(entry) xml/gcut-egg.xml:31(entry)
#: xml/gcut-egg.xml:33(entry) xml/gcut-egg.xml:35(entry)
#: xml/gcut-egg.xml:37(entry) xml/gcut-egg.xml:39(entry)
#: xml/gcut-egg.xml:41(entry) xml/gcut-egg.xml:43(entry)
#: xml/gcut-egg.xml:45(entry) xml/gcut-egg.xml:47(entry)
#: xml/gcut-egg.xml:49(entry) xml/gcut-egg.xml:51(entry)
#: xml/gcut-egg.xml:53(entry) xml/gcut-egg.xml:55(entry)
#: xml/gcut-egg.xml:57(entry) xml/gcut-egg.xml:59(entry)
#: xml/gcut-egg.xml:61(entry) xml/gcut-egg.xml:63(entry)
#: xml/gcut-egg.xml:65(entry) xml/gcut-data.xml:25(entry)
#: xml/gcut-data.xml:27(entry) xml/gcut-data.xml:30(entry)
#: xml/gcut-data.xml:32(entry) xml/gcut-data.xml:34(entry)
#: xml/gcut-data.xml:39(entry) xml/gcut-data.xml:41(entry)
#: xml/gcut-data.xml:43(entry) xml/gcut-data.xml:45(entry)
#: xml/gcut-data.xml:47(entry) xml/gcut-data.xml:49(entry)
#: xml/gcut-data.xml:51(entry) xml/gcut-data-helper.xml:24(entry)
#: xml/gcut-data-helper.xml:26(entry) xml/gcut-data-helper.xml:28(entry)
#: xml/gcut-data-helper.xml:30(entry) xml/gcut-data-helper.xml:32(entry)
#: xml/gcut-data-helper.xml:34(entry) xml/gcut-data-helper.xml:36(entry)
#: xml/gcut-data-helper.xml:38(entry) xml/gcut-data-helper.xml:40(entry)
#: xml/gcut-data-helper.xml:42(entry) xml/gcut-data-helper.xml:44(entry)
#: xml/gcut-data-helper.xml:46(entry) xml/gcut-data-helper.xml:48(entry)
#: xml/gcut-data-helper.xml:50(entry) xml/gcut-data-helper.xml:52(entry)
#: xml/gcut-assertions.xml:25(entry) xml/gcut-assertions.xml:27(entry)
#: xml/gcut-assertions.xml:29(entry) xml/gcut-assertions.xml:31(entry)
#: xml/gcut-assertions.xml:33(entry) xml/gcut-assertions.xml:35(entry)
#: xml/gcut-assertions.xml:37(entry) xml/gcut-assertions.xml:39(entry)
#: xml/gcut-assertions.xml:41(entry) xml/gcut-assertions.xml:43(entry)
#: xml/gcut-assertions.xml:45(entry) xml/gcut-assertions.xml:47(entry)
#: xml/gcut-assertions.xml:49(entry) xml/gcut-assertions.xml:51(entry)
#: xml/gcut-assertions.xml:53(entry) xml/gcut-assertions.xml:55(entry)
#: xml/gcut-assertions.xml:57(entry) xml/gcut-assertions.xml:59(entry)
#: xml/gcut-assertions.xml:61(entry) xml/gcut-assertions.xml:63(entry)
#: xml/gcut-assertions.xml:65(entry) xml/gcut-assertions.xml:67(entry)
#: xml/gcut-assertions.xml:69(entry) xml/gcut-assertions.xml:71(entry)
#: xml/gcut-assertions.xml:73(entry) xml/gcut-assertions.xml:75(entry)
#: xml/gcut-assertions.xml:77(entry) xml/gcut-assertions.xml:79(entry)
#: xml/gcut-assertions.xml:81(entry) xml/gcut-assertions.xml:83(entry)
#: xml/gcut-assertions.xml:85(entry) xml/gcut-assertions.xml:87(entry)
#: xml/gcut-assertions.xml:89(entry) xml/gcut-assertions-helper.xml:24(entry)
#: xml/gcut-assertions-helper.xml:26(entry)
#: xml/gcut-assertions-helper.xml:28(entry)
#: xml/gcut-assertions-helper.xml:30(entry)
#: xml/gcut-assertions-helper.xml:32(entry)
#: xml/gcut-assertions-helper.xml:34(entry)
#: xml/gcut-assertions-helper.xml:36(entry)
#: xml/gcut-assertions-helper.xml:38(entry)
#: xml/gcut-assertions-helper.xml:40(entry)
#: xml/gcut-assertions-helper.xml:42(entry)
#: xml/gcut-assertions-helper.xml:44(entry)
#: xml/gcut-assertions-helper.xml:46(entry)
#: xml/gcut-assertions-helper.xml:48(entry)
#: xml/gcut-assertions-helper.xml:50(entry)
#: xml/gcut-assertions-helper.xml:52(entry)
#: xml/gcut-assertions-helper.xml:54(entry)
#: xml/gcut-assertions-helper.xml:56(entry)
#: xml/gcut-assertions-helper.xml:58(entry)
#: xml/gcut-assertions-helper.xml:60(entry)
#: xml/gcut-assertions-helper.xml:62(entry)
#: xml/gcut-assertions-helper.xml:64(entry)
#: xml/gcut-assertions-helper.xml:66(entry)
#: xml/gcut-assertions-helper.xml:68(entry)
#: xml/gcut-assertions-helper.xml:70(entry)
#: xml/gcut-assertions-helper.xml:72(entry) xml/cutter.xml:24(entry)
#: xml/cutter.xml:26(entry) xml/cutter.xml:28(entry) xml/cutter.xml:30(entry)
#: xml/cutter.xml:32(entry) xml/cutter.xml:34(entry) xml/cutter.xml:38(entry)
#: xml/cutter.xml:40(entry) xml/cutter.xml:42(entry) xml/cutter.xml:44(entry)
#: xml/cutter.xml:46(entry) xml/cutter.xml:48(entry) xml/cutter.xml:50(entry)
#: xml/cut-test-utils.xml:24(entry) xml/cut-test-utils.xml:26(entry)
#: xml/cut-test-utils.xml:28(entry) xml/cut-test-utils.xml:30(entry)
#: xml/cut-test-utils.xml:32(entry) xml/cut-test-utils.xml:34(entry)
#: xml/cut-test-utils.xml:36(entry) xml/cut-test-utils.xml:38(entry)
#: xml/cut-test-utils.xml:40(entry) xml/cut-test-utils.xml:42(entry)
#: xml/cut-test-utils.xml:45(entry) xml/cut-test-utils.xml:47(entry)
#: xml/cut-test-utils.xml:49(entry) xml/cut-test-utils.xml:51(entry)
#: xml/cut-test-utils.xml:53(entry) xml/cut-test-utils.xml:55(entry)
#: xml/cut-test-utils.xml:57(entry) xml/cut-test-utils.xml:59(entry)
#: xml/cut-test-utils.xml:61(entry) xml/cut-test-utils.xml:63(entry)
#: xml/cut-string-diff-writer.xml:24(entry)
#: xml/cut-string-diff-writer.xml:26(entry) xml/cut-multi-process.xml:25(entry)
#: xml/cut-multi-process.xml:27(entry) xml/cut-multi-process.xml:29(entry)
#: xml/cut-multi-process.xml:31(entry) xml/cut-multi-process.xml:33(entry)
#: xml/cut-multi-process.xml:35(entry) xml/cut-multi-process.xml:37(entry)
#: xml/cut-multi-process.xml:39(entry) xml/cut-multi-process.xml:41(entry)
#: xml/cut-multi-process.xml:43(entry) xml/cut-multi-process.xml:45(entry)
#: xml/cut-multi-process.xml:47(entry) xml/cut-multi-process.xml:49(entry)
#: xml/cut-multi-process.xml:51(entry) xml/cut-multi-process.xml:53(entry)
#: xml/cut-multi-process.xml:55(entry) xml/cut-multi-process.xml:57(entry)
#: xml/cut-multi-process.xml:59(entry) xml/cut-multi-process.xml:61(entry)
#: xml/cut-multi-process.xml:63(entry) xml/cut-multi-process.xml:65(entry)
#: xml/cut-multi-process.xml:67(entry) xml/cut-multi-process.xml:69(entry)
#: xml/cut-multi-process.xml:71(entry) xml/cut-multi-process.xml:73(entry)
#: xml/cut-multi-process.xml:75(entry) xml/cut-multi-process.xml:77(entry)
#: xml/cut-multi-process.xml:79(entry) xml/cut-multi-process.xml:81(entry)
#: xml/cut-multi-process.xml:83(entry) xml/cut-multi-process.xml:85(entry)
#: xml/cut-multi-process.xml:87(entry) xml/cut-logger.xml:44(entry)
#: xml/cut-logger.xml:46(entry) xml/cut-logger.xml:48(entry)
#: xml/cut-logger.xml:50(entry) xml/cut-logger.xml:52(entry)
#: xml/cut-logger.xml:54(entry) xml/cut-logger.xml:56(entry)
#: xml/cut-logger.xml:58(entry) xml/cut-logger.xml:60(entry)
#: xml/cut-logger.xml:62(entry) xml/cut-logger.xml:64(entry)
#: xml/cut-logger.xml:66(entry) xml/cut-logger.xml:68(entry)
#: xml/cut-logger.xml:70(entry) xml/cut-logger.xml:72(entry)
#: xml/cut-logger.xml:74(entry) xml/cut-logger.xml:76(entry)
#: xml/cut-logger.xml:78(entry) xml/cut-logger.xml:80(entry)
#: xml/cut-logger.xml:82(entry) xml/cut-logger.xml:84(entry)
#: xml/cut-logger.xml:87(entry) xml/cut-loader-customizer.xml:24(entry)
#: xml/cut-loader-customizer.xml:26(entry) xml/cut-helper.xml:25(entry)
#: xml/cut-helper.xml:27(entry) xml/cut-helper.xml:29(entry)
#: xml/cut-helper.xml:31(entry) xml/cut-helper.xml:33(entry)
#: xml/cut-helper.xml:37(entry) xml/cut-helper.xml:41(entry)
#: xml/cut-helper.xml:43(entry) xml/cut-helper.xml:45(entry)
#: xml/cut-helper.xml:49(entry) xml/cut-helper.xml:51(entry)
#: xml/cut-glib-compatible.xml:29(entry) xml/cut-glib-compatible.xml:31(entry)
#: xml/cut-console.xml:24(entry) xml/cut-console.xml:26(entry)
#: xml/cut-console-diff-writer.xml:24(entry)
#: xml/cut-console-diff-writer.xml:26(entry)
#: xml/cut-console-diff-writer.xml:28(entry)
#: xml/cut-console-diff-writer.xml:30(entry)
#: xml/cut-console-diff-writer.xml:32(entry)
#: xml/cut-console-diff-writer.xml:34(entry)
#: xml/cut-console-diff-writer.xml:36(entry)
#: xml/cut-console-diff-writer.xml:38(entry)
#: xml/cut-console-diff-writer.xml:40(entry)
#: xml/cut-console-diff-writer.xml:42(entry)
#: xml/cut-console-diff-writer.xml:44(entry)
#: xml/cut-console-diff-writer.xml:46(entry)
#: xml/cut-console-diff-writer.xml:48(entry) xml/cut-assertions.xml:24(entry)
#: xml/cut-assertions.xml:26(entry) xml/cut-assertions.xml:28(entry)
#: xml/cut-assertions.xml:30(entry) xml/cut-assertions.xml:32(entry)
#: xml/cut-assertions.xml:34(entry) xml/cut-assertions.xml:36(entry)
#: xml/cut-assertions.xml:38(entry) xml/cut-assertions.xml:40(entry)
#: xml/cut-assertions.xml:42(entry) xml/cut-assertions.xml:64(entry)
#: xml/cut-assertions.xml:66(entry) xml/cut-assertions.xml:88(entry)
#: xml/cut-assertions.xml:90(entry) xml/cut-assertions.xml:92(entry)
#: xml/cut-assertions.xml:94(entry) xml/cut-assertions.xml:98(entry)
#: xml/cut-assertions.xml:100(entry) xml/cut-assertions.xml:102(entry)
#: xml/cut-assertions.xml:104(entry) xml/cut-assertions.xml:106(entry)
#: xml/cut-assertions.xml:108(entry) xml/cut-assertions.xml:110(entry)
#: xml/cut-assertions.xml:112(entry) xml/cut-assertions.xml:114(entry)
#: xml/cut-assertions.xml:116(entry) xml/cut-assertions.xml:124(entry)
#: xml/cut-assertions.xml:126(entry) xml/cut-assertions.xml:128(entry)
#: xml/cut-assertions.xml:130(entry) xml/cut-assertions.xml:132(entry)
#: xml/cut-assertions.xml:134(entry) xml/cut-assertions.xml:136(entry)
#: xml/cut-assertions.xml:138(entry) xml/cut-assertions.xml:140(entry)
#: xml/cut-assertions.xml:142(entry) xml/cut-assertions.xml:147(entry)
#: xml/cut-assertions.xml:149(entry) xml/cut-assertions.xml:151(entry)
#: xml/cut-assertions.xml:153(entry) xml/cut-assertions.xml:155(entry)
#: xml/cut-assertions.xml:157(entry) xml/cut-assertions.xml:159(entry)
#: xml/cut-assertions.xml:161(entry) xml/cppcut-test.xml:24(entry)
#: xml/cppcut-test-methods.xml:24(entry) xml/cppcut-test-methods.xml:26(entry)
#: xml/cppcut-test-iterator.xml:24(entry)
#: xml/cppcut-iterated-test.xml:24(entry)
msgid "<placeholder-1/> <placeholder-2/>"
msgstr ""

#: xml/soupcut-server.xml:26(link) xml/soupcut-server.xml:69(primary)
#: xml/api-index-full.xml:584(link) xml/api-index-1.0.8.xml:25(link)
msgid "soupcut_server_take_new"
msgstr ""

#: xml/soupcut-server.xml:27(returnvalue) xml/gdkcut-pixbuf.xml:29(returnvalue)
#: xml/gcut-string.xml:26(returnvalue) xml/gcut-process.xml:44(returnvalue)
#: xml/gcut-object.xml:26(returnvalue) xml/gcut-object.xml:28(returnvalue)
#: xml/gcut-list.xml:26(returnvalue) xml/gcut-list.xml:30(returnvalue)
#: xml/gcut-list.xml:34(returnvalue) xml/gcut-list.xml:38(returnvalue)
#: xml/gcut-list.xml:40(returnvalue) xml/gcut-list.xml:42(returnvalue)
#: xml/gcut-list.xml:44(returnvalue) xml/gcut-io.xml:23(returnvalue)
#: xml/gcut-hash-table.xml:26(returnvalue)
#: xml/gcut-hash-table.xml:28(returnvalue)
#: xml/gcut-hash-table.xml:32(returnvalue) xml/gcut-error.xml:26(returnvalue)
#: xml/gcut-enum.xml:26(returnvalue) xml/gcut-enum.xml:30(returnvalue)
#: xml/gcut-egg.xml:42(returnvalue) xml/gcut-data.xml:29(returnvalue)
#: xml/gcut-data-helper.xml:23(returnvalue)
#: xml/gcut-data-helper.xml:25(returnvalue)
#: xml/cut-string-diff-writer.xml:25(returnvalue)
#: xml/cut-console-diff-writer.xml:27(returnvalue)
#: xml/cut-console-diff-writer.xml:31(returnvalue)
#: xml/cut-console-diff-writer.xml:35(returnvalue)
#: xml/cut-console-diff-writer.xml:39(returnvalue)
#: xml/cut-console-diff-writer.xml:43(returnvalue)
#: xml/cut-console-diff-writer.xml:47(returnvalue)
msgid "gchar"
msgstr ""

#: xml/soupcut-server.xml:27(entry) xml/gcut-data.xml:29(entry)
#: xml/gcut-data-helper.xml:25(entry) xml/cut-string-diff-writer.xml:25(entry)
#: xml/cut-console-diff-writer.xml:27(entry)
#: xml/cut-console-diff-writer.xml:31(entry)
#: xml/cut-console-diff-writer.xml:35(entry)
#: xml/cut-console-diff-writer.xml:39(entry)
#: xml/cut-console-diff-writer.xml:43(entry)
#: xml/cut-console-diff-writer.xml:47(entry)
msgid "const <link linkend=\"gchar\"><placeholder-1/></link> *"
msgstr ""

#: xml/soupcut-server.xml:28(link) xml/soupcut-server.xml:93(primary)
#: xml/api-index-full.xml:582(link) xml/api-index-1.0.8.xml:23(link)
msgid "soupcut_server_build_uri"
msgstr ""

#: xml/soupcut-server.xml:38(para)
msgid ""
"Useful wrappers for <link linkend=\"SoupServer\"><type>SoupServer</type></"
"link> are provided."
msgstr ""
"<link linkend=\"SoupServer\"><type>SoupServer</type></link>の便利なラッパー。"

#: xml/soupcut-server.xml:44(title)
msgid "soupcut_server_take ()"
msgstr ""

#: xml/soupcut-server.xml:46(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"SoupServer\"><returnvalue>SoupServer</returnvalue></link> *\n"
"soupcut_server_take (<parameter><link linkend=\"SoupServer\"><type>SoupServer</type></link> *server</parameter>);"
msgstr ""

#: xml/soupcut-server.xml:48(para)
msgid "<parameter>server</parameter> is shut down and unref when tear down."
msgstr ""
"サーバーは tear down 時に自動的にシャットダウンされ、<link linkend=\"g-"
"object-unref\"><function>g_object_unref()</function></link>により解放されま"
"す。"

#: xml/soupcut-server.xml:51(title) xml/soupcut-server.xml:76(title)
#: xml/soupcut-server.xml:101(title) xml/soupcut-client.xml:94(title)
#: xml/soupcut-client.xml:120(title) xml/soupcut-client.xml:153(title)
#: xml/soupcut-client.xml:186(title) xml/soupcut-client.xml:209(title)
#: xml/soupcut-client.xml:232(title) xml/soupcut-assertions.xml:59(title)
#: xml/soupcut-assertions.xml:90(title) xml/soupcut-assertions.xml:117(title)
#: xml/soupcut-assertions.xml:143(title) xml/soupcut-assertions.xml:173(title)
#: xml/gdkcut-pixbuf-assertions.xml:68(title)
#: xml/gcut-value-equal.xml:57(title) xml/gcut-value-equal.xml:95(title)
#: xml/gcut-types.xml:54(title) xml/gcut-test-utils.xml:95(title)
#: xml/gcut-test-utils.xml:121(title) xml/gcut-test-utils.xml:148(title)
#: xml/gcut-test-utils.xml:179(title) xml/gcut-test-utils.xml:205(title)
#: xml/gcut-test-utils.xml:228(title) xml/gcut-test-utils.xml:261(title)
#: xml/gcut-test-utils.xml:294(title) xml/gcut-test-utils.xml:330(title)
#: xml/gcut-test-utils.xml:361(title) xml/gcut-test-utils.xml:387(title)
#: xml/gcut-test-utils.xml:418(title) xml/gcut-test-utils.xml:455(title)
#: xml/gcut-test-utils.xml:486(title) xml/gcut-test-utils.xml:521(title)
#: xml/gcut-test-utils.xml:544(title) xml/gcut-test-utils.xml:571(title)
#: xml/gcut-test-utils.xml:593(title) xml/gcut-test-utils.xml:614(title)
#: xml/gcut-test-utils.xml:647(title) xml/gcut-test-utils.xml:681(title)
#: xml/gcut-test-utils.xml:714(title) xml/gcut-string.xml:55(title)
#: xml/gcut-string.xml:85(title) xml/gcut-process.xml:223(title)
#: xml/gcut-process.xml:250(title) xml/gcut-process.xml:274(title)
#: xml/gcut-process.xml:302(title) xml/gcut-process.xml:330(title)
#: xml/gcut-process.xml:354(title) xml/gcut-process.xml:379(title)
#: xml/gcut-process.xml:402(title) xml/gcut-process.xml:426(title)
#: xml/gcut-process.xml:453(title) xml/gcut-process.xml:479(title)
#: xml/gcut-process.xml:505(title) xml/gcut-process.xml:537(title)
#: xml/gcut-process.xml:569(title) xml/gcut-process.xml:601(title)
#: xml/gcut-process.xml:634(title) xml/gcut-process.xml:660(title)
#: xml/gcut-process.xml:682(title) xml/gcut-process.xml:706(title)
#: xml/gcut-process.xml:730(title) xml/gcut-process.xml:754(title)
#: xml/gcut-process.xml:778(title) xml/gcut-process.xml:802(title)
#: xml/gcut-process.xml:827(title) xml/gcut-process.xml:855(title)
#: xml/gcut-process.xml:878(title) xml/gcut-process.xml:904(title)
#: xml/gcut-object.xml:64(title) xml/gcut-object.xml:101(title)
#: xml/gcut-object.xml:129(title) xml/gcut-list.xml:92(title)
#: xml/gcut-list.xml:136(title) xml/gcut-list.xml:171(title)
#: xml/gcut-list.xml:202(title) xml/gcut-list.xml:231(title)
#: xml/gcut-list.xml:262(title) xml/gcut-list.xml:291(title)
#: xml/gcut-list.xml:322(title) xml/gcut-list.xml:348(title)
#: xml/gcut-list.xml:376(title) xml/gcut-list.xml:407(title)
#: xml/gcut-list.xml:439(title) xml/gcut-list.xml:471(title)
#: xml/gcut-list.xml:500(title) xml/gcut-list.xml:532(title)
#: xml/gcut-list.xml:561(title) xml/gcut-list.xml:593(title)
#: xml/gcut-list.xml:620(title) xml/gcut-list.xml:648(title)
#: xml/gcut-list.xml:679(title) xml/gcut-inspect.xml:83(title)
#: xml/gcut-inspect.xml:117(title) xml/gcut-inspect.xml:151(title)
#: xml/gcut-inspect.xml:185(title) xml/gcut-inspect.xml:219(title)
#: xml/gcut-inspect.xml:253(title) xml/gcut-inspect.xml:288(title)
#: xml/gcut-inspect.xml:321(title) xml/gcut-inspect.xml:354(title)
#: xml/gcut-inspect.xml:393(title) xml/gcut-inspect.xml:432(title)
#: xml/gcut-inspect.xml:466(title) xml/gcut-inspect.xml:504(title)
#: xml/gcut-inspect.xml:538(title) xml/gcut-hash-table.xml:74(title)
#: xml/gcut-hash-table.xml:123(title) xml/gcut-hash-table.xml:178(title)
#: xml/gcut-hash-table.xml:220(title) xml/gcut-hash-table.xml:252(title)
#: xml/gcut-hash-table.xml:280(title) xml/gcut-glib-event-loop.xml:51(title)
#: xml/gcut-event-loop.xml:104(title) xml/gcut-event-loop.xml:129(title)
#: xml/gcut-event-loop.xml:155(title) xml/gcut-event-loop.xml:185(title)
#: xml/gcut-event-loop.xml:227(title) xml/gcut-event-loop.xml:269(title)
#: xml/gcut-event-loop.xml:312(title) xml/gcut-event-loop.xml:353(title)
#: xml/gcut-event-loop.xml:396(title) xml/gcut-event-loop.xml:432(title)
#: xml/gcut-event-loop.xml:469(title) xml/gcut-error.xml:55(title)
#: xml/gcut-error.xml:85(title) xml/gcut-enum.xml:86(title)
#: xml/gcut-enum.xml:122(title) xml/gcut-enum.xml:156(title)
#: xml/gcut-enum.xml:193(title) xml/gcut-enum.xml:225(title)
#: xml/gcut-egg.xml:212(title) xml/gcut-egg.xml:242(title)
#: xml/gcut-egg.xml:272(title) xml/gcut-egg.xml:302(title)
#: xml/gcut-egg.xml:328(title) xml/gcut-egg.xml:355(title)
#: xml/gcut-egg.xml:380(title) xml/gcut-egg.xml:406(title)
#: xml/gcut-egg.xml:435(title) xml/gcut-egg.xml:463(title)
#: xml/gcut-egg.xml:491(title) xml/gcut-egg.xml:516(title)
#: xml/gcut-egg.xml:551(title) xml/gcut-egg.xml:585(title)
#: xml/gcut-egg.xml:618(title) xml/gcut-egg.xml:643(title)
#: xml/gcut-egg.xml:669(title) xml/gcut-egg.xml:695(title)
#: xml/gcut-egg.xml:722(title) xml/gcut-egg.xml:752(title)
#: xml/gcut-data.xml:299(title) xml/gcut-data.xml:327(title)
#: xml/gcut-data.xml:355(title) xml/gcut-data.xml:383(title)
#: xml/gcut-data.xml:411(title) xml/gcut-data.xml:440(title)
#: xml/gcut-data.xml:467(title) xml/gcut-data.xml:494(title)
#: xml/gcut-data.xml:520(title) xml/gcut-data.xml:549(title)
#: xml/gcut-data.xml:578(title) xml/gcut-data.xml:607(title)
#: xml/gcut-data.xml:636(title) xml/gcut-data.xml:665(title)
#: xml/gcut-data.xml:693(title) xml/gcut-data.xml:722(title)
#: xml/gcut-assertions.xml:114(title) xml/gcut-assertions.xml:145(title)
#: xml/gcut-assertions.xml:174(title) xml/gcut-assertions.xml:205(title)
#: xml/gcut-assertions.xml:238(title) xml/gcut-assertions.xml:282(title)
#: xml/gcut-assertions.xml:313(title) xml/gcut-assertions.xml:342(title)
#: xml/gcut-assertions.xml:371(title) xml/gcut-assertions.xml:402(title)
#: xml/gcut-assertions.xml:432(title) xml/gcut-assertions.xml:464(title)
#: xml/gcut-assertions.xml:498(title) xml/gcut-assertions.xml:532(title)
#: xml/gcut-assertions.xml:568(title) xml/gcut-assertions.xml:620(title)
#: xml/gcut-assertions.xml:647(title) xml/gcut-assertions.xml:673(title)
#: xml/gcut-assertions.xml:699(title) xml/gcut-assertions.xml:726(title)
#: xml/gcut-assertions.xml:752(title) xml/gcut-assertions.xml:778(title)
#: xml/gcut-assertions.xml:816(title) xml/gcut-assertions.xml:862(title)
#: xml/gcut-assertions.xml:904(title) xml/gcut-assertions.xml:953(title)
#: xml/gcut-assertions.xml:985(title) xml/gcut-assertions.xml:1014(title)
#: xml/gcut-assertions.xml:1043(title) xml/gcut-assertions.xml:1072(title)
#: xml/gcut-assertions.xml:1101(title) xml/gcut-assertions.xml:1130(title)
#: xml/gcut-assertions.xml:1159(title) xml/cutter.xml:307(title)
#: xml/cutter.xml:365(title) xml/cutter.xml:430(title)
#: xml/cutter.xml:453(title) xml/cutter.xml:478(title)
#: xml/cutter.xml:517(title) xml/cut-version.xml:65(title)
#: xml/cut-types.xml:66(title) xml/cut-test-utils.xml:95(title)
#: xml/cut-test-utils.xml:125(title) xml/cut-test-utils.xml:151(title)
#: xml/cut-test-utils.xml:176(title) xml/cut-test-utils.xml:204(title)
#: xml/cut-test-utils.xml:234(title) xml/cut-test-utils.xml:261(title)
#: xml/cut-test-utils.xml:288(title) xml/cut-test-utils.xml:314(title)
#: xml/cut-test-utils.xml:347(title) xml/cut-test-utils.xml:378(title)
#: xml/cut-test-utils.xml:409(title) xml/cut-test-utils.xml:434(title)
#: xml/cut-test-utils.xml:464(title) xml/cut-test-utils.xml:496(title)
#: xml/cut-test-utils.xml:528(title) xml/cut-test-utils.xml:561(title)
#: xml/cut-test-utils.xml:594(title) xml/cut-test-utils.xml:619(title)
#: xml/cut-test-utils.xml:645(title) xml/cut-test-utils.xml:670(title)
#: xml/cut-multi-process.xml:134(title) xml/cut-multi-process.xml:156(title)
#: xml/cut-multi-process.xml:182(title) xml/cut-multi-process.xml:202(title)
#: xml/cut-multi-process.xml:228(title) xml/cut-multi-process.xml:253(title)
#: xml/cut-multi-process.xml:277(title) xml/cut-multi-process.xml:303(title)
#: xml/cut-multi-process.xml:325(title) xml/cut-multi-process.xml:351(title)
#: xml/cut-multi-process.xml:374(title) xml/cut-multi-process.xml:401(title)
#: xml/cut-multi-process.xml:425(title) xml/cut-multi-process.xml:453(title)
#: xml/cut-multi-process.xml:477(title) xml/cut-multi-process.xml:501(title)
#: xml/cut-multi-process.xml:526(title) xml/cut-multi-process.xml:553(title)
#: xml/cut-multi-process.xml:577(title) xml/cut-multi-process.xml:602(title)
#: xml/cut-multi-process.xml:624(title) xml/cut-multi-process.xml:648(title)
#: xml/cut-multi-process.xml:671(title) xml/cut-multi-process.xml:694(title)
#: xml/cut-multi-process.xml:717(title) xml/cut-multi-process.xml:744(title)
#: xml/cut-multi-process.xml:774(title) xml/cut-multi-process.xml:810(title)
#: xml/cut-multi-process.xml:834(title) xml/cut-multi-process.xml:860(title)
#: xml/cut-multi-process.xml:881(title) xml/cut-helper.xml:161(title)
#: xml/cut-helper.xml:206(title) xml/cut-helper.xml:233(title)
#: xml/cut-helper.xml:314(title) xml/cut-helper.xml:379(title)
#: xml/cut-helper.xml:410(title) xml/cut-helper.xml:446(title)
#: xml/cut-helper.xml:468(title) xml/cut-helper.xml:488(title)
#: xml/cut-helper.xml:516(title) xml/cut-helper.xml:549(title)
#: xml/cut-helper.xml:584(title) xml/cut-helper.xml:614(title)
#: xml/cut-experimental.xml:86(title) xml/cut-experimental.xml:123(title)
#: xml/cut-experimental.xml:161(title) xml/cut-assertions.xml:205(title)
#: xml/cut-assertions.xml:229(title) xml/cut-assertions.xml:253(title)
#: xml/cut-assertions.xml:290(title) xml/cut-assertions.xml:330(title)
#: xml/cut-assertions.xml:357(title) xml/cut-assertions.xml:381(title)
#: xml/cut-assertions.xml:405(title) xml/cut-assertions.xml:431(title)
#: xml/cut-assertions.xml:460(title) xml/cut-assertions.xml:488(title)
#: xml/cut-assertions.xml:516(title) xml/cut-assertions.xml:544(title)
#: xml/cut-assertions.xml:572(title) xml/cut-assertions.xml:600(title)
#: xml/cut-assertions.xml:628(title) xml/cut-assertions.xml:656(title)
#: xml/cut-assertions.xml:684(title) xml/cut-assertions.xml:712(title)
#: xml/cut-assertions.xml:740(title) xml/cut-assertions.xml:768(title)
#: xml/cut-assertions.xml:796(title) xml/cut-assertions.xml:824(title)
#: xml/cut-assertions.xml:852(title) xml/cut-assertions.xml:880(title)
#: xml/cut-assertions.xml:908(title) xml/cut-assertions.xml:936(title)
#: xml/cut-assertions.xml:964(title) xml/cut-assertions.xml:992(title)
#: xml/cut-assertions.xml:1020(title) xml/cut-assertions.xml:1049(title)
#: xml/cut-assertions.xml:1078(title) xml/cut-assertions.xml:1106(title)
#: xml/cut-assertions.xml:1134(title) xml/cut-assertions.xml:1162(title)
#: xml/cut-assertions.xml:1190(title) xml/cut-assertions.xml:1218(title)
#: xml/cut-assertions.xml:1246(title) xml/cut-assertions.xml:1274(title)
#: xml/cut-assertions.xml:1302(title) xml/cut-assertions.xml:1330(title)
#: xml/cut-assertions.xml:1358(title) xml/cut-assertions.xml:1386(title)
#: xml/cut-assertions.xml:1414(title) xml/cut-assertions.xml:1442(title)
#: xml/cut-assertions.xml:1470(title) xml/cut-assertions.xml:1498(title)
#: xml/cut-assertions.xml:1526(title) xml/cut-assertions.xml:1554(title)
#: xml/cut-assertions.xml:1582(title) xml/cut-assertions.xml:1610(title)
#: xml/cut-assertions.xml:1638(title) xml/cut-assertions.xml:1667(title)
#: xml/cut-assertions.xml:1696(title) xml/cut-assertions.xml:1729(title)
#: xml/cut-assertions.xml:1766(title) xml/cut-assertions.xml:1801(title)
#: xml/cut-assertions.xml:1833(title) xml/cut-assertions.xml:1874(title)
#: xml/cut-assertions.xml:1915(title) xml/cut-assertions.xml:1948(title)
#: xml/cut-assertions.xml:1976(title) xml/cut-assertions.xml:2022(title)
#: xml/cut-assertions.xml:2069(title) xml/cut-assertions.xml:2107(title)
#: xml/cut-assertions.xml:2150(title) xml/cut-assertions.xml:2188(title)
#: xml/cut-assertions.xml:2219(title) xml/cut-assertions.xml:2251(title)
#: xml/cut-assertions.xml:2286(title) xml/cut-assertions.xml:2321(title)
#: xml/cut-assertions.xml:2356(title) xml/cut-assertions.xml:2391(title)
#: xml/cut-assertions.xml:2426(title) xml/cut-assertions.xml:2462(title)
#: xml/cut-assertions.xml:2491(title) xml/cut-assertions.xml:2523(title)
#: xml/cut-assertions.xml:2553(title) xml/cut-assertions.xml:2585(title)
#: xml/cut-assertions.xml:2615(title) xml/cut-assertions.xml:2647(title)
#: xml/cut-assertions.xml:2677(title) xml/cut-assertions.xml:2706(title)
#: xml/cut-assertions.xml:2735(title) xml/cut-assertions.xml:2762(title)
#: xml/cut-assertions.xml:2788(title) xml/cut-assertions.xml:2814(title)
#: xml/cut-assertions.xml:2840(title) xml/cut-assertions.xml:2872(title)
#: xml/cut-assertions.xml:2892(title) xml/cut-assertions.xml:2916(title)
#: xml/cut-assertions.xml:2942(title) xml/cut-assertions.xml:2965(title)
#: xml/cut-assertions.xml:2994(title) xml/cppcutter.xml:121(title)
#: xml/cppcut-assertions.xml:61(title) xml/cppcut-assertions.xml:98(title)
#: xml/cppcut-assertions.xml:135(title) xml/cppcut-assertions.xml:169(title)
#: xml/cppcut-assertions.xml:203(title)
msgid "Parameters"
msgstr ""

#: xml/soupcut-server.xml:58(para) xml/soupcut-server.xml:108(para)
msgid "server"
msgstr ""

#: xml/soupcut-server.xml:59(para) xml/soupcut-server.xml:109(para)
msgid "a <link linkend=\"SoupServer\"><type>SoupServer</type></link>."
msgstr ""
"<link linkend=\"SoupServer\"><type>SoupServer</type></link>オブジェクト。"

#: xml/soupcut-server.xml:63(title) xml/soupcut-server.xml:88(title)
#: xml/soupcut-server.xml:116(title) xml/soupcut-client.xml:81(title)
#: xml/soupcut-client.xml:135(title) xml/soupcut-client.xml:175(title)
#: xml/soupcut-client.xml:198(title) xml/soupcut-client.xml:221(title)
#: xml/soupcut-client.xml:244(title) xml/gcut-value-equal.xml:72(title)
#: xml/gcut-test-utils.xml:107(title) xml/gcut-test-utils.xml:133(title)
#: xml/gcut-test-utils.xml:165(title) xml/gcut-test-utils.xml:191(title)
#: xml/gcut-test-utils.xml:217(title) xml/gcut-test-utils.xml:240(title)
#: xml/gcut-test-utils.xml:276(title) xml/gcut-test-utils.xml:312(title)
#: xml/gcut-test-utils.xml:348(title) xml/gcut-test-utils.xml:376(title)
#: xml/gcut-test-utils.xml:399(title) xml/gcut-test-utils.xml:436(title)
#: xml/gcut-test-utils.xml:473(title) xml/gcut-test-utils.xml:501(title)
#: xml/gcut-test-utils.xml:533(title) xml/gcut-test-utils.xml:559(title)
#: xml/gcut-test-utils.xml:632(title) xml/gcut-test-utils.xml:665(title)
#: xml/gcut-test-utils.xml:698(title) xml/gcut-test-utils.xml:730(title)
#: xml/gcut-string.xml:70(title) xml/gcut-string.xml:97(title)
#: xml/gcut-process.xml:239(title) xml/gcut-process.xml:262(title)
#: xml/gcut-process.xml:290(title) xml/gcut-process.xml:319(title)
#: xml/gcut-process.xml:343(title) xml/gcut-process.xml:367(title)
#: xml/gcut-process.xml:414(title) xml/gcut-process.xml:465(title)
#: xml/gcut-process.xml:494(title) xml/gcut-process.xml:517(title)
#: xml/gcut-process.xml:555(title) xml/gcut-process.xml:587(title)
#: xml/gcut-process.xml:623(title) xml/gcut-process.xml:649(title)
#: xml/gcut-process.xml:672(title) xml/gcut-process.xml:694(title)
#: xml/gcut-process.xml:718(title) xml/gcut-process.xml:742(title)
#: xml/gcut-process.xml:766(title) xml/gcut-process.xml:790(title)
#: xml/gcut-process.xml:814(title) xml/gcut-process.xml:839(title)
#: xml/gcut-process.xml:890(title) xml/gcut-object.xml:83(title)
#: xml/gcut-object.xml:113(title) xml/gcut-object.xml:148(title)
#: xml/gcut-list.xml:110(title) xml/gcut-list.xml:154(title)
#: xml/gcut-list.xml:186(title) xml/gcut-list.xml:214(title)
#: xml/gcut-list.xml:246(title) xml/gcut-list.xml:274(title)
#: xml/gcut-list.xml:306(title) xml/gcut-list.xml:334(title)
#: xml/gcut-list.xml:360(title) xml/gcut-list.xml:391(title)
#: xml/gcut-list.xml:422(title) xml/gcut-list.xml:454(title)
#: xml/gcut-list.xml:483(title) xml/gcut-list.xml:515(title)
#: xml/gcut-list.xml:544(title) xml/gcut-list.xml:576(title)
#: xml/gcut-list.xml:605(title) xml/gcut-list.xml:632(title)
#: xml/gcut-list.xml:663(title) xml/gcut-list.xml:694(title)
#: xml/gcut-hash-table.xml:92(title) xml/gcut-hash-table.xml:144(title)
#: xml/gcut-hash-table.xml:202(title) xml/gcut-hash-table.xml:235(title)
#: xml/gcut-hash-table.xml:264(title) xml/gcut-hash-table.xml:292(title)
#: xml/gcut-glib-event-loop.xml:63(title) xml/gcut-event-loop.xml:144(title)
#: xml/gcut-event-loop.xml:210(title) xml/gcut-event-loop.xml:249(title)
#: xml/gcut-event-loop.xml:297(title) xml/gcut-event-loop.xml:335(title)
#: xml/gcut-event-loop.xml:382(title) xml/gcut-event-loop.xml:415(title)
#: xml/gcut-event-loop.xml:457(title) xml/gcut-event-loop.xml:484(title)
#: xml/gcut-error.xml:70(title) xml/gcut-error.xml:97(title)
#: xml/gcut-enum.xml:101(title) xml/gcut-enum.xml:140(title)
#: xml/gcut-enum.xml:171(title) xml/gcut-enum.xml:211(title)
#: xml/gcut-enum.xml:240(title) xml/gcut-egg.xml:228(title)
#: xml/gcut-egg.xml:258(title) xml/gcut-egg.xml:289(title)
#: xml/gcut-egg.xml:315(title) xml/gcut-egg.xml:341(title)
#: xml/gcut-egg.xml:392(title) xml/gcut-egg.xml:447(title)
#: xml/gcut-egg.xml:478(title) xml/gcut-egg.xml:538(title)
#: xml/gcut-egg.xml:563(title) xml/gcut-egg.xml:603(title)
#: xml/gcut-egg.xml:655(title) xml/gcut-egg.xml:681(title)
#: xml/gcut-egg.xml:707(title) xml/gcut-egg.xml:734(title)
#: xml/gcut-data.xml:342(title) xml/gcut-data.xml:370(title)
#: xml/gcut-data.xml:398(title) xml/gcut-data.xml:426(title)
#: xml/gcut-data.xml:455(title) xml/gcut-data.xml:482(title)
#: xml/gcut-data.xml:509(title) xml/gcut-data.xml:535(title)
#: xml/gcut-data.xml:564(title) xml/gcut-data.xml:593(title)
#: xml/gcut-data.xml:622(title) xml/gcut-data.xml:651(title)
#: xml/gcut-data.xml:680(title) xml/gcut-data.xml:708(title)
#: xml/gcut-data.xml:737(title) xml/cutter.xml:418(title)
#: xml/cut-test-utils.xml:110(title) xml/cut-test-utils.xml:137(title)
#: xml/cut-test-utils.xml:163(title) xml/cut-test-utils.xml:188(title)
#: xml/cut-test-utils.xml:219(title) xml/cut-test-utils.xml:249(title)
#: xml/cut-test-utils.xml:276(title) xml/cut-test-utils.xml:300(title)
#: xml/cut-test-utils.xml:329(title) xml/cut-test-utils.xml:365(title)
#: xml/cut-test-utils.xml:398(title) xml/cut-test-utils.xml:422(title)
#: xml/cut-test-utils.xml:480(title) xml/cut-test-utils.xml:512(title)
#: xml/cut-test-utils.xml:544(title) xml/cut-test-utils.xml:580(title)
#: xml/cut-test-utils.xml:634(title) xml/cut-test-utils.xml:657(title)
#: xml/cut-multi-process.xml:146(title) xml/cut-multi-process.xml:168(title)
#: xml/cut-multi-process.xml:214(title) xml/cut-multi-process.xml:240(title)
#: xml/cut-multi-process.xml:265(title) xml/cut-multi-process.xml:289(title)
#: xml/cut-multi-process.xml:337(title) xml/cut-multi-process.xml:386(title)
#: xml/cut-multi-process.xml:437(title) xml/cut-multi-process.xml:489(title)
#: xml/cut-multi-process.xml:538(title) xml/cut-multi-process.xml:589(title)
#: xml/cut-multi-process.xml:636(title) xml/cut-multi-process.xml:683(title)
#: xml/cut-multi-process.xml:706(title) xml/cut-multi-process.xml:729(title)
#: xml/cut-multi-process.xml:756(title) xml/cut-multi-process.xml:797(title)
#: xml/cut-multi-process.xml:846(title) xml/cut-multi-process.xml:893(title)
#: xml/cut-helper.xml:428(title) xml/cut-helper.xml:500(title)
#: xml/cut-helper.xml:531(title) xml/cut-helper.xml:567(title)
#: xml/cut-helper.xml:599(title) xml/cut-helper.xml:626(title)
#: xml/cut-helper.xml:636(title) xml/cut-helper.xml:646(title)
#: xml/cut-experimental.xml:61(title) xml/cut-experimental.xml:135(title)
#: xml/cut-experimental.xml:173(title)
msgid "Returns"
msgstr ""

#: xml/soupcut-server.xml:64(para)
msgid ""
"<parameter>server</parameter> owned by Cutter. Don't <link linkend=\"g-"
"object-unref\"><function>g_object_unref()</function></link> it."
msgstr ""
"<parameter>server</parameter>はCutterが所有権を持つので、<link linkend=\"g-"
"object-unref\"><function>g_object_unref()</function></link>を呼ばないでくださ"
"い。"

#: xml/soupcut-server.xml:68(title)
msgid "soupcut_server_take_new ()"
msgstr ""

#: xml/soupcut-server.xml:70(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"SoupServer\"><returnvalue>SoupServer</returnvalue></link> *\n"
"soupcut_server_take_new (<parameter><link linkend=\"GMainContext\"><type>GMainContext</type></link> *context</parameter>);"
msgstr ""

#: xml/soupcut-server.xml:72(para)
msgid ""
"Creates and returns a new <link linkend=\"SoupServer\"><type>SoupServer</"
"type></link>, whose context is <parameter>context</parameter> . The server "
"is shut down and unref when tear down."
msgstr ""
"コンテキストが<parameter>context</parameter>である<link linkend=\"SoupServer"
"\"><type>SoupServer</type></link>オブジェクトを生成して返します。サーバーは"
"tear down 時に自動的にシャットダウンされ、解放されます。"

#: xml/soupcut-server.xml:83(para) xml/gcut-glib-event-loop.xml:58(para)
msgid "context"
msgstr ""

#: xml/soupcut-server.xml:84(para)
msgid ""
"a <link linkend=\"GMainContext\"><type>GMainContext</type></link> for the "
"main loop of a new server."
msgstr ""
"サーバーの<link linkend=\"GMainContext\"><type>GMainContext</type></link>コン"
"テキスト。"

#: xml/soupcut-server.xml:89(para)
msgid ""
"a new <link linkend=\"SoupServer\"><type>SoupServer</type></link> owned by "
"Cutter. Don't <link linkend=\"g-object-unref\"><function>g_object_unref()</"
"function></link> it."
msgstr ""
"新たに<link linkend=\"SoupServer\"><type>SoupServer</type></link>オブジェクト"
"を生成します。作成されたサーバーはCutterが所有権を持つので、<link linkend="
"\"g-object-unref\"><function>g_object_unref()</function></link>を呼ばないでく"
"ださい。"

#: xml/soupcut-server.xml:92(title)
msgid "soupcut_server_build_uri ()"
msgstr ""

#: xml/soupcut-server.xml:94(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"soupcut_server_build_uri (<parameter><link linkend=\"SoupServer\"><type>SoupServer</type></link> *server</parameter>,\n"
"                          <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *path</parameter>);"
msgstr ""

#: xml/soupcut-server.xml:97(para)
msgid ""
"an URI is built and returned with the base uri of <parameter>server</"
"parameter> and <parameter>path</parameter> ."
msgstr ""
"<parameter>server</parameter> のベースURIと <parameter>path</parameter> を組"
"み合わせたURIの文字列を作成します。"

#: xml/soupcut-server.xml:111(para) xml/gcut-test-utils.xml:721(para)
#: xml/gcut-assertions.xml:733(para) xml/gcut-assertions.xml:759(para)
#: xml/cut-test-utils.xml:441(para) xml/cut-test-utils.xml:471(para)
#: xml/cut-test-utils.xml:503(para) xml/cut-test-utils.xml:535(para)
#: xml/cut-test-utils.xml:571(para) xml/cut-test-utils.xml:601(para)
#: xml/cut-test-utils.xml:626(para) xml/cut-test-utils.xml:677(para)
#: xml/cut-assertions.xml:2498(para) xml/cut-assertions.xml:2530(para)
#: xml/cut-assertions.xml:2560(para) xml/cut-assertions.xml:2592(para)
#: xml/cut-assertions.xml:2622(para) xml/cut-assertions.xml:2745(para)
msgid "path"
msgstr "パス。"

#: xml/soupcut-server.xml:112(para) xml/cut-assertions.xml:2796(para)
#: xml/cut-assertions.xml:2799(para) xml/cut-assertions.xml:2822(para)
#: xml/cut-assertions.xml:2825(para)
msgid "a path."
msgstr "パス。"

#: xml/soupcut-server.xml:117(para)
msgid "a new uri string owned by Cutter. Don't free it."
msgstr "Cutterが所有するURI文字列。解放しないで下さい。"

#: xml/soupcut-server.xml:128(link) xml/soupcut-client.xml:267(link)
#: xml/soupcut-assertions.xml:7(refentrytitle)
#: xml/soupcut-assertions.xml:12(refname) xml/api-index-full.xml:565(link)
#: xml/api-index-full.xml:567(link) xml/api-index-full.xml:569(link)
#: xml/api-index-full.xml:571(link) xml/api-index-full.xml:580(link)
#: xml/api-index-1.0.8.xml:11(link) xml/api-index-1.0.8.xml:12(link)
#: xml/api-index-1.0.8.xml:13(link) xml/api-index-1.0.8.xml:14(link)
#: xml/api-index-1.0.8.xml:22(link)
msgid "Assertions for HTTP client and server"
msgstr "HTTPクライアント・サーバ用の検証"

#: xml/soupcut-client.xml:7(refentrytitle) xml/soupcut-client.xml:12(refname)
msgid "Convenience HTTP client API"
msgstr "便利なHTTPクライアントAPI"

#: xml/soupcut-client.xml:13(refpurpose)
msgid "API to work as HTTP client."
msgstr "HTTPクライアントとして動作するためのAPI。"

#: xml/soupcut-client.xml:23(returnvalue) xml/api-index-full.xml:563(link)
#: xml/api-index-full.xml:573(link) xml/api-index-full.xml:574(link)
#: xml/api-index-full.xml:575(link) xml/api-index-full.xml:576(link)
#: xml/api-index-full.xml:577(link) xml/api-index-full.xml:578(link)
#: xml/api-index-full.xml:579(link) xml/api-index-1.0.8.xml:15(link)
#: xml/api-index-1.0.8.xml:16(link) xml/api-index-1.0.8.xml:17(link)
#: xml/api-index-1.0.8.xml:18(link) xml/api-index-1.0.8.xml:19(link)
#: xml/api-index-1.0.8.xml:20(link) xml/api-index-1.0.8.xml:21(link)
msgid "SoupCutClient"
msgstr ""

#: xml/soupcut-client.xml:23(entry)
msgid "<link linkend=\"SoupCutClient\"><placeholder-1/></link> *"
msgstr ""

#: xml/soupcut-client.xml:24(link) xml/soupcut-client.xml:76(primary)
#: xml/api-index-full.xml:577(link) xml/api-index-1.0.8.xml:19(link)
msgid "soupcut_client_new"
msgstr ""

#: xml/soupcut-client.xml:25(returnvalue)
#: xml/soupcut-assertions.xml:24(returnvalue)
#: xml/soupcut-assertions.xml:26(returnvalue)
#: xml/soupcut-assertions.xml:28(returnvalue)
#: xml/soupcut-assertions.xml:30(returnvalue)
#: xml/soupcut-assertions.xml:32(returnvalue)
#: xml/soupcut-assertions-helper.xml:23(returnvalue)
#: xml/soupcut-assertions-helper.xml:25(returnvalue)
#: xml/soupcut-assertions-helper.xml:27(returnvalue)
#: xml/soupcut-assertions-helper.xml:29(returnvalue)
#: xml/soupcut-assertions-helper.xml:31(returnvalue)
#: xml/gdkcut-pixbuf-assertions.xml:24(returnvalue)
#: xml/gdkcut-pixbuf-assertions-helper.xml:23(returnvalue)
#: xml/gcut-value-equal.xml:26(returnvalue) xml/gcut-types.xml:23(returnvalue)
#: xml/gcut-test-utils.xml:56(returnvalue)
#: xml/gcut-test-utils.xml:58(returnvalue)
#: xml/gcut-string-io-channel.xml:27(returnvalue)
#: xml/gcut-string-io-channel.xml:31(returnvalue)
#: xml/gcut-string-io-channel.xml:35(returnvalue)
#: xml/gcut-string-io-channel.xml:39(returnvalue)
#: xml/gcut-string-io-channel.xml:43(returnvalue)
#: xml/gcut-string-io-channel.xml:47(returnvalue)
#: xml/gcut-process.xml:38(returnvalue) xml/gcut-process.xml:42(returnvalue)
#: xml/gcut-process.xml:74(returnvalue) xml/gcut-process.xml:78(returnvalue)
#: xml/gcut-process.xml:107(returnvalue) xml/gcut-process.xml:108(returnvalue)
#: xml/gcut-process.xml:109(returnvalue) xml/gcut-process.xml:110(returnvalue)
#: xml/gcut-main.xml:23(returnvalue) xml/gcut-main.xml:25(returnvalue)
#: xml/gcut-main.xml:27(returnvalue) xml/gcut-main.xml:29(returnvalue)
#: xml/gcut-inspect.xml:24(returnvalue) xml/gcut-inspect.xml:26(returnvalue)
#: xml/gcut-inspect.xml:28(returnvalue) xml/gcut-inspect.xml:30(returnvalue)
#: xml/gcut-inspect.xml:32(returnvalue) xml/gcut-inspect.xml:34(returnvalue)
#: xml/gcut-inspect.xml:36(returnvalue) xml/gcut-inspect.xml:38(returnvalue)
#: xml/gcut-inspect.xml:40(returnvalue) xml/gcut-inspect.xml:42(returnvalue)
#: xml/gcut-inspect.xml:44(returnvalue) xml/gcut-inspect.xml:46(returnvalue)
#: xml/gcut-inspect.xml:48(returnvalue) xml/gcut-inspect.xml:50(returnvalue)
#: xml/gcut-event-loop.xml:26(returnvalue)
#: xml/gcut-event-loop.xml:30(returnvalue) xml/gcut-egg.xml:36(returnvalue)
#: xml/gcut-egg.xml:40(returnvalue) xml/gcut-egg.xml:46(returnvalue)
#: xml/gcut-egg.xml:54(returnvalue) xml/gcut-egg.xml:64(returnvalue)
#: xml/gcut-egg.xml:93(returnvalue) xml/gcut-egg.xml:94(returnvalue)
#: xml/gcut-egg.xml:95(returnvalue) xml/gcut-egg.xml:96(returnvalue)
#: xml/gcut-data.xml:24(returnvalue) xml/gcut-assertions.xml:24(returnvalue)
#: xml/gcut-assertions.xml:26(returnvalue)
#: xml/gcut-assertions.xml:28(returnvalue)
#: xml/gcut-assertions.xml:30(returnvalue)
#: xml/gcut-assertions.xml:32(returnvalue)
#: xml/gcut-assertions.xml:34(returnvalue)
#: xml/gcut-assertions.xml:36(returnvalue)
#: xml/gcut-assertions.xml:38(returnvalue)
#: xml/gcut-assertions.xml:40(returnvalue)
#: xml/gcut-assertions.xml:42(returnvalue)
#: xml/gcut-assertions.xml:44(returnvalue)
#: xml/gcut-assertions.xml:46(returnvalue)
#: xml/gcut-assertions.xml:48(returnvalue)
#: xml/gcut-assertions.xml:50(returnvalue)
#: xml/gcut-assertions.xml:52(returnvalue)
#: xml/gcut-assertions.xml:54(returnvalue)
#: xml/gcut-assertions.xml:56(returnvalue)
#: xml/gcut-assertions.xml:58(returnvalue)
#: xml/gcut-assertions.xml:60(returnvalue)
#: xml/gcut-assertions.xml:62(returnvalue)
#: xml/gcut-assertions.xml:64(returnvalue)
#: xml/gcut-assertions.xml:66(returnvalue)
#: xml/gcut-assertions.xml:68(returnvalue)
#: xml/gcut-assertions.xml:70(returnvalue)
#: xml/gcut-assertions.xml:72(returnvalue)
#: xml/gcut-assertions.xml:74(returnvalue)
#: xml/gcut-assertions.xml:76(returnvalue)
#: xml/gcut-assertions.xml:78(returnvalue)
#: xml/gcut-assertions.xml:80(returnvalue)
#: xml/gcut-assertions.xml:82(returnvalue)
#: xml/gcut-assertions.xml:84(returnvalue)
#: xml/gcut-assertions.xml:86(returnvalue)
#: xml/gcut-assertions.xml:88(returnvalue)
#: xml/gcut-assertions-helper.xml:23(returnvalue)
#: xml/gcut-assertions-helper.xml:25(returnvalue)
#: xml/gcut-assertions-helper.xml:27(returnvalue)
#: xml/gcut-assertions-helper.xml:29(returnvalue)
#: xml/gcut-assertions-helper.xml:31(returnvalue)
#: xml/gcut-assertions-helper.xml:33(returnvalue)
#: xml/gcut-assertions-helper.xml:35(returnvalue)
#: xml/gcut-assertions-helper.xml:37(returnvalue)
#: xml/gcut-assertions-helper.xml:39(returnvalue)
#: xml/gcut-assertions-helper.xml:41(returnvalue)
#: xml/gcut-assertions-helper.xml:43(returnvalue)
#: xml/gcut-assertions-helper.xml:45(returnvalue)
#: xml/gcut-assertions-helper.xml:47(returnvalue)
#: xml/gcut-assertions-helper.xml:49(returnvalue)
#: xml/gcut-assertions-helper.xml:51(returnvalue)
#: xml/gcut-assertions-helper.xml:53(returnvalue)
#: xml/gcut-assertions-helper.xml:55(returnvalue)
#: xml/gcut-assertions-helper.xml:57(returnvalue)
#: xml/gcut-assertions-helper.xml:59(returnvalue)
#: xml/gcut-assertions-helper.xml:61(returnvalue)
#: xml/gcut-assertions-helper.xml:63(returnvalue)
#: xml/gcut-assertions-helper.xml:65(returnvalue)
#: xml/gcut-assertions-helper.xml:67(returnvalue)
#: xml/gcut-assertions-helper.xml:69(returnvalue)
#: xml/gcut-assertions-helper.xml:71(returnvalue)
#: xml/cutter.xml:23(returnvalue) xml/cutter.xml:25(returnvalue)
#: xml/cutter.xml:27(returnvalue) xml/cutter.xml:29(returnvalue)
#: xml/cutter.xml:31(returnvalue) xml/cutter.xml:33(returnvalue)
#: xml/cutter.xml:37(returnvalue) xml/cutter.xml:41(returnvalue)
#: xml/cutter.xml:43(returnvalue) xml/cutter.xml:45(returnvalue)
#: xml/cutter.xml:47(returnvalue) xml/cutter.xml:49(returnvalue)
#: xml/cut-types.xml:23(returnvalue) xml/cut-types.xml:25(returnvalue)
#: xml/cut-test-utils.xml:23(returnvalue)
#: xml/cut-test-utils.xml:25(returnvalue)
#: xml/cut-test-utils.xml:33(returnvalue)
#: xml/cut-test-utils.xml:46(returnvalue)
#: xml/cut-test-utils.xml:56(returnvalue)
#: xml/cut-test-utils.xml:62(returnvalue)
#: xml/cut-multi-process.xml:28(returnvalue)
#: xml/cut-multi-process.xml:38(returnvalue)
#: xml/cut-multi-process.xml:42(returnvalue)
#: xml/cut-multi-process.xml:46(returnvalue)
#: xml/cut-multi-process.xml:50(returnvalue)
#: xml/cut-multi-process.xml:54(returnvalue)
#: xml/cut-multi-process.xml:58(returnvalue)
#: xml/cut-multi-process.xml:62(returnvalue)
#: xml/cut-multi-process.xml:66(returnvalue)
#: xml/cut-multi-process.xml:76(returnvalue)
#: xml/cut-multi-process.xml:80(returnvalue)
#: xml/cut-multi-process.xml:84(returnvalue) xml/cut-logger.xml:55(returnvalue)
#: xml/cut-logger.xml:59(returnvalue) xml/cut-logger.xml:61(returnvalue)
#: xml/cut-logger.xml:67(returnvalue) xml/cut-logger.xml:71(returnvalue)
#: xml/cut-logger.xml:77(returnvalue) xml/cut-logger.xml:81(returnvalue)
#: xml/cut-logger.xml:83(returnvalue) xml/cut-logger.xml:86(returnvalue)
#: xml/cut-loader-customizer.xml:25(returnvalue)
#: xml/cut-helper.xml:24(returnvalue) xml/cut-helper.xml:26(returnvalue)
#: xml/cut-helper.xml:28(returnvalue) xml/cut-helper.xml:30(returnvalue)
#: xml/cut-helper.xml:32(returnvalue)
#: xml/cut-glib-compatible.xml:30(returnvalue)
#: xml/cut-console-diff-writer.xml:25(returnvalue)
#: xml/cut-console-diff-writer.xml:29(returnvalue)
#: xml/cut-console-diff-writer.xml:33(returnvalue)
#: xml/cut-console-diff-writer.xml:37(returnvalue)
#: xml/cut-console-diff-writer.xml:41(returnvalue)
#: xml/cut-console-diff-writer.xml:45(returnvalue)
#: xml/cut-assertions.xml:23(returnvalue)
#: xml/cut-assertions.xml:25(returnvalue)
#: xml/cut-assertions.xml:27(returnvalue)
#: xml/cut-assertions.xml:29(returnvalue)
#: xml/cut-assertions.xml:31(returnvalue)
#: xml/cut-assertions.xml:33(returnvalue)
#: xml/cut-assertions.xml:35(returnvalue)
#: xml/cut-assertions.xml:37(returnvalue)
#: xml/cut-assertions.xml:39(returnvalue)
#: xml/cut-assertions.xml:41(returnvalue)
#: xml/cut-assertions.xml:63(returnvalue)
#: xml/cut-assertions.xml:65(returnvalue)
#: xml/cut-assertions.xml:87(returnvalue)
#: xml/cut-assertions.xml:89(returnvalue)
#: xml/cut-assertions.xml:91(returnvalue)
#: xml/cut-assertions.xml:93(returnvalue)
#: xml/cut-assertions.xml:97(returnvalue)
#: xml/cut-assertions.xml:99(returnvalue)
#: xml/cut-assertions.xml:101(returnvalue)
#: xml/cut-assertions.xml:103(returnvalue)
#: xml/cut-assertions.xml:105(returnvalue)
#: xml/cut-assertions.xml:107(returnvalue)
#: xml/cut-assertions.xml:109(returnvalue)
#: xml/cut-assertions.xml:111(returnvalue)
#: xml/cut-assertions.xml:113(returnvalue)
#: xml/cut-assertions.xml:115(returnvalue)
#: xml/cut-assertions.xml:123(returnvalue)
#: xml/cut-assertions.xml:125(returnvalue)
#: xml/cut-assertions.xml:127(returnvalue)
#: xml/cut-assertions.xml:129(returnvalue)
#: xml/cut-assertions.xml:131(returnvalue)
#: xml/cut-assertions.xml:133(returnvalue)
#: xml/cut-assertions.xml:135(returnvalue)
#: xml/cut-assertions.xml:137(returnvalue)
#: xml/cut-assertions.xml:139(returnvalue)
#: xml/cut-assertions.xml:141(returnvalue)
#: xml/cut-assertions.xml:146(returnvalue)
#: xml/cut-assertions.xml:148(returnvalue)
#: xml/cut-assertions.xml:150(returnvalue)
#: xml/cut-assertions.xml:152(returnvalue)
#: xml/cut-assertions.xml:154(returnvalue)
#: xml/cut-assertions.xml:156(returnvalue)
#: xml/cut-assertions.xml:158(returnvalue)
#: xml/cut-assertions.xml:160(returnvalue)
#: xml/cppcut-test-methods.xml:23(returnvalue)
#: xml/cppcut-test-methods.xml:25(returnvalue)
msgid "void"
msgstr ""

#: xml/soupcut-client.xml:26(link) xml/soupcut-client.xml:86(primary)
#: xml/api-index-full.xml:579(link) xml/api-index-1.0.8.xml:21(link)
msgid "soupcut_client_set_base"
msgstr ""

#: xml/soupcut-client.xml:27(returnvalue)
#: xml/soupcut-client.xml:29(returnvalue)
#: xml/soupcut-client.xml:31(returnvalue) xml/gcut-process.xml:72(returnvalue)
#: xml/gcut-key-file.xml:25(returnvalue)
#: xml/gcut-event-loop.xml:32(returnvalue)
#: xml/gcut-event-loop.xml:34(returnvalue)
#: xml/gcut-event-loop.xml:36(returnvalue)
#: xml/gcut-event-loop.xml:38(returnvalue)
#: xml/gcut-event-loop.xml:40(returnvalue)
#: xml/gcut-event-loop.xml:42(returnvalue)
#: xml/gcut-event-loop.xml:44(returnvalue) xml/gcut-enum.xml:32(returnvalue)
#: xml/gcut-enum.xml:34(returnvalue) xml/gcut-egg.xml:62(returnvalue)
#: xml/gcut-data.xml:33(returnvalue) xml/gcut-data.xml:38(returnvalue)
#: xml/gcut-data-helper.xml:29(returnvalue)
#: xml/gcut-data-helper.xml:39(returnvalue)
msgid "guint"
msgstr ""

#: xml/soupcut-client.xml:28(link) xml/soupcut-client.xml:111(primary)
#: xml/api-index-full.xml:578(link) xml/api-index-1.0.8.xml:20(link)
msgid "soupcut_client_send_message"
msgstr ""

#: xml/soupcut-client.xml:30(link) xml/soupcut-client.xml:140(primary)
#: xml/api-index-full.xml:573(link) xml/api-index-1.0.8.xml:15(link)
msgid "soupcut_client_get"
msgstr ""

#: xml/soupcut-client.xml:32(link) xml/soupcut-client.xml:180(primary)
#: xml/api-index-full.xml:576(link) xml/api-index-1.0.8.xml:18(link)
msgid "soupcut_client_get_n_messages"
msgstr ""

#: xml/soupcut-client.xml:33(returnvalue)
msgid "SoupMessage"
msgstr ""

#: xml/soupcut-client.xml:33(entry)
msgid "<link linkend=\"SoupMessage\"><placeholder-1/></link> *"
msgstr ""

#: xml/soupcut-client.xml:34(link) xml/soupcut-client.xml:203(primary)
#: xml/api-index-full.xml:575(link) xml/api-index-1.0.8.xml:17(link)
msgid "soupcut_client_get_latest_message"
msgstr ""

#: xml/soupcut-client.xml:35(returnvalue)
#: xml/gcut-string-io-channel.xml:45(returnvalue)
msgid "GMainContext"
msgstr ""

#: xml/soupcut-client.xml:35(entry) xml/gcut-string-io-channel.xml:45(entry)
msgid "<link linkend=\"GMainContext\"><placeholder-1/></link> *"
msgstr ""

#: xml/soupcut-client.xml:36(link) xml/soupcut-client.xml:226(primary)
#: xml/api-index-full.xml:574(link) xml/api-index-1.0.8.xml:16(link)
msgid "soupcut_client_get_async_context"
msgstr ""

#: xml/soupcut-client.xml:43(title) xml/gcut-process.xml:86(title)
#: xml/gcut-egg.xml:72(title)
msgid "Properties"
msgstr "プロパティ"

#: xml/soupcut-client.xml:50(type) xml/gdkcut-pixbuf.xml:23(returnvalue)
#: xml/gdkcut-pixbuf.xml:25(returnvalue)
#: xml/gcut-value-equal.xml:24(returnvalue) xml/gcut-string.xml:24(returnvalue)
#: xml/gcut-string-io-channel.xml:37(returnvalue)
#: xml/gcut-string-io-channel.xml:41(returnvalue)
#: xml/gcut-process.xml:46(returnvalue) xml/gcut-process.xml:52(returnvalue)
#: xml/gcut-process.xml:54(returnvalue) xml/gcut-object.xml:24(returnvalue)
#: xml/gcut-list.xml:24(returnvalue) xml/gcut-list.xml:28(returnvalue)
#: xml/gcut-list.xml:32(returnvalue) xml/gcut-list.xml:36(returnvalue)
#: xml/gcut-hash-table.xml:24(returnvalue)
#: xml/gcut-hash-table.xml:30(returnvalue)
#: xml/gcut-event-loop.xml:28(returnvalue)
#: xml/gcut-event-loop.xml:46(returnvalue) xml/gcut-error.xml:24(returnvalue)
#: xml/gcut-egg.xml:44(returnvalue) xml/gcut-egg.xml:48(returnvalue)
#: xml/gcut-data.xml:26(returnvalue) xml/gcut-data.xml:48(returnvalue)
#: xml/gcut-data-helper.xml:49(returnvalue) xml/cut-logger.xml:69(returnvalue)
#: xml/cut-logger.xml:79(returnvalue) xml/cut-console.xml:23(returnvalue)
#: xml/cut-console.xml:25(returnvalue)
msgid "gboolean"
msgstr ""

#: xml/soupcut-client.xml:50(link)
msgid "async"
msgstr ""

#: xml/soupcut-client.xml:50(entry) xml/gcut-process.xml:93(entry)
#: xml/gcut-egg.xml:79(entry)
msgid "Read / Write"
msgstr ""

#: xml/soupcut-client.xml:57(title) xml/gcut-process.xml:131(title)
#: xml/gcut-event-loop.xml:67(title) xml/gcut-egg.xml:117(title)
msgid "Object Hierarchy"
msgstr "オブジェクト階層"

#: xml/soupcut-client.xml:58(link) xml/gcut-test-utils.xml:24(returnvalue)
#: xml/gcut-public.xml:23(returnvalue) xml/gcut-process.xml:132(link)
#: xml/gcut-object.xml:14(type) xml/gcut-event-loop.xml:68(link)
#: xml/gcut-egg.xml:118(link) xml/gcut-data.xml:46(returnvalue)
msgid "GObject"
msgstr ""

#: xml/soupcut-client.xml:59(phrase) xml/gcut-process.xml:133(phrase)
#: xml/gcut-event-loop.xml:69(phrase) xml/gcut-egg.xml:119(phrase)
msgid "╰──"
msgstr ""

#: xml/soupcut-client.xml:58(screen)
#, no-wrap
msgid ""
"    <placeholder-1/>\n"
"    <placeholder-2/> SoupCutClient\n"
msgstr ""

#: xml/soupcut-client.xml:66(para)
msgid ""
"<link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> works as a "
"HTTP client. It accepts multiple requests and responses are managed by <link "
"linkend=\"SoupCutClient\"><type>SoupCutClient</type></link>. <link linkend="
"\"SoupCutClient\"><type>SoupCutClient</type></link> related assertions are "
"also provided."
msgstr ""
"<link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link>オブジェクト"
"はHTTPクライアントとして動作します。<link linkend=\"SoupCutClient"
"\"><type>SoupCutClient</type></link>は複数のリクエストやレスポンスを管理する"
"ことができます。また、<link linkend=\"SoupCutClient\"><type>SoupCutClient</"
"type></link>に関連するアサーションのAPIも提供しています。"

#: xml/soupcut-client.xml:75(title)
msgid "soupcut_client_new ()"
msgstr ""

#: xml/soupcut-client.xml:77(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"SoupCutClient\"><returnvalue>SoupCutClient</returnvalue></link> *\n"
"soupcut_client_new (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/soupcut-client.xml:79(para)
msgid ""
"Creates and returns a new <link linkend=\"SoupCutClient"
"\"><type>SoupCutClient</type></link>"
msgstr ""
"新たに<link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link>オブ"
"ジェクトを生成して返します。"

#: xml/soupcut-client.xml:82(para)
msgid ""
"a new <link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link>."
msgstr ""
"<link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link>オブジェク"
"ト。"

#: xml/soupcut-client.xml:85(title)
msgid "soupcut_client_set_base ()"
msgstr ""

#: xml/soupcut-client.xml:87(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"soupcut_client_set_base (<parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>,\n"
"                         <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *uri</parameter>);"
msgstr ""

#: xml/soupcut-client.xml:90(para)
msgid ""
"Set <parameter>uri</parameter> as a base uri of <parameter>client</"
"parameter> ."
msgstr ""
"<parameter>client</parameter>のベースURIを<parameter>uri</parameter>に設定し"
"ます。"

#: xml/soupcut-client.xml:101(para) xml/soupcut-client.xml:127(para)
#: xml/soupcut-client.xml:160(para) xml/soupcut-client.xml:193(para)
#: xml/soupcut-client.xml:216(para) xml/soupcut-client.xml:239(para)
#: xml/soupcut-assertions.xml:100(para) xml/soupcut-assertions.xml:124(para)
#: xml/soupcut-assertions.xml:153(para) xml/soupcut-assertions.xml:183(para)
msgid "client"
msgstr ""

#: xml/soupcut-client.xml:102(para) xml/soupcut-client.xml:128(para)
#: xml/soupcut-client.xml:161(para) xml/soupcut-client.xml:194(para)
#: xml/soupcut-client.xml:217(para) xml/soupcut-client.xml:240(para)
#: xml/soupcut-assertions.xml:101(para) xml/soupcut-assertions.xml:125(para)
#: xml/soupcut-assertions.xml:154(para) xml/soupcut-assertions.xml:184(para)
msgid "a <link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link>."
msgstr ""
"<link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link>オブジェク"
"ト。"

#: xml/soupcut-client.xml:104(para) xml/soupcut-client.xml:163(para)
msgid "uri"
msgstr ""

#: xml/soupcut-client.xml:105(para)
msgid "a base uri."
msgstr "ベースURIの文字列。"

#: xml/soupcut-client.xml:110(title)
msgid "soupcut_client_send_message ()"
msgstr ""

#: xml/soupcut-client.xml:112(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"soupcut_client_send_message (<parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>,\n"
"                             <parameter><link linkend=\"SoupMessage\"><type>SoupMessage</type></link> *message</parameter>);"
msgstr ""

#: xml/soupcut-client.xml:115(para)
msgid ""
"Send <parameter>message</parameter> with <parameter>client</parameter> . "
"<parameter>client</parameter> remebers all the messages it sent."
msgstr ""
"<parameter>client</parameter>を使って<parameter>message</parameter>を送信しま"
"す。<parameter>client</parameter>は過去に送信した全ての<link linkend="
"\"SoupMessage\">SoupMessage</link>の情報を保持しています。"

#: xml/soupcut-client.xml:130(para) xml/soupcut-assertions.xml:69(para)
#: xml/cut-helper.xml:417(para)
msgid "message"
msgstr ""

#: xml/soupcut-client.xml:131(para) xml/soupcut-assertions.xml:70(para)
msgid "a <link linkend=\"SoupMessage\"><type>SoupMessage</type></link>."
msgstr ""
"<link linkend=\"SoupMessage\"><type>SoupMessage</type></link>オブジェクト。"

#: xml/soupcut-client.xml:136(para) xml/soupcut-client.xml:176(para)
msgid "a status code of the response."
msgstr "レスポンスのステータスコード。"

#: xml/soupcut-client.xml:139(title)
msgid "soupcut_client_get ()"
msgstr ""

#: xml/soupcut-client.xml:141(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"soupcut_client_get (<parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>,\n"
"                    <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *uri</parameter>,\n"
"                    <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *first_query_name</parameter>,\n"
"                    <parameter>...</parameter>);"
msgstr ""

#: xml/soupcut-client.xml:146(para)
msgid ""
"Send a GET request to <parameter>uri</parameter> with queries. If the base "
"URI of <parameter>client</parameter> is set by <link linkend=\"soupcut-"
"client-set-base\"><function>soupcut_client_set_base()</function></link>, the "
"destination URI is composed of the base URI and <parameter>uri</parameter> . "
"If not, <parameter>uri</parameter> must be a fully qualified URI."
msgstr ""
"<parameter>uri</parameter>とクエリパラメータで指定されたURIにGETリクエストを"
"送信します。もしも<parameter>client</parameter>のベースURIが<link linkend="
"\"soupcut-client-set-base\"><function>soupcut_client_set_base()</function></"
"link>によって設定されていた場合は、URIはベースURIと<parameter>uri</parameter>"
"を組み合わせたものとなります。そうでない場合は、<parameter>uri</parameter>は"
"絶対URIである必要があります。"

#: xml/soupcut-client.xml:164(para)
msgid "an URI string."
msgstr "URI文字列。"

#: xml/soupcut-client.xml:166(para)
msgid "first_query_name"
msgstr ""

#: xml/soupcut-client.xml:167(para)
msgid "the name of the first query parameter."
msgstr "ひとつめのクエリパラメータの名前"

#: xml/soupcut-client.xml:169(para) xml/soupcut-assertions.xml:72(para)
#: xml/soupcut-assertions.xml:103(para) xml/soupcut-assertions.xml:127(para)
#: xml/soupcut-assertions.xml:156(para) xml/soupcut-assertions.xml:186(para)
#: xml/gdkcut-pixbuf-assertions.xml:84(para) xml/gcut-test-utils.xml:271(para)
#: xml/gcut-test-utils.xml:307(para) xml/gcut-test-utils.xml:343(para)
#: xml/gcut-test-utils.xml:371(para) xml/gcut-test-utils.xml:431(para)
#: xml/gcut-test-utils.xml:468(para) xml/gcut-test-utils.xml:496(para)
#: xml/gcut-test-utils.xml:554(para) xml/gcut-test-utils.xml:624(para)
#: xml/gcut-test-utils.xml:691(para) xml/gcut-test-utils.xml:724(para)
#: xml/gcut-process.xml:233(para) xml/gcut-process.xml:439(para)
#: xml/gcut-egg.xml:222(para) xml/gcut-egg.xml:419(para)
#: xml/gcut-data.xml:312(para) xml/gcut-assertions.xml:127(para)
#: xml/gcut-assertions.xml:158(para) xml/gcut-assertions.xml:187(para)
#: xml/gcut-assertions.xml:218(para) xml/gcut-assertions.xml:266(para)
#: xml/gcut-assertions.xml:295(para) xml/gcut-assertions.xml:326(para)
#: xml/gcut-assertions.xml:355(para) xml/gcut-assertions.xml:384(para)
#: xml/gcut-assertions.xml:415(para) xml/gcut-assertions.xml:445(para)
#: xml/gcut-assertions.xml:480(para) xml/gcut-assertions.xml:514(para)
#: xml/gcut-assertions.xml:548(para) xml/gcut-assertions.xml:603(para)
#: xml/gcut-assertions.xml:633(para) xml/gcut-assertions.xml:657(para)
#: xml/gcut-assertions.xml:683(para) xml/gcut-assertions.xml:712(para)
#: xml/gcut-assertions.xml:736(para) xml/gcut-assertions.xml:762(para)
#: xml/gcut-assertions.xml:791(para) xml/gcut-assertions.xml:832(para)
#: xml/gcut-assertions.xml:878(para) xml/gcut-assertions.xml:917(para)
#: xml/gcut-assertions.xml:969(para) xml/gcut-assertions.xml:998(para)
#: xml/gcut-assertions.xml:1027(para) xml/gcut-assertions.xml:1056(para)
#: xml/gcut-assertions.xml:1085(para) xml/gcut-assertions.xml:1114(para)
#: xml/gcut-assertions.xml:1143(para) xml/gcut-assertions.xml:1172(para)
#: xml/cutter.xml:317(para) xml/cutter.xml:375(para) xml/cutter.xml:463(para)
#: xml/cutter.xml:527(para) xml/cut-test-utils.xml:271(para)
#: xml/cut-test-utils.xml:444(para) xml/cut-test-utils.xml:474(para)
#: xml/cut-test-utils.xml:506(para) xml/cut-test-utils.xml:538(para)
#: xml/cut-test-utils.xml:574(para) xml/cut-test-utils.xml:604(para)
#: xml/cut-test-utils.xml:629(para) xml/cut-test-utils.xml:680(para)
#: xml/cut-helper.xml:171(para) xml/cut-assertions.xml:215(para)
#: xml/cut-assertions.xml:239(para) xml/cut-assertions.xml:263(para)
#: xml/cut-assertions.xml:303(para) xml/cut-assertions.xml:343(para)
#: xml/cut-assertions.xml:367(para) xml/cut-assertions.xml:391(para)
#: xml/cut-assertions.xml:415(para) xml/cut-assertions.xml:444(para)
#: xml/cut-assertions.xml:473(para) xml/cut-assertions.xml:501(para)
#: xml/cut-assertions.xml:529(para) xml/cut-assertions.xml:557(para)
#: xml/cut-assertions.xml:585(para) xml/cut-assertions.xml:613(para)
#: xml/cut-assertions.xml:641(para) xml/cut-assertions.xml:669(para)
#: xml/cut-assertions.xml:697(para) xml/cut-assertions.xml:725(para)
#: xml/cut-assertions.xml:753(para) xml/cut-assertions.xml:781(para)
#: xml/cut-assertions.xml:809(para) xml/cut-assertions.xml:837(para)
#: xml/cut-assertions.xml:865(para) xml/cut-assertions.xml:893(para)
#: xml/cut-assertions.xml:921(para) xml/cut-assertions.xml:949(para)
#: xml/cut-assertions.xml:977(para) xml/cut-assertions.xml:1005(para)
#: xml/cut-assertions.xml:1033(para) xml/cut-assertions.xml:1062(para)
#: xml/cut-assertions.xml:1091(para) xml/cut-assertions.xml:1119(para)
#: xml/cut-assertions.xml:1147(para) xml/cut-assertions.xml:1175(para)
#: xml/cut-assertions.xml:1203(para) xml/cut-assertions.xml:1231(para)
#: xml/cut-assertions.xml:1259(para) xml/cut-assertions.xml:1287(para)
#: xml/cut-assertions.xml:1315(para) xml/cut-assertions.xml:1343(para)
#: xml/cut-assertions.xml:1371(para) xml/cut-assertions.xml:1399(para)
#: xml/cut-assertions.xml:1427(para) xml/cut-assertions.xml:1455(para)
#: xml/cut-assertions.xml:1483(para) xml/cut-assertions.xml:1511(para)
#: xml/cut-assertions.xml:1539(para) xml/cut-assertions.xml:1567(para)
#: xml/cut-assertions.xml:1595(para) xml/cut-assertions.xml:1623(para)
#: xml/cut-assertions.xml:1651(para) xml/cut-assertions.xml:1680(para)
#: xml/cut-assertions.xml:1709(para) xml/cut-assertions.xml:1745(para)
#: xml/cut-assertions.xml:1782(para) xml/cut-assertions.xml:1814(para)
#: xml/cut-assertions.xml:1846(para) xml/cut-assertions.xml:1887(para)
#: xml/cut-assertions.xml:1928(para) xml/cut-assertions.xml:1961(para)
#: xml/cut-assertions.xml:1989(para) xml/cut-assertions.xml:2038(para)
#: xml/cut-assertions.xml:2085(para) xml/cut-assertions.xml:2128(para)
#: xml/cut-assertions.xml:2171(para) xml/cut-assertions.xml:2201(para)
#: xml/cut-assertions.xml:2232(para) xml/cut-assertions.xml:2267(para)
#: xml/cut-assertions.xml:2302(para) xml/cut-assertions.xml:2337(para)
#: xml/cut-assertions.xml:2372(para) xml/cut-assertions.xml:2407(para)
#: xml/cut-assertions.xml:2444(para) xml/cut-assertions.xml:2469(para)
#: xml/cut-assertions.xml:2501(para) xml/cut-assertions.xml:2533(para)
#: xml/cut-assertions.xml:2563(para) xml/cut-assertions.xml:2595(para)
#: xml/cut-assertions.xml:2625(para) xml/cut-assertions.xml:2660(para)
#: xml/cut-assertions.xml:2690(para) xml/cut-assertions.xml:2719(para)
#: xml/cut-assertions.xml:2748(para) xml/cut-assertions.xml:2775(para)
#: xml/cut-assertions.xml:2801(para) xml/cut-assertions.xml:2827(para)
#: xml/cut-assertions.xml:2850(para) xml/cut-assertions.xml:2879(para)
#: xml/cut-assertions.xml:2902(para) xml/cut-assertions.xml:2926(para)
#: xml/cut-assertions.xml:2952(para) xml/cut-assertions.xml:2975(para)
#: xml/cut-assertions.xml:3004(para) xml/cppcutter.xml:128(para)
#: xml/cppcut-assertions.xml:74(para) xml/cppcut-assertions.xml:111(para)
#: xml/cppcut-assertions.xml:145(para) xml/cppcut-assertions.xml:179(para)
#: xml/cppcut-assertions.xml:219(para)
msgid "..."
msgstr ""

#: xml/soupcut-client.xml:170(para)
msgid ""
"pairs of query parameter names and values, starting with "
"<parameter>first_query_name</parameter> , terminated by <link linkend=\"NULL:"
"CAPS\"><literal>NULL</literal></link>"
msgstr ""
"<parameter>first_query_name</parameter>から始まる、クエリパラメータの名前と値"
"のペア。最後に<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>を指"
"定しなければいけません。"

#: xml/soupcut-client.xml:179(title)
msgid "soupcut_client_get_n_messages ()"
msgstr ""

#: xml/soupcut-client.xml:181(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"soupcut_client_get_n_messages (<parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>);"
msgstr ""

#: xml/soupcut-client.xml:183(para)
msgid "Returns the number of messages <parameter>client</parameter> sent."
msgstr "<parameter>client</parameter>が送信した#SoupMessageの数。"

#: xml/soupcut-client.xml:199(para)
msgid "the number of messages."
msgstr "SoupMessageの数。"

#: xml/soupcut-client.xml:202(title)
msgid "soupcut_client_get_latest_message ()"
msgstr ""

#: xml/soupcut-client.xml:204(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"SoupMessage\"><returnvalue>SoupMessage</returnvalue></link> *\n"
"soupcut_client_get_latest_message (<parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>);"
msgstr ""

#: xml/soupcut-client.xml:206(para)
msgid ""
"Returns the latest <link linkend=\"SoupMessage\"><type>SoupMessage</type></"
"link> <parameter>client</parameter> sent."
msgstr ""
"<parameter>client</parameter>が最後に送信した<link linkend=\"SoupMessage"
"\"><type>SoupMessage</type></link>オブジェクト。"

#: xml/soupcut-client.xml:222(para)
msgid ""
"the latest <link linkend=\"SoupMessage\"><type>SoupMessage</type></link>."
msgstr ""
"最後に送信された<link linkend=\"SoupMessage\"><type>SoupMessage</type></link>"
"オブジェクト。"

#: xml/soupcut-client.xml:225(title)
msgid "soupcut_client_get_async_context ()"
msgstr ""

#: xml/soupcut-client.xml:227(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GMainContext\"><returnvalue>GMainContext</returnvalue></link> *\n"
"soupcut_client_get_async_context (<parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>);"
msgstr ""

#: xml/soupcut-client.xml:229(para)
msgid "Returns the asynch_context of <parameter>client</parameter> ."
msgstr "<parameter>client</parameter>の非同期コンテキスト。"

#: xml/soupcut-client.xml:245(para)
msgid ""
"a <link linkend=\"GMainContext\"><type>GMainContext</type></link> of "
"<parameter>client</parameter> , which may be <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>."
msgstr ""
"<parameter>client</parameter>の<link linkend=\"GMainContext"
"\"><type>GMainContext</type></link>。<link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>が返る可能性があります。"

#: xml/soupcut-client.xml:255(title) xml/gcut-process.xml:988(title)
#: xml/gcut-egg.xml:829(title)
msgid "Property Details"
msgstr "プロパティ詳細"

#: xml/soupcut-client.xml:256(title)
msgid "The <literal>“async”</literal> property"
msgstr "<literal>\"async\"</literal>プロパティ"

#: xml/soupcut-client.xml:257(primary) xml/api-index-full.xml:563(link)
msgid "SoupCutClient:async"
msgstr ""

#: xml/soupcut-client.xml:258(programlisting)
#, no-wrap
msgid "  “async”                    <link linkend=\"gboolean\"><type>gboolean</type></link>"
msgstr "<link linkend=\"gboolean\"><type>gboolean</type></link>の値。"

#: xml/soupcut-client.xml:259(para)
msgid "True if the session is asynchronous."
msgstr "セッションが非同期の場合は真。"

#: xml/soupcut-client.xml:259(para) xml/gcut-process.xml:992(para)
#: xml/gcut-egg.xml:833(para)
msgid "Flags: Read / Write"
msgstr ""

#: xml/soupcut-client.xml:260(para)
msgid "Default value: FALSE"
msgstr "デフォルト値: FALSE"

#: xml/soupcut-assertions.xml:13(refpurpose)
msgid ""
"Checks that your HTTP client/server works as you expect with libsoup support."
msgstr ""
"libsoupを使ってあなたのHTTPクライアント・サーバが期待通りに動作しているかを検"
"証します。"

#: xml/soupcut-assertions.xml:25(link) xml/soupcut-assertions.xml:49(primary)
#: xml/api-index-full.xml:580(link) xml/api-index-1.0.8.xml:22(link)
msgid "soupcut_message_assert_equal_content_type"
msgstr ""

#: xml/soupcut-assertions.xml:27(link) xml/soupcut-assertions.xml:79(primary)
#: xml/api-index-full.xml:567(link) xml/api-index-1.0.8.xml:12(link)
msgid "soupcut_client_assert_equal_content_type"
msgstr ""

#: xml/soupcut-assertions.xml:29(link) xml/soupcut-assertions.xml:110(primary)
#: xml/api-index-full.xml:571(link) xml/api-index-1.0.8.xml:14(link)
msgid "soupcut_client_assert_response"
msgstr ""

#: xml/soupcut-assertions.xml:31(link) xml/soupcut-assertions.xml:134(primary)
#: xml/api-index-full.xml:565(link) xml/api-index-1.0.8.xml:11(link)
msgid "soupcut_client_assert_equal_body"
msgstr ""

#: xml/soupcut-assertions.xml:33(link) xml/soupcut-assertions.xml:163(primary)
#: xml/api-index-full.xml:569(link) xml/api-index-1.0.8.xml:13(link)
msgid "soupcut_client_assert_match_body"
msgstr ""

#: xml/soupcut-assertions.xml:48(title)
msgid "soupcut_message_assert_equal_content_type ()"
msgstr ""

#: xml/soupcut-assertions.xml:50(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"soupcut_message_assert_equal_content_type\n"
"                               (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expected</parameter>,\n"
"                                <parameter><link linkend=\"SoupMessage\"><type>SoupMessage</type></link> *message</parameter>,\n"
"                                <parameter>...</parameter>);"
msgstr ""

#: xml/soupcut-assertions.xml:55(para)
msgid ""
"Passes if <parameter>expected</parameter> == <parameter>message-&gt;"
"response_headers-&gt;content_type</parameter> ."
msgstr ""
"<parameter>expected</parameter> == <parameter>message-&gt;response_headers-"
"&gt;content_type</parameter>が成り立つときパスします。"

#: xml/soupcut-assertions.xml:66(para) xml/soupcut-assertions.xml:97(para)
#: xml/soupcut-assertions.xml:150(para)
#: xml/gdkcut-pixbuf-assertions.xml:75(para) xml/gcut-assertions.xml:121(para)
#: xml/gcut-assertions.xml:152(para) xml/gcut-assertions.xml:181(para)
#: xml/gcut-assertions.xml:212(para) xml/gcut-assertions.xml:245(para)
#: xml/gcut-assertions.xml:289(para) xml/gcut-assertions.xml:320(para)
#: xml/gcut-assertions.xml:349(para) xml/gcut-assertions.xml:378(para)
#: xml/gcut-assertions.xml:409(para) xml/gcut-assertions.xml:439(para)
#: xml/gcut-assertions.xml:471(para) xml/gcut-assertions.xml:508(para)
#: xml/gcut-assertions.xml:542(para) xml/gcut-assertions.xml:575(para)
#: xml/gcut-assertions.xml:627(para) xml/gcut-assertions.xml:706(para)
#: xml/gcut-assertions.xml:785(para) xml/gcut-assertions.xml:826(para)
#: xml/gcut-assertions.xml:872(para) xml/gcut-assertions.xml:911(para)
#: xml/gcut-assertions.xml:960(para) xml/gcut-assertions.xml:992(para)
#: xml/gcut-assertions.xml:1021(para) xml/gcut-assertions.xml:1050(para)
#: xml/gcut-assertions.xml:1079(para) xml/gcut-assertions.xml:1108(para)
#: xml/gcut-assertions.xml:1137(para) xml/gcut-assertions.xml:1166(para)
#: xml/cut-helper.xml:453(para) xml/cut-assertions.xml:297(para)
#: xml/cut-assertions.xml:337(para) xml/cut-assertions.xml:438(para)
#: xml/cut-assertions.xml:467(para) xml/cut-assertions.xml:495(para)
#: xml/cut-assertions.xml:523(para) xml/cut-assertions.xml:551(para)
#: xml/cut-assertions.xml:579(para) xml/cut-assertions.xml:607(para)
#: xml/cut-assertions.xml:635(para) xml/cut-assertions.xml:663(para)
#: xml/cut-assertions.xml:691(para) xml/cut-assertions.xml:719(para)
#: xml/cut-assertions.xml:747(para) xml/cut-assertions.xml:775(para)
#: xml/cut-assertions.xml:803(para) xml/cut-assertions.xml:831(para)
#: xml/cut-assertions.xml:859(para) xml/cut-assertions.xml:887(para)
#: xml/cut-assertions.xml:915(para) xml/cut-assertions.xml:943(para)
#: xml/cut-assertions.xml:971(para) xml/cut-assertions.xml:999(para)
#: xml/cut-assertions.xml:1027(para) xml/cut-assertions.xml:1056(para)
#: xml/cut-assertions.xml:1085(para) xml/cut-assertions.xml:1113(para)
#: xml/cut-assertions.xml:1141(para) xml/cut-assertions.xml:1169(para)
#: xml/cut-assertions.xml:1197(para) xml/cut-assertions.xml:1225(para)
#: xml/cut-assertions.xml:1253(para) xml/cut-assertions.xml:1281(para)
#: xml/cut-assertions.xml:1309(para) xml/cut-assertions.xml:1337(para)
#: xml/cut-assertions.xml:1365(para) xml/cut-assertions.xml:1393(para)
#: xml/cut-assertions.xml:1421(para) xml/cut-assertions.xml:1449(para)
#: xml/cut-assertions.xml:1477(para) xml/cut-assertions.xml:1505(para)
#: xml/cut-assertions.xml:1533(para) xml/cut-assertions.xml:1561(para)
#: xml/cut-assertions.xml:1589(para) xml/cut-assertions.xml:1617(para)
#: xml/cut-assertions.xml:1645(para) xml/cut-assertions.xml:1674(para)
#: xml/cut-assertions.xml:1703(para) xml/cut-assertions.xml:1736(para)
#: xml/cut-assertions.xml:1773(para) xml/cut-assertions.xml:1808(para)
#: xml/cut-assertions.xml:1840(para) xml/cut-assertions.xml:1881(para)
#: xml/cut-assertions.xml:1922(para) xml/cut-assertions.xml:1955(para)
#: xml/cut-assertions.xml:1983(para) xml/cut-assertions.xml:2029(para)
#: xml/cut-assertions.xml:2076(para) xml/cut-assertions.xml:2114(para)
#: xml/cut-assertions.xml:2157(para) xml/cut-assertions.xml:2195(para)
#: xml/cut-assertions.xml:2226(para) xml/cut-assertions.xml:2438(para)
#: xml/cut-assertions.xml:2713(para) xml/cut-assertions.xml:2742(para)
#: xml/cut-assertions.xml:2769(para) xml/cut-assertions.xml:2795(para)
#: xml/cut-assertions.xml:2821(para) xml/cppcut-assertions.xml:68(para)
#: xml/cppcut-assertions.xml:105(para)
msgid "expected"
msgstr "期待するリスト。"

#: xml/soupcut-assertions.xml:67(para) xml/soupcut-assertions.xml:98(para)
msgid "an expected Content-Type."
msgstr "期待するContent-Type。"

#: xml/soupcut-assertions.xml:73(para) xml/soupcut-assertions.xml:104(para)
#: xml/soupcut-assertions.xml:128(para) xml/soupcut-assertions.xml:157(para)
#: xml/soupcut-assertions.xml:187(para)
#: xml/gdkcut-pixbuf-assertions.xml:85(para) xml/gcut-assertions.xml:128(para)
#: xml/gcut-assertions.xml:159(para) xml/gcut-assertions.xml:188(para)
#: xml/gcut-assertions.xml:219(para) xml/gcut-assertions.xml:267(para)
#: xml/gcut-assertions.xml:296(para) xml/gcut-assertions.xml:327(para)
#: xml/gcut-assertions.xml:356(para) xml/gcut-assertions.xml:385(para)
#: xml/gcut-assertions.xml:416(para) xml/gcut-assertions.xml:446(para)
#: xml/gcut-assertions.xml:481(para) xml/gcut-assertions.xml:515(para)
#: xml/gcut-assertions.xml:549(para) xml/gcut-assertions.xml:604(para)
#: xml/gcut-assertions.xml:634(para) xml/gcut-assertions.xml:658(para)
#: xml/gcut-assertions.xml:684(para) xml/gcut-assertions.xml:713(para)
#: xml/gcut-assertions.xml:792(para) xml/gcut-assertions.xml:833(para)
#: xml/gcut-assertions.xml:879(para) xml/gcut-assertions.xml:918(para)
#: xml/gcut-assertions.xml:970(para) xml/gcut-assertions.xml:999(para)
#: xml/gcut-assertions.xml:1028(para) xml/gcut-assertions.xml:1057(para)
#: xml/gcut-assertions.xml:1086(para) xml/gcut-assertions.xml:1115(para)
#: xml/gcut-assertions.xml:1144(para) xml/gcut-assertions.xml:1173(para)
#: xml/cut-assertions.xml:216(para) xml/cut-assertions.xml:240(para)
#: xml/cut-assertions.xml:264(para) xml/cut-assertions.xml:304(para)
#: xml/cut-assertions.xml:344(para) xml/cut-assertions.xml:368(para)
#: xml/cut-assertions.xml:392(para) xml/cut-assertions.xml:416(para)
#: xml/cut-assertions.xml:445(para) xml/cut-assertions.xml:474(para)
#: xml/cut-assertions.xml:502(para) xml/cut-assertions.xml:530(para)
#: xml/cut-assertions.xml:558(para) xml/cut-assertions.xml:586(para)
#: xml/cut-assertions.xml:614(para) xml/cut-assertions.xml:642(para)
#: xml/cut-assertions.xml:670(para) xml/cut-assertions.xml:698(para)
#: xml/cut-assertions.xml:726(para) xml/cut-assertions.xml:754(para)
#: xml/cut-assertions.xml:782(para) xml/cut-assertions.xml:810(para)
#: xml/cut-assertions.xml:838(para) xml/cut-assertions.xml:866(para)
#: xml/cut-assertions.xml:894(para) xml/cut-assertions.xml:922(para)
#: xml/cut-assertions.xml:950(para) xml/cut-assertions.xml:978(para)
#: xml/cut-assertions.xml:1006(para) xml/cut-assertions.xml:1034(para)
#: xml/cut-assertions.xml:1063(para) xml/cut-assertions.xml:1092(para)
#: xml/cut-assertions.xml:1120(para) xml/cut-assertions.xml:1148(para)
#: xml/cut-assertions.xml:1176(para) xml/cut-assertions.xml:1204(para)
#: xml/cut-assertions.xml:1232(para) xml/cut-assertions.xml:1260(para)
#: xml/cut-assertions.xml:1288(para) xml/cut-assertions.xml:1316(para)
#: xml/cut-assertions.xml:1344(para) xml/cut-assertions.xml:1372(para)
#: xml/cut-assertions.xml:1400(para) xml/cut-assertions.xml:1428(para)
#: xml/cut-assertions.xml:1456(para) xml/cut-assertions.xml:1484(para)
#: xml/cut-assertions.xml:1512(para) xml/cut-assertions.xml:1540(para)
#: xml/cut-assertions.xml:1568(para) xml/cut-assertions.xml:1596(para)
#: xml/cut-assertions.xml:1624(para) xml/cut-assertions.xml:1652(para)
#: xml/cut-assertions.xml:1681(para) xml/cut-assertions.xml:1710(para)
#: xml/cut-assertions.xml:1746(para) xml/cut-assertions.xml:1783(para)
#: xml/cut-assertions.xml:1815(para) xml/cut-assertions.xml:1847(para)
#: xml/cut-assertions.xml:1888(para) xml/cut-assertions.xml:1929(para)
#: xml/cut-assertions.xml:1962(para) xml/cut-assertions.xml:1990(para)
#: xml/cut-assertions.xml:2039(para) xml/cut-assertions.xml:2086(para)
#: xml/cut-assertions.xml:2129(para) xml/cut-assertions.xml:2172(para)
#: xml/cut-assertions.xml:2202(para) xml/cut-assertions.xml:2233(para)
#: xml/cut-assertions.xml:2268(para) xml/cut-assertions.xml:2303(para)
#: xml/cut-assertions.xml:2338(para) xml/cut-assertions.xml:2373(para)
#: xml/cut-assertions.xml:2408(para) xml/cut-assertions.xml:2445(para)
#: xml/cut-assertions.xml:2470(para) xml/cut-assertions.xml:2502(para)
#: xml/cut-assertions.xml:2534(para) xml/cut-assertions.xml:2564(para)
#: xml/cut-assertions.xml:2596(para) xml/cut-assertions.xml:2626(para)
#: xml/cut-assertions.xml:2661(para) xml/cut-assertions.xml:2691(para)
#: xml/cut-assertions.xml:2720(para) xml/cut-assertions.xml:2776(para)
#: xml/cut-assertions.xml:2802(para) xml/cut-assertions.xml:2828(para)
#: xml/cut-assertions.xml:2880(para)
msgid ""
"optional message. See <link linkend=\"cut-message\"><function>cut_message()</"
"function></link> for details."
msgstr ""
"追加メッセージ（省略可能）。詳細は<link linkend=\"cut-message"
"\"><function>cut_message()</function></link>を見てください。"

#: xml/soupcut-assertions.xml:78(title)
msgid "soupcut_client_assert_equal_content_type ()"
msgstr ""

#: xml/soupcut-assertions.xml:80(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"soupcut_client_assert_equal_content_type\n"
"                               (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expected</parameter>,\n"
"                                <parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>,\n"
"                                <parameter>...</parameter>);"
msgstr ""

#: xml/soupcut-assertions.xml:85(para)
msgid ""
"Passes if <parameter>expected</parameter> equals to Content-Type of the "
"latest message of <parameter>client</parameter> ."
msgstr ""
"<parameter>expected</parameter>が<parameter>client</parameter>の最後のメッ"
"セージのContent-Typeと等しいとパスします。"

#: xml/soupcut-assertions.xml:109(title)
msgid "soupcut_client_assert_response ()"
msgstr ""

#: xml/soupcut-assertions.xml:111(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"soupcut_client_assert_response (<parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>,\n"
"                                <parameter>...</parameter>);"
msgstr ""

#: xml/soupcut-assertions.xml:114(para)
msgid "Passes if status code of <parameter>client</parameter> is 2XX."
msgstr "<parameter>client</parameter>のステータスコードが2XXならパスします。"

#: xml/soupcut-assertions.xml:133(title)
msgid "soupcut_client_assert_equal_body ()"
msgstr ""

#: xml/soupcut-assertions.xml:135(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"soupcut_client_assert_equal_body (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expected</parameter>,\n"
"                                  <parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>,\n"
"                                  <parameter>...</parameter>);"
msgstr ""

#: xml/soupcut-assertions.xml:139(para)
msgid ""
"Passes if <parameter>expected</parameter> == <parameter>client-&gt;"
"response_body-&gt;data</parameter> ."
msgstr ""
"<parameter>expected</parameter> == <parameter>message-&gt;response_body-&gt;"
"data</parameter>が成り立つときパスします。"

#: xml/soupcut-assertions.xml:151(para)
msgid "an expected response body."
msgstr "期待するレスポンスの本体。"

#: xml/soupcut-assertions.xml:162(title)
msgid "soupcut_client_assert_match_body ()"
msgstr ""

#: xml/soupcut-assertions.xml:164(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"soupcut_client_assert_match_body (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *pattern</parameter>,\n"
"                                  <parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>,\n"
"                                  <parameter>...</parameter>);"
msgstr ""

#: xml/soupcut-assertions.xml:168(para)
msgid ""
"Passes if <parameter>pattern</parameter> matches the response body of the "
"latest message of <parameter>client</parameter> ."
msgstr ""
"<parameter>pattern</parameter>が<parameter>client</parameter>の最後のメッセー"
"ジのレスポンスの本体にマッチしたときにパスします。"

#: xml/soupcut-assertions.xml:180(para) xml/cut-test-utils.xml:357(para)
#: xml/cut-assertions.xml:2654(para) xml/cut-assertions.xml:2684(para)
msgid "pattern"
msgstr ""

#: xml/soupcut-assertions.xml:181(para) xml/cut-assertions.xml:2655(para)
msgid "the regular expression pattern."
msgstr "正規表現。"

#: xml/soupcut-assertions-helper.xml:7(refentrytitle)
#: xml/soupcut-assertions-helper.xml:12(refname)
#: xml/api-index-full.xml:566(link) xml/api-index-full.xml:568(link)
#: xml/api-index-full.xml:570(link) xml/api-index-full.xml:572(link)
#: xml/api-index-full.xml:581(link)
msgid "soupcut-assertions-helper"
msgstr ""

#: xml/soupcut-assertions-helper.xml:24(link)
#: xml/soupcut-assertions-helper.xml:50(primary)
#: xml/api-index-full.xml:581(link)
msgid "soupcut_message_assert_equal_content_type_helper"
msgstr ""

#: xml/soupcut-assertions-helper.xml:26(link)
#: xml/soupcut-assertions-helper.xml:62(primary)
#: xml/api-index-full.xml:568(link)
msgid "soupcut_client_assert_equal_content_type_helper"
msgstr ""

#: xml/soupcut-assertions-helper.xml:28(link)
#: xml/soupcut-assertions-helper.xml:74(primary)
#: xml/api-index-full.xml:572(link)
msgid "soupcut_client_assert_response_helper"
msgstr ""

#: xml/soupcut-assertions-helper.xml:30(link)
#: xml/soupcut-assertions-helper.xml:83(primary)
#: xml/api-index-full.xml:566(link)
msgid "soupcut_client_assert_equal_body_helper"
msgstr ""

#: xml/soupcut-assertions-helper.xml:32(link)
#: xml/soupcut-assertions-helper.xml:95(primary)
#: xml/api-index-full.xml:570(link)
msgid "soupcut_client_assert_match_body_helper"
msgstr ""

#: xml/soupcut-assertions-helper.xml:49(title)
msgid "soupcut_message_assert_equal_content_type_helper ()"
msgstr ""

#: xml/soupcut-assertions-helper.xml:51(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"soupcut_message_assert_equal_content_type_helper\n"
"                               (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expected</parameter>,\n"
"                                <parameter><link linkend=\"SoupMessage\"><type>SoupMessage</type></link> *message</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_message</parameter>);"
msgstr ""

#: xml/soupcut-assertions-helper.xml:61(title)
msgid "soupcut_client_assert_equal_content_type_helper ()"
msgstr ""

#: xml/soupcut-assertions-helper.xml:63(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"soupcut_client_assert_equal_content_type_helper\n"
"                               (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expected</parameter>,\n"
"                                <parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_client</parameter>);"
msgstr ""

#: xml/soupcut-assertions-helper.xml:73(title)
msgid "soupcut_client_assert_response_helper ()"
msgstr ""

#: xml/soupcut-assertions-helper.xml:75(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"soupcut_client_assert_response_helper (<parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>,\n"
"                                       <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_client</parameter>);"
msgstr ""

#: xml/soupcut-assertions-helper.xml:82(title)
msgid "soupcut_client_assert_equal_body_helper ()"
msgstr ""

#: xml/soupcut-assertions-helper.xml:84(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"soupcut_client_assert_equal_body_helper\n"
"                               (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expected</parameter>,\n"
"                                <parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_client</parameter>);"
msgstr ""

#: xml/soupcut-assertions-helper.xml:94(title)
msgid "soupcut_client_assert_match_body_helper ()"
msgstr ""

#: xml/soupcut-assertions-helper.xml:96(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"soupcut_client_assert_match_body_helper\n"
"                               (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *pattern</parameter>,\n"
"                                <parameter><link linkend=\"SoupCutClient\"><type>SoupCutClient</type></link> *client</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_pattern</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_client</parameter>);"
msgstr ""

#: xml/gdkcutter-pixbuf.xml:7(refentrytitle)
#: xml/gdkcutter-pixbuf.xml:12(refname) xml/api-index-full.xml:445(link)
#: xml/api-index-1.0.6.xml:71(link)
msgid "GdkCutter Pixbuf"
msgstr ""

#: xml/gdkcutter-pixbuf.xml:13(refpurpose)
msgid "Cutter with gdk-pixbuf support."
msgstr "gdk-pixbufサポート付きのCutter。"

#: xml/gdkcutter-pixbuf.xml:23(link) xml/gdkcutter-pixbuf.xml:70(title)
#: xml/gdkcutter-pixbuf.xml:71(primary) xml/api-index-full.xml:445(link)
#: xml/api-index-1.0.6.xml:71(link)
msgid "GDKCUTTER_PIXBUF_ENABLED"
msgstr ""

#: xml/gdkcutter-pixbuf.xml:33(para)
msgid ""
"GdkCutter Pixbuf adds many useful features based on gdk-pixbuf to Cutter. If "
"you want to write tests for image, it's good idea that you consider "
"GdkCutter Pixbuf to be used too."
msgstr ""
"GdkCutter Pixbufはgdk-pixbufベースのたくさんの便利な機能をCutterに追加しま"
"す。画像のテストを書きたい場合はGdkCutter Pixbufの使用を検討してください。"

#: xml/gdkcutter-pixbuf.xml:37(para)
msgid ""
"It's easy to use GdkCutter Pixbuf. You just include &lt;gdk-cutter-pixbuf."
"h&gt; instead of &lt;cutter.h&gt; or &lt;gcutter.h&gt; and use gdkcutter-"
"pixbuf.pc instead of cutter.pc or gcutter.pc:"
msgstr ""
"GdkCutter Pixbufを使うことは簡単です。&lt;cutter.h&gt;または&lt;gcutter.h&gt;"
"の代わりに&lt;gdk-cutter-pixbuf.h&gt;をincludeし、cutter.pcまたはgcutter.pcの"
"代わりにgdkcutter-pixbuf.pcを使うだけです。"

#: xml/gdkcutter-pixbuf.xml:72(programlisting)
#, no-wrap
msgid "#define GDKCUTTER_PIXBUF_ENABLED 1\n"
msgstr ""

#: xml/gdkcutter-pixbuf.xml:74(para)
msgid "Defined when GdkCutter Pixbuf is enabled."
msgstr "GdkCutter Pixbufが有効なとき定義されます。"

#: xml/gdkcutter-pixbuf.xml:75(para) xml/gcutter.xml:73(para)
#: xml/gcut-types.xml:71(para) xml/gcut-test-utils.xml:402(para)
#: xml/gcut-test-utils.xml:536(para) xml/gcut-list.xml:191(para)
#: xml/gcut-list.xml:217(para) xml/gcut-list.xml:251(para)
#: xml/gcut-list.xml:277(para) xml/gcut-list.xml:311(para)
#: xml/gcut-list.xml:337(para) xml/gcut-list.xml:363(para)
#: xml/gcut-list.xml:394(para) xml/gcut-list.xml:425(para)
#: xml/gcut-inspect.xml:100(para) xml/gcut-inspect.xml:134(para)
#: xml/gcut-inspect.xml:168(para) xml/gcut-inspect.xml:338(para)
#: xml/gcut-inspect.xml:371(para) xml/gcut-inspect.xml:410(para)
#: xml/gcut-inspect.xml:449(para) xml/gcut-inspect.xml:483(para)
#: xml/gcut-enum.xml:144(para) xml/gcut-enum.xml:215(para)
#: xml/gcut-enum.xml:243(para) xml/gcut-enum.xml:255(para)
#: xml/gcut-enum.xml:279(para) xml/gcut-egg.xml:230(para)
#: xml/gcut-egg.xml:260(para) xml/gcut-egg.xml:291(para)
#: xml/gcut-egg.xml:317(para) xml/gcut-egg.xml:343(para)
#: xml/gcut-egg.xml:369(para) xml/gcut-egg.xml:394(para)
#: xml/gcut-egg.xml:425(para) xml/gcut-egg.xml:452(para)
#: xml/gcut-egg.xml:480(para) xml/gcut-egg.xml:502(para)
#: xml/gcut-egg.xml:540(para) xml/gcut-egg.xml:566(para)
#: xml/gcut-egg.xml:606(para) xml/gcut-egg.xml:632(para)
#: xml/gcut-egg.xml:658(para) xml/gcut-egg.xml:684(para)
#: xml/gcut-egg.xml:710(para) xml/gcut-egg.xml:737(para)
#: xml/gcut-egg.xml:766(para) xml/gcut-egg.xml:825(para)
#: xml/gcut-egg.xml:846(para) xml/gcut-egg.xml:854(para)
#: xml/gcut-egg.xml:862(para) xml/gcut-egg.xml:869(para)
#: xml/gcut-data.xml:319(para) xml/gcut-data.xml:401(para)
#: xml/gcut-data.xml:429(para) xml/gcut-data.xml:458(para)
#: xml/gcut-data.xml:567(para) xml/gcut-data.xml:596(para)
#: xml/gcut-data.xml:625(para) xml/gcut-assertions.xml:270(para)
#: xml/gcut-assertions.xml:607(para) xml/gcut-assertions.xml:1118(para)
#: xml/cutter.xml:193(para) xml/cutter.xml:215(para) xml/cutter.xml:224(para)
#: xml/cutter.xml:233(para) xml/cutter.xml:467(para) xml/cutter.xml:492(para)
#: xml/cutter.xml:502(para) xml/cut-test-utils.xml:367(para)
#: xml/cut-helper.xml:244(para) xml/cut-helper.xml:253(para)
#: xml/cut-helper.xml:704(para) xml/cut-assertions.xml:1684(para)
#: xml/cut-assertions.xml:3035(para)
msgid "Since: <link linkend=\"api-index-1.0.6\">1.0.6</link>"
msgstr ""

#: xml/gdkcutter-pixbuf.xml:81(link)
#: xml/gdkcut-pixbuf-assertions.xml:7(refentrytitle)
#: xml/gdkcut-pixbuf-assertions.xml:12(refname)
#: xml/api-index-full.xml:446(link) xml/api-index-1.0.5.xml:54(link)
msgid "Assertions with gdk-pixbuf support"
msgstr "gdk-pixbufサポート付きの検証"

#: xml/gdkcut-pixbuf.xml:7(refentrytitle) xml/gdkcut-pixbuf.xml:12(refname)
#: xml/api-index-full.xml:448(link) xml/api-index-full.xml:449(link)
#: xml/api-index-full.xml:450(link) xml/api-index-full.xml:451(link)
msgid "gdkcut-pixbuf"
msgstr ""

#: xml/gdkcut-pixbuf.xml:24(link) xml/gdkcut-pixbuf.xml:48(primary)
#: xml/api-index-full.xml:450(link)
msgid "gdkcut_pixbuf_equal_property"
msgstr ""

#: xml/gdkcut-pixbuf.xml:26(link) xml/gdkcut-pixbuf.xml:57(primary)
#: xml/api-index-full.xml:449(link)
msgid "gdkcut_pixbuf_equal_content"
msgstr ""

#: xml/gdkcut-pixbuf.xml:27(returnvalue)
msgid "GdkPixbuf"
msgstr ""

#: xml/gdkcut-pixbuf.xml:27(entry)
msgid "<link linkend=\"GdkPixbuf\"><placeholder-1/></link> *"
msgstr ""

#: xml/gdkcut-pixbuf.xml:28(link) xml/gdkcut-pixbuf.xml:67(primary)
#: xml/api-index-full.xml:448(link)
msgid "gdkcut_pixbuf_diff"
msgstr ""

#: xml/gdkcut-pixbuf.xml:29(entry) xml/gcut-string.xml:26(entry)
#: xml/gcut-object.xml:26(entry) xml/gcut-object.xml:28(entry)
#: xml/gcut-list.xml:26(entry) xml/gcut-list.xml:30(entry)
#: xml/gcut-list.xml:34(entry) xml/gcut-list.xml:38(entry)
#: xml/gcut-list.xml:40(entry) xml/gcut-list.xml:42(entry)
#: xml/gcut-list.xml:44(entry) xml/gcut-io.xml:23(entry)
#: xml/gcut-hash-table.xml:26(entry) xml/gcut-hash-table.xml:28(entry)
#: xml/gcut-hash-table.xml:32(entry) xml/gcut-error.xml:26(entry)
#: xml/gcut-enum.xml:26(entry) xml/gcut-enum.xml:30(entry)
msgid "<link linkend=\"gchar\"><placeholder-1/></link> *"
msgstr ""

#: xml/gdkcut-pixbuf.xml:30(link) xml/gdkcut-pixbuf.xml:77(primary)
#: xml/api-index-full.xml:451(link)
msgid "gdkcut_pixbuf_save_diff"
msgstr ""

#: xml/gdkcut-pixbuf.xml:47(title)
msgid "gdkcut_pixbuf_equal_property ()"
msgstr ""

#: xml/gdkcut-pixbuf.xml:49(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gdkcut_pixbuf_equal_property (<parameter>const <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link> *pixbuf1</parameter>,\n"
"                              <parameter>const <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link> *pixbuf2</parameter>);"
msgstr ""

#: xml/gdkcut-pixbuf.xml:56(title)
msgid "gdkcut_pixbuf_equal_content ()"
msgstr ""

#: xml/gdkcut-pixbuf.xml:58(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gdkcut_pixbuf_equal_content (<parameter>const <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link> *pixbuf1</parameter>,\n"
"                             <parameter>const <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link> *pixbuf2</parameter>,\n"
"                             <parameter><link linkend=\"guint\"><type>guint</type></link> threshold</parameter>);"
msgstr ""

#: xml/gdkcut-pixbuf.xml:66(title)
msgid "gdkcut_pixbuf_diff ()"
msgstr ""

#: xml/gdkcut-pixbuf.xml:68(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GdkPixbuf\"><returnvalue>GdkPixbuf</returnvalue></link> *\n"
"gdkcut_pixbuf_diff (<parameter>const <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link> *pixbuf1</parameter>,\n"
"                    <parameter>const <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link> *pixbuf2</parameter>,\n"
"                    <parameter><link linkend=\"guint\"><type>guint</type></link> threshold</parameter>);"
msgstr ""

#: xml/gdkcut-pixbuf.xml:76(title)
msgid "gdkcut_pixbuf_save_diff ()"
msgstr ""

#: xml/gdkcut-pixbuf.xml:78(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gdkcut_pixbuf_save_diff (<parameter>const <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link> *pixbuf1</parameter>,\n"
"                         <parameter>const <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link> *pixbuf2</parameter>,\n"
"                         <parameter><link linkend=\"guint\"><type>guint</type></link> threshold</parameter>,\n"
"                         <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *prefix</parameter>,\n"
"                         <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gdkcut-pixbuf-assertions.xml:13(refpurpose)
msgid "Checks that your program works as you expect with gdk-pixbuf support."
msgstr ""
"gdk-pixbufサポート付きであなたのプログラムが期待通りに動作しているかを検証し"
"ます。"

#: xml/gdkcut-pixbuf-assertions.xml:25(link)
#: xml/gdkcut-pixbuf-assertions.xml:41(primary)
#: xml/api-index-full.xml:446(link) xml/api-index-1.0.5.xml:54(link)
msgid "gdkcut_pixbuf_assert_equal"
msgstr ""

#: xml/gdkcut-pixbuf-assertions.xml:40(title)
msgid "gdkcut_pixbuf_assert_equal ()"
msgstr ""

#: xml/gdkcut-pixbuf-assertions.xml:42(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gdkcut_pixbuf_assert_equal (<parameter>const <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link> *expected</parameter>,\n"
"                            <parameter>const <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link> *actual</parameter>,\n"
"                            <parameter><link linkend=\"guint\"><type>guint</type></link> threshold</parameter>,\n"
"                            <parameter>...</parameter>);"
msgstr ""

#: xml/gdkcut-pixbuf-assertions.xml:47(para)
msgid ""
"Passes if <parameter>expected</parameter> == <parameter>actual</parameter> . "
"If difference of each corresponding pixel value is within threshold, "
"<parameter>expected</parameter> and <parameter>actual</parameter> are "
"treated as equal image."
msgstr ""
"<parameter>expected</parameter> == <parameter>actual</parameter>が成り立つと"
"きパスします。もし、対応するピクセル値のそれぞれの違いがしきい値以内の場合は"
"<parameter>expected</parameter>と<parameter>actual</parameter>は同じ画像とし"
"て扱います。"

#: xml/gdkcut-pixbuf-assertions.xml:54(para)
msgid ""
"If threshold is 3, pixel value of <parameter>expected</parameter> at (1, 1) "
"is 127 and pixel value of <parameter>actual</parameter> at (1, 1) is 131, "
"<parameter>actual</parameter> doesn't equals to <parameter>expected</"
"parameter> . If pixel value of <parameter>actual</parameter> at (1, 1) is "
"130, <parameter>actual</parameter> may equal to <parameter>expected</"
"parameter> . (All other corresponding pixel values are needed to fill this "
"condition.)"
msgstr ""
"もし、しきい値が3、<parameter>expected</parameter>の(1, 1)のピクセル値が127、"
"<parameter>actual</parameter>の(1, 1)のピクセル値が131とすると、"
"<parameter>actual</parameter>と<parameter>expected</parameter>は等しくありま"
"せん。もし、<parameter>actual</parameter>の(1, 1)のピクセル値が130なら"
"<parameter>actual</parameter>と<parameter>expected</parameter>は等しいかもし"
"れません。（等しくなるためには、他のすべての対応するピクセル値がこの条件を満"
"たしている必要があります。）"

#: xml/gdkcut-pixbuf-assertions.xml:76(para)
msgid "an expected <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link>."
msgstr "期待する<link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link>。"

#: xml/gdkcut-pixbuf-assertions.xml:78(para) xml/gcut-assertions.xml:124(para)
#: xml/gcut-assertions.xml:155(para) xml/gcut-assertions.xml:184(para)
#: xml/gcut-assertions.xml:215(para) xml/gcut-assertions.xml:248(para)
#: xml/gcut-assertions.xml:292(para) xml/gcut-assertions.xml:323(para)
#: xml/gcut-assertions.xml:352(para) xml/gcut-assertions.xml:381(para)
#: xml/gcut-assertions.xml:412(para) xml/gcut-assertions.xml:442(para)
#: xml/gcut-assertions.xml:474(para) xml/gcut-assertions.xml:511(para)
#: xml/gcut-assertions.xml:545(para) xml/gcut-assertions.xml:578(para)
#: xml/gcut-assertions.xml:630(para) xml/gcut-assertions.xml:709(para)
#: xml/gcut-assertions.xml:788(para) xml/gcut-assertions.xml:829(para)
#: xml/gcut-assertions.xml:875(para) xml/gcut-assertions.xml:914(para)
#: xml/gcut-assertions.xml:963(para) xml/gcut-assertions.xml:995(para)
#: xml/gcut-assertions.xml:1024(para) xml/gcut-assertions.xml:1053(para)
#: xml/gcut-assertions.xml:1082(para) xml/gcut-assertions.xml:1111(para)
#: xml/gcut-assertions.xml:1140(para) xml/gcut-assertions.xml:1169(para)
#: xml/cut-helper.xml:475(para) xml/cut-assertions.xml:300(para)
#: xml/cut-assertions.xml:340(para) xml/cut-assertions.xml:441(para)
#: xml/cut-assertions.xml:470(para) xml/cut-assertions.xml:498(para)
#: xml/cut-assertions.xml:526(para) xml/cut-assertions.xml:554(para)
#: xml/cut-assertions.xml:582(para) xml/cut-assertions.xml:610(para)
#: xml/cut-assertions.xml:638(para) xml/cut-assertions.xml:666(para)
#: xml/cut-assertions.xml:694(para) xml/cut-assertions.xml:722(para)
#: xml/cut-assertions.xml:750(para) xml/cut-assertions.xml:778(para)
#: xml/cut-assertions.xml:806(para) xml/cut-assertions.xml:834(para)
#: xml/cut-assertions.xml:862(para) xml/cut-assertions.xml:890(para)
#: xml/cut-assertions.xml:918(para) xml/cut-assertions.xml:946(para)
#: xml/cut-assertions.xml:974(para) xml/cut-assertions.xml:1002(para)
#: xml/cut-assertions.xml:1030(para) xml/cut-assertions.xml:1059(para)
#: xml/cut-assertions.xml:1088(para) xml/cut-assertions.xml:1116(para)
#: xml/cut-assertions.xml:1144(para) xml/cut-assertions.xml:1172(para)
#: xml/cut-assertions.xml:1200(para) xml/cut-assertions.xml:1228(para)
#: xml/cut-assertions.xml:1256(para) xml/cut-assertions.xml:1284(para)
#: xml/cut-assertions.xml:1312(para) xml/cut-assertions.xml:1340(para)
#: xml/cut-assertions.xml:1368(para) xml/cut-assertions.xml:1396(para)
#: xml/cut-assertions.xml:1424(para) xml/cut-assertions.xml:1452(para)
#: xml/cut-assertions.xml:1480(para) xml/cut-assertions.xml:1508(para)
#: xml/cut-assertions.xml:1536(para) xml/cut-assertions.xml:1564(para)
#: xml/cut-assertions.xml:1592(para) xml/cut-assertions.xml:1620(para)
#: xml/cut-assertions.xml:1648(para) xml/cut-assertions.xml:1677(para)
#: xml/cut-assertions.xml:1706(para) xml/cut-assertions.xml:1742(para)
#: xml/cut-assertions.xml:1779(para) xml/cut-assertions.xml:1811(para)
#: xml/cut-assertions.xml:1843(para) xml/cut-assertions.xml:1884(para)
#: xml/cut-assertions.xml:1925(para) xml/cut-assertions.xml:1958(para)
#: xml/cut-assertions.xml:1986(para) xml/cut-assertions.xml:2032(para)
#: xml/cut-assertions.xml:2079(para) xml/cut-assertions.xml:2121(para)
#: xml/cut-assertions.xml:2164(para) xml/cut-assertions.xml:2198(para)
#: xml/cut-assertions.xml:2229(para) xml/cut-assertions.xml:2441(para)
#: xml/cut-assertions.xml:2657(para) xml/cut-assertions.xml:2687(para)
#: xml/cut-assertions.xml:2716(para) xml/cut-assertions.xml:2772(para)
#: xml/cut-assertions.xml:2798(para) xml/cut-assertions.xml:2824(para)
#: xml/cppcut-assertions.xml:71(para) xml/cppcut-assertions.xml:108(para)
msgid "actual"
msgstr ""

#: xml/gdkcut-pixbuf-assertions.xml:79(para)
msgid "an actual <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link>."
msgstr "実際の<link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link>。"

#: xml/gdkcut-pixbuf-assertions.xml:81(para)
msgid "threshold"
msgstr ""

#: xml/gdkcut-pixbuf-assertions.xml:82(para)
msgid "an threshold used for detecting pixel difference."
msgstr "ピクセルの違いを検出するために使われるしきい値。"

#: xml/gdkcut-pixbuf-assertions.xml:88(para) xml/gcut-value-equal.xml:77(para)
#: xml/gcut-value-equal.xml:115(para) xml/gcut-test-utils.xml:504(para)
#: xml/gcut-test-utils.xml:669(para) xml/gcut-test-utils.xml:701(para)
#: xml/gcut-object.xml:91(para) xml/gcut-object.xml:116(para)
#: xml/gcut-object.xml:151(para) xml/gcut-list.xml:116(para)
#: xml/gcut-list.xml:157(para) xml/gcut-list.xml:459(para)
#: xml/gcut-list.xml:486(para) xml/gcut-list.xml:520(para)
#: xml/gcut-list.xml:547(para) xml/gcut-list.xml:581(para)
#: xml/gcut-list.xml:608(para) xml/gcut-list.xml:635(para)
#: xml/gcut-list.xml:666(para) xml/gcut-list.xml:697(para)
#: xml/gcut-hash-table.xml:99(para) xml/gcut-hash-table.xml:147(para)
#: xml/gcut-hash-table.xml:240(para) xml/gcut-hash-table.xml:267(para)
#: xml/gcut-error.xml:75(para) xml/gcut-error.xml:100(para)
#: xml/gcut-enum.xml:104(para) xml/gcut-enum.xml:174(para)
#: xml/gcut-assertions.xml:449(para) xml/gcut-assertions.xml:484(para)
#: xml/gcut-assertions.xml:518(para) xml/gcut-assertions.xml:552(para)
#: xml/gcut-assertions.xml:716(para) xml/gcut-assertions.xml:836(para)
#: xml/gcut-assertions.xml:882(para) xml/gcut-assertions.xml:921(para)
#: xml/gcut-assertions.xml:973(para) xml/gcut-assertions.xml:1002(para)
#: xml/gcut-assertions.xml:1060(para) xml/cut-test-utils.xml:113(para)
#: xml/cut-test-utils.xml:140(para) xml/cut-test-utils.xml:190(para)
#: xml/cut-test-utils.xml:221(para) xml/cut-test-utils.xml:251(para)
#: xml/cut-multi-process.xml:441(para) xml/cut-multi-process.xml:468(para)
#: xml/cut-helper.xml:150(para) xml/cut-helper.xml:177(para)
#: xml/cut-helper.xml:221(para) xml/cut-helper.xml:325(para)
#: xml/cut-helper.xml:393(para) xml/cut-helper.xml:536(para)
#: xml/cut-helper.xml:573(para) xml/cut-assertions.xml:2341(para)
#: xml/cut-assertions.xml:2376(para) xml/cut-assertions.xml:2411(para)
msgid "Since: <link linkend=\"api-index-1.0.5\">1.0.5</link>"
msgstr ""

#: xml/gdkcut-pixbuf-assertions-helper.xml:7(refentrytitle)
#: xml/gdkcut-pixbuf-assertions-helper.xml:12(refname)
#: xml/api-index-full.xml:447(link)
msgid "gdkcut-pixbuf-assertions-helper"
msgstr ""

#: xml/gdkcut-pixbuf-assertions-helper.xml:24(link)
#: xml/gdkcut-pixbuf-assertions-helper.xml:42(primary)
#: xml/api-index-full.xml:447(link)
msgid "gdkcut_pixbuf_assert_equal_helper"
msgstr ""

#: xml/gdkcut-pixbuf-assertions-helper.xml:41(title)
msgid "gdkcut_pixbuf_assert_equal_helper ()"
msgstr ""

#: xml/gdkcut-pixbuf-assertions-helper.xml:43(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gdkcut_pixbuf_assert_equal_helper (<parameter>const <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link> *expected</parameter>,\n"
"                                   <parameter>const <link linkend=\"GdkPixbuf\"><type>GdkPixbuf</type></link> *actual</parameter>,\n"
"                                   <parameter><link linkend=\"guint\"><type>guint</type></link> threshold</parameter>,\n"
"                                   <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                   <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>,\n"
"                                   <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_threshold</parameter>);"
msgstr ""

#: xml/gcutter.xml:7(refentrytitle) xml/gcutter.xml:12(refname)
#: xml/api-index-full.xml:195(link) xml/api-index-1.0.6.xml:17(link)
msgid "GCutter"
msgstr ""

#: xml/gcutter.xml:13(refpurpose)
msgid "Cutter with GLib support."
msgstr "GLibサポート付きのCutter。"

#: xml/gcutter.xml:23(link) xml/gcutter.xml:68(title)
#: xml/gcutter.xml:69(primary) xml/api-index-full.xml:195(link)
#: xml/api-index-1.0.6.xml:17(link)
msgid "GCUTTER_ENABLED"
msgstr ""

#: xml/gcutter.xml:33(para)
msgid ""
"GCutter adds many useful features based on GLib to Cutter. If you want to "
"write tests with more easily, it's good idea that you consider GCutter to be "
"used too."
msgstr ""
"GCutterはGLibベースのたくさんの便利な機能をCutterに追加します。より簡単にテス"
"トを書きたい場合はGCutterの使用を検討してください。"

#: xml/gcutter.xml:36(para)
msgid ""
"It's easy to use GCutter. You just include &lt;gcutter.h&gt; instead of &lt;"
"cutter.h&gt; and use gcutter.pc instead of cutter.pc:"
msgstr ""
"GCutterを使うことは簡単です。&lt;cutter.h&gt;の代わりに&lt;gcutter.h&gt;を"
"inlcudeして、cutter.pcの代わりにgcutter.pcを使うだけです。"

#: xml/gcutter.xml:70(programlisting)
#, no-wrap
msgid "#define GCUTTER_ENABLED 1\n"
msgstr ""

#: xml/gcutter.xml:72(para)
msgid "Defined when GCutter is enabled."
msgstr "GCutterが有効なとき定義されます。"

#: xml/gcutter.xml:79(link) xml/gcut-assertions.xml:7(refentrytitle)
#: xml/gcut-assertions.xml:12(refname) xml/api-index-full.xml:17(link)
#: xml/api-index-full.xml:18(link) xml/api-index-full.xml:19(link)
#: xml/api-index-full.xml:20(link) xml/api-index-full.xml:57(link)
#: xml/api-index-full.xml:101(link) xml/api-index-full.xml:197(link)
#: xml/api-index-full.xml:199(link) xml/api-index-full.xml:201(link)
#: xml/api-index-full.xml:203(link) xml/api-index-full.xml:205(link)
#: xml/api-index-full.xml:207(link) xml/api-index-full.xml:209(link)
#: xml/api-index-full.xml:210(link) xml/api-index-full.xml:212(link)
#: xml/api-index-full.xml:215(link) xml/api-index-full.xml:217(link)
#: xml/api-index-full.xml:218(link) xml/api-index-full.xml:220(link)
#: xml/api-index-full.xml:222(link) xml/api-index-full.xml:224(link)
#: xml/api-index-full.xml:225(link) xml/api-index-full.xml:227(link)
#: xml/api-index-full.xml:229(link) xml/api-index-full.xml:231(link)
#: xml/api-index-full.xml:233(link) xml/api-index-full.xml:235(link)
#: xml/api-index-full.xml:237(link) xml/api-index-full.xml:239(link)
#: xml/api-index-full.xml:241(link) xml/api-index-full.xml:243(link)
#: xml/api-index-full.xml:245(link) xml/api-index-full.xml:247(link)
#: xml/api-index-deprecated.xml:9(link) xml/api-index-deprecated.xml:10(link)
#: xml/api-index-deprecated.xml:11(link) xml/api-index-deprecated.xml:12(link)
#: xml/api-index-deprecated.xml:15(link) xml/api-index-deprecated.xml:18(link)
#: xml/api-index-1.1.5.xml:19(link) xml/api-index-1.1.4.xml:11(link)
#: xml/api-index-1.1.4.xml:12(link) xml/api-index-1.0.xml:8(link)
#: xml/api-index-1.0.7.xml:22(link) xml/api-index-1.0.6.xml:19(link)
#: xml/api-index-1.0.6.xml:20(link) xml/api-index-1.0.6.xml:21(link)
#: xml/api-index-1.0.5.xml:16(link) xml/api-index-1.0.5.xml:17(link)
#: xml/api-index-1.0.5.xml:18(link) xml/api-index-1.0.5.xml:19(link)
#: xml/api-index-1.0.5.xml:20(link) xml/api-index-1.0.5.xml:21(link)
#: xml/api-index-1.0.5.xml:22(link) xml/api-index-1.0.5.xml:23(link)
#: xml/api-index-1.0.5.xml:24(link) xml/api-index-1.0.5.xml:25(link)
#: xml/api-index-1.0.5.xml:26(link) xml/api-index-1.0.4.xml:7(link)
#: xml/api-index-1.0.4.xml:8(link) xml/api-index-1.0.3.xml:11(link)
#: xml/api-index-1.0.3.xml:12(link) xml/api-index-1.0.3.xml:13(link)
#: xml/api-index-1.0.3.xml:14(link) xml/api-index-1.0.3.xml:15(link)
#: xml/api-index-1.0.3.xml:16(link) xml/api-index-1.0.3.xml:17(link)
#: xml/api-index-1.0.2.xml:10(link) xml/api-index-0.8.xml:7(link)
#: xml/api-index-0.8.xml:8(link)
msgid "Assertions with GLib support"
msgstr "GLibサポート付きの検証"

#: xml/gcut-value-equal.xml:7(refentrytitle)
#: xml/gcut-value-equal.xml:12(refname) xml/api-index-full.xml:441(link)
#: xml/api-index-full.xml:444(link) xml/api-index-1.0.5.xml:52(link)
#: xml/api-index-1.0.5.xml:53(link)
msgid "Assertion Utilities for GValue"
msgstr "GValue用の検証ユーティリティ"

#: xml/gcut-value-equal.xml:14(type)
msgid "GValue"
msgstr ""

#: xml/gcut-value-equal.xml:13(refpurpose)
msgid ""
"Utilities to write assertions related to <link linkend=\"GValue"
"\"><placeholder-1/></link> more easily."
msgstr ""
"<link linkend=\"GValue\"><placeholder-1/></link>に関する検証をもっと簡単に書"
"くためのユーティリティ。"

#: xml/gcut-value-equal.xml:25(link) xml/gcut-value-equal.xml:47(primary)
#: xml/api-index-full.xml:441(link) xml/api-index-1.0.5.xml:52(link)
msgid "gcut_value_equal"
msgstr ""

#: xml/gcut-value-equal.xml:27(link) xml/gcut-value-equal.xml:80(primary)
#: xml/api-index-full.xml:444(link) xml/api-index-1.0.5.xml:53(link)
msgid "gcut_value_register_equal_func"
msgstr ""

#: xml/gcut-value-equal.xml:37(para) xml/gcut-string.xml:37(para)
#: xml/gcut-object.xml:39(para) xml/gcut-list.xml:64(para)
#: xml/gcut-hash-table.xml:45(para) xml/gcut-error.xml:37(para)
#: xml/gcut-enum.xml:59(para)
msgid ""
"To write assertions, you need to check equality and show expected and actual "
"values."
msgstr ""
"検証を書くためには等価性を検証し、期待値と実測値を表示する必要があります。"

#: xml/gcut-value-equal.xml:39(para)
msgid ""
"The utilities help you to write assertions that are related to <link linkend="
"\"GValue\"><type>GValue</type></link>."
msgstr ""
"このユーティリティは<link linkend=\"GValue\"><type>GValue</type></link>に関す"
"る検証を作成を補助します。"

#: xml/gcut-value-equal.xml:46(title)
msgid "gcut_value_equal ()"
msgstr ""

#: xml/gcut-value-equal.xml:48(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_value_equal (<parameter>const <link linkend=\"GValue\"><type>GValue</type></link> *value1</parameter>,\n"
"                  <parameter>const <link linkend=\"GValue\"><type>GValue</type></link> *value2</parameter>);"
msgstr "<parameter>type1</parameter>の<link linkend=\"GValue\"><type>GValue</type></link>と<parameter>type2</parameter>の<link linkend=\"GValue\"><type>GValue</type></link>の等価性を調べる関数を登録します。"

#: xml/gcut-value-equal.xml:51(para)
msgid ""
"Compares two <link linkend=\"GValue\"><type>GValue</type></link>, "
"<parameter>value1</parameter> and <parameter>value2</parameter> by "
"registered equal function. (See <link linkend=\"gcut-value-register-equal-"
"func\"><function>gcut_value_register_equal_func()</function></link> for "
"detail of how to register equal function of <link linkend=\"GValue"
"\"><type>GValue</type></link>)"
msgstr ""
"ふたつの<link linkend=\"GValue\"><type>GValue</type></link>、"
"<parameter>value1</parameter>と<parameter>value2</parameter>を登録された比較"
"関数で比較します。（<link linkend=\"GValue\"><type>GValue</type></link>の比較"
"関数の登録方法については<link linkend=\"gcut-value-register-equal-func"
"\"><function>gcut_value_register_equal_func()</function></link>を見てくださ"
"い。）"

#: xml/gcut-value-equal.xml:64(para)
msgid "value1"
msgstr ""

#: xml/gcut-value-equal.xml:65(para) xml/gcut-value-equal.xml:68(para)
msgid "a <link linkend=\"GValue\"><type>GValue</type></link> to be compared."
msgstr "比較する<link linkend=\"GValue\"><type>GValue</type></link>。"

#: xml/gcut-value-equal.xml:67(para)
msgid "value2"
msgstr ""

#: xml/gcut-value-equal.xml:73(para)
msgid ""
"TRUE if <parameter>value1</parameter> equals to <parameter>value2</"
"parameter> , FALSE otherwise."
msgstr ""
"<parameter>value1</parameter>と<parameter>value2</parameter>が等しいときは"
"TRUE、そうでない場合はFALSE。"

#: xml/gcut-value-equal.xml:79(title)
msgid "gcut_value_register_equal_func ()"
msgstr ""

#: xml/gcut-value-equal.xml:81(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_value_register_equal_func (<parameter><link linkend=\"GType\"><type>GType</type></link> type1</parameter>,\n"
"                                <parameter><link linkend=\"GType\"><type>GType</type></link> type2</parameter>,\n"
"                                <parameter><link linkend=\"GEqualFunc\"><type>GEqualFunc</type></link> equal_func</parameter>);"
msgstr ""

#: xml/gcut-value-equal.xml:85(para) xml/gcut-test-utils.xml:251(para)
#: xml/gcut-test-utils.xml:288(para) xml/gcut-test-utils.xml:324(para)
#: xml/gcut-test-utils.xml:412(para) xml/gcut-test-utils.xml:449(para)
#: xml/gcut-process.xml:156(para) xml/gcut-list.xml:86(para)
#: xml/gcut-list.xml:130(para) xml/gcut-inspect.xml:77(para)
#: xml/gcut-inspect.xml:110(para) xml/gcut-inspect.xml:144(para)
#: xml/gcut-inspect.xml:178(para) xml/gcut-inspect.xml:212(para)
#: xml/gcut-inspect.xml:246(para) xml/gcut-inspect.xml:280(para)
#: xml/gcut-inspect.xml:315(para) xml/gcut-inspect.xml:348(para)
#: xml/gcut-inspect.xml:381(para) xml/gcut-inspect.xml:420(para)
#: xml/gcut-inspect.xml:459(para) xml/gcut-inspect.xml:493(para)
#: xml/gcut-inspect.xml:531(para) xml/gcut-hash-table.xml:68(para)
#: xml/gcut-hash-table.xml:117(para) xml/gcut-hash-table.xml:172(para)
#: xml/gcut-egg.xml:142(para) xml/gcut-data.xml:79(para)
#: xml/gcut-assertions.xml:807(para) xml/gcut-assertions.xml:848(para)
#: xml/gcut-assertions.xml:895(para) xml/gcut-assertions.xml:934(para)
#: xml/cutter.xml:239(para) xml/cutter.xml:341(para) xml/cutter.xml:394(para)
#: xml/cutter.xml:510(para) xml/cutter.xml:545(para)
#: xml/cut-multi-process.xml:908(para) xml/cut-multi-process.xml:924(para)
#: xml/cut-helper.xml:77(para) xml/cut-helper.xml:190(para)
#: xml/cut-helper.xml:270(para) xml/cut-helper.xml:353(para)
#: xml/cut-experimental.xml:46(para) xml/cut-experimental.xml:70(para)
#: xml/cut-experimental.xml:107(para) xml/cut-experimental.xml:145(para)
#: xml/cut-assertions.xml:174(para) xml/cut-assertions.xml:191(para)
#: xml/cut-assertions.xml:282(para) xml/cut-assertions.xml:322(para)
#: xml/cut-assertions.xml:1794(para) xml/cut-assertions.xml:1826(para)
#: xml/cut-assertions.xml:1864(para) xml/cut-assertions.xml:1905(para)
#: xml/cut-assertions.xml:2011(para) xml/cut-assertions.xml:2058(para)
#: xml/cut-assertions.xml:2245(para) xml/cut-assertions.xml:2280(para)
#: xml/cut-assertions.xml:2315(para) xml/cut-assertions.xml:2350(para)
#: xml/cut-assertions.xml:2385(para) xml/cut-assertions.xml:2420(para)
#: xml/cut-assertions.xml:2455(para) xml/cut-assertions.xml:2484(para)
#: xml/cut-assertions.xml:2516(para) xml/cut-assertions.xml:2546(para)
#: xml/cut-assertions.xml:2578(para) xml/cut-assertions.xml:2608(para)
#: xml/cut-assertions.xml:2640(para) xml/cut-assertions.xml:2860(para)
#: xml/cut-assertions.xml:2987(para) xml/cut-assertions.xml:3015(para)
#: xml/cppcutter.xml:112(para) xml/cppcut-assertions.xml:53(para)
#: xml/cppcut-assertions.xml:90(para) xml/cppcut-assertions.xml:125(para)
#: xml/cppcut-assertions.xml:159(para) xml/cppcut-assertions.xml:196(para)
msgid "e.g.:"
msgstr "例:"

#: xml/gcut-value-equal.xml:90(para)
msgid ""
"Registers equality check function between <link linkend=\"GValue"
"\"><type>GValue</type></link> of <parameter>type1</parameter> and <link "
"linkend=\"GValue\"><type>GValue</type></link> of <parameter>type2</"
"parameter> ."
msgstr ""
"<parameter>type1</parameter>の<link linkend=\"GValue\"><type>GValue</type></"
"link>と<parameter>type2</parameter>の<link linkend=\"GValue\"><type>GValue</"
"type></link>の等価性を調べる関数を登録します。"

#: xml/gcut-value-equal.xml:102(para)
msgid "type1"
msgstr ""

#: xml/gcut-value-equal.xml:103(para) xml/gcut-value-equal.xml:106(para)
msgid ""
"a <link linkend=\"GType\"><type>GType</type></link> of compared <link "
"linkend=\"GValue\"><type>GValue</type></link>."
msgstr ""
"比較する<link linkend=\"GValue\"><type>GValue</type></link>の<link linkend="
"\"GType\"><type>GType</type></link>。"

#: xml/gcut-value-equal.xml:105(para)
msgid "type2"
msgstr ""

#: xml/gcut-value-equal.xml:108(para) xml/gcut-object.xml:77(para)
#: xml/gcut-list.xml:105(para) xml/gcut-hash-table.xml:87(para)
msgid "equal_func"
msgstr ""

#: xml/gcut-value-equal.xml:109(para)
msgid ""
"a function that compares <parameter>type1</parameter> 's <link linkend="
"\"GValue\"><type>GValue</type></link> with <parameter>type2</parameter> 's "
"<link linkend=\"GValue\"><type>GValue</type></link>."
msgstr ""
"<parameter>type1</parameter>の<link linkend=\"GValue\"><type>GValue</type></"
"link>と<parameter>type2</parameter>の<link linkend=\"GValue\"><type>GValue</"
"type></link>を比較する関数。"

#: xml/gcut-types.xml:7(refentrytitle) xml/gcut-types.xml:12(refname)
#: xml/api-index-full.xml:188(link) xml/api-index-1.0.6.xml:16(link)
msgid "Types for GLib support"
msgstr "GLibサポート用の型"

#: xml/gcut-types.xml:13(refpurpose)
msgid "Types that is used in test with GLib support."
msgstr "GLibサポート付きテストで使う型です。"

#: xml/gcut-types.xml:24(phrase) xml/cut-types.xml:24(phrase)
#: xml/cut-types.xml:26(phrase)
msgid "("
msgstr ""

#: xml/gcut-types.xml:24(link)
msgid "*GCutInspectFunction"
msgstr ""

#: xml/gcut-types.xml:24(phrase) xml/cut-types.xml:24(phrase)
#: xml/cut-types.xml:26(phrase)
msgid ")"
msgstr ""

#: xml/gcut-types.xml:24(entry) xml/cut-types.xml:24(entry)
#: xml/cut-types.xml:26(entry)
msgid "<placeholder-1/><placeholder-2/><placeholder-3/> <placeholder-4/>"
msgstr ""

#: xml/gcut-types.xml:34(para)
msgid "There are some types to be used in test with GLib support."
msgstr "GLibサポート付きテストで使う型がいくつかあります。"

#: xml/gcut-types.xml:40(title)
msgid "GCutInspectFunction ()"
msgstr ""

#: xml/gcut-types.xml:41(primary) xml/api-index-full.xml:188(link)
#: xml/api-index-1.0.6.xml:16(link)
msgid "GCutInspectFunction"
msgstr ""

#: xml/gcut-types.xml:42(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"<phrase role=\"c_punctuation\">(</phrase>*GCutInspectFunction<phrase role=\"c_punctuation\">)</phrase> (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                        <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                        <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-types.xml:46(para)
msgid ""
"Specifies the type of function which is called when the <parameter>data</"
"parameter> element is inspected. It is passed the pointer to the data "
"element, should inspect <parameter>data</parameter> and append inspected "
"string to <parameter>string</parameter> ."
msgstr ""
"<parameter>data</parameter>要素の詳細を示すときに呼ばれる関数の型です。データ"
"要素のポインタを渡されるので、<parameter>data</parameter>の詳細を"
"<parameter>string</parameter>に追加してください。"

#: xml/gcut-types.xml:61(para) xml/gcut-test-utils.xml:212(para)
#: xml/gcut-test-utils.xml:235(para) xml/gcut-string.xml:92(para)
#: xml/gcut-inspect.xml:90(para) xml/gcut-inspect.xml:124(para)
#: xml/gcut-inspect.xml:158(para) xml/gcut-inspect.xml:192(para)
#: xml/gcut-inspect.xml:226(para) xml/gcut-inspect.xml:260(para)
#: xml/gcut-inspect.xml:295(para) xml/gcut-inspect.xml:328(para)
#: xml/gcut-inspect.xml:361(para) xml/gcut-inspect.xml:400(para)
#: xml/gcut-inspect.xml:439(para) xml/gcut-inspect.xml:473(para)
#: xml/gcut-inspect.xml:511(para) xml/gcut-inspect.xml:545(para)
#: xml/cut-test-utils.xml:158(para) xml/cut-test-utils.xml:183(para)
#: xml/cut-test-utils.xml:211(para) xml/cut-test-utils.xml:385(para)
#: xml/cut-test-utils.xml:416(para) xml/cut-assertions.xml:388(para)
msgid "string"
msgstr "文字列。"

#: xml/gcut-types.xml:62(para)
msgid ""
"the <link linkend=\"GString\"><type>GString</type></link> to be stored "
"inspected result."
msgstr ""
"詳細情報を保存する<link linkend=\"GString\"><type>GString</type></link>。"

#: xml/gcut-types.xml:64(para) xml/gcut-inspect.xml:93(para)
#: xml/gcut-inspect.xml:127(para) xml/gcut-inspect.xml:161(para)
#: xml/gcut-inspect.xml:195(para) xml/gcut-inspect.xml:229(para)
#: xml/gcut-inspect.xml:263(para) xml/gcut-inspect.xml:298(para)
#: xml/gcut-inspect.xml:331(para) xml/gcut-inspect.xml:364(para)
#: xml/gcut-inspect.xml:403(para) xml/gcut-inspect.xml:442(para)
#: xml/gcut-inspect.xml:476(para) xml/gcut-inspect.xml:514(para)
#: xml/gcut-inspect.xml:548(para) xml/gcut-event-loop.xml:204(para)
#: xml/gcut-event-loop.xml:243(para) xml/gcut-event-loop.xml:288(para)
#: xml/gcut-event-loop.xml:329(para) xml/gcut-event-loop.xml:373(para)
#: xml/gcut-event-loop.xml:409(para) xml/gcut-event-loop.xml:448(para)
#: xml/gcut-data.xml:334(para) xml/gcut-data.xml:362(para)
#: xml/gcut-data.xml:390(para) xml/gcut-data.xml:418(para)
#: xml/gcut-data.xml:447(para) xml/gcut-data.xml:474(para)
#: xml/gcut-data.xml:501(para) xml/gcut-data.xml:527(para)
#: xml/gcut-data.xml:556(para) xml/gcut-data.xml:585(para)
#: xml/gcut-data.xml:614(para) xml/gcut-data.xml:643(para)
#: xml/gcut-data.xml:672(para) xml/gcut-data.xml:700(para)
#: xml/gcut-data.xml:729(para) xml/cut-types.xml:73(para)
msgid "data"
msgstr ""

#: xml/gcut-types.xml:65(para)
msgid "the data element to be inspected."
msgstr "詳細化されるデータ。"

#: xml/gcut-types.xml:67(para) xml/gcut-object.xml:143(para)
#: xml/gcut-list.xml:149(para) xml/gcut-inspect.xml:96(para)
#: xml/gcut-inspect.xml:130(para) xml/gcut-inspect.xml:164(para)
#: xml/gcut-inspect.xml:198(para) xml/gcut-inspect.xml:232(para)
#: xml/gcut-inspect.xml:266(para) xml/gcut-inspect.xml:301(para)
#: xml/gcut-inspect.xml:334(para) xml/gcut-inspect.xml:367(para)
#: xml/gcut-inspect.xml:406(para) xml/gcut-inspect.xml:445(para)
#: xml/gcut-inspect.xml:479(para) xml/gcut-inspect.xml:517(para)
#: xml/gcut-inspect.xml:551(para) xml/gcut-hash-table.xml:139(para)
#: xml/gcut-hash-table.xml:197(para)
msgid "user_data"
msgstr ""

#: xml/gcut-types.xml:68(para) xml/gcut-object.xml:144(para)
#: xml/gcut-list.xml:150(para) xml/gcut-hash-table.xml:140(para)
#: xml/gcut-hash-table.xml:198(para)
msgid "user data to pass to the function."
msgstr "関数に渡すユーザ用データ。"

#: xml/gcut-test-utils.xml:7(refentrytitle) xml/gcut-test-utils.xml:12(refname)
#: xml/api-index-full.xml:323(link) xml/api-index-full.xml:331(link)
#: xml/api-index-full.xml:332(link) xml/api-index-full.xml:366(link)
#: xml/api-index-full.xml:367(link) xml/api-index-full.xml:368(link)
#: xml/api-index-full.xml:371(link) xml/api-index-full.xml:373(link)
#: xml/api-index-full.xml:374(link) xml/api-index-full.xml:377(link)
#: xml/api-index-full.xml:426(link) xml/api-index-full.xml:427(link)
#: xml/api-index-full.xml:428(link) xml/api-index-full.xml:429(link)
#: xml/api-index-full.xml:430(link) xml/api-index-full.xml:431(link)
#: xml/api-index-full.xml:432(link) xml/api-index-full.xml:433(link)
#: xml/api-index-full.xml:434(link) xml/api-index-full.xml:435(link)
#: xml/api-index-full.xml:436(link) xml/api-index-full.xml:437(link)
#: xml/api-index-full.xml:438(link) xml/api-index-deprecated.xml:60(link)
#: xml/api-index-1.1.6.xml:21(link) xml/api-index-1.1.6.xml:25(link)
#: xml/api-index-1.1.6.xml:26(link) xml/api-index-1.1.5.xml:21(link)
#: xml/api-index-1.1.5.xml:22(link) xml/api-index-1.1.5.xml:50(link)
#: xml/api-index-1.1.5.xml:51(link) xml/api-index-1.1.1.xml:14(link)
#: xml/api-index-1.1.1.xml:15(link) xml/api-index-1.1.1.xml:16(link)
#: xml/api-index-1.0.6.xml:69(link) xml/api-index-1.0.6.xml:70(link)
#: xml/api-index-1.0.5.xml:35(link) xml/api-index-1.0.5.xml:50(link)
#: xml/api-index-1.0.5.xml:51(link) xml/api-index-1.0.4.xml:9(link)
#: xml/api-index-1.0.4.xml:10(link) xml/api-index-1.0.3.xml:18(link)
#: xml/api-index-1.0.3.xml:19(link) xml/api-index-1.0.3.xml:20(link)
#: xml/api-index-1.0.3.xml:21(link) xml/api-index-1.0.3.xml:22(link)
msgid "Test Utilities with GLib support"
msgstr "GLibサポート付きテストユーティリティ"

#: xml/gcut-test-utils.xml:13(refpurpose)
msgid "Utilities to write tests more easily with GLib support."
msgstr "テストをもっと簡単に書くためのGLibサポート付きユーティリティ。"

#: xml/gcut-test-utils.xml:24(entry) xml/gcut-public.xml:23(entry)
#: xml/gcut-data.xml:46(entry)
msgid "<link linkend=\"GObject\"><placeholder-1/></link> *"
msgstr ""

#: xml/gcut-test-utils.xml:25(link) xml/gcut-test-utils.xml:88(primary)
#: xml/api-index-full.xml:437(link) xml/api-index-1.0.3.xml:22(link)
msgid "gcut_take_object"
msgstr ""

#: xml/gcut-test-utils.xml:26(returnvalue) xml/gcut-public.xml:25(returnvalue)
#: xml/gcut-error.xml:14(type)
msgid "GError"
msgstr ""

#: xml/gcut-test-utils.xml:26(entry)
msgid "<link linkend=\"GError\"><placeholder-1/></link> *"
msgstr ""

#: xml/gcut-test-utils.xml:27(link) xml/gcut-test-utils.xml:113(primary)
#: xml/api-index-full.xml:426(link) xml/api-index-1.0.3.xml:20(link)
msgid "gcut_take_error"
msgstr ""

#: xml/gcut-test-utils.xml:28(returnvalue)
#: xml/gcut-test-utils.xml:36(returnvalue)
#: xml/gcut-test-utils.xml:38(returnvalue)
#: xml/gcut-test-utils.xml:40(returnvalue)
#: xml/gcut-test-utils.xml:42(returnvalue)
#: xml/gcut-test-utils.xml:44(returnvalue)
#: xml/gcut-test-utils.xml:46(returnvalue)
#: xml/gcut-test-utils.xml:48(returnvalue)
#: xml/gcut-test-utils.xml:50(returnvalue)
#: xml/gcut-test-utils.xml:53(returnvalue) xml/gcut-public.xml:27(returnvalue)
#: xml/gcut-list.xml:14(type)
msgid "GList"
msgstr ""

#: xml/gcut-test-utils.xml:28(entry) xml/gcut-test-utils.xml:46(entry)
#: xml/gcut-test-utils.xml:48(entry) xml/gcut-test-utils.xml:50(entry)
#: xml/gcut-test-utils.xml:53(entry) xml/gcut-public.xml:27(entry)
msgid "const <link linkend=\"GList\"><placeholder-1/></link> *"
msgstr ""

#: xml/gcut-test-utils.xml:29(link) xml/gcut-test-utils.xml:139(primary)
#: xml/api-index-full.xml:428(link) xml/api-index-1.0.3.xml:21(link)
msgid "gcut_take_list"
msgstr ""

#: xml/gcut-test-utils.xml:30(returnvalue)
#: xml/gcut-test-utils.xml:60(returnvalue)
#: xml/gcut-test-utils.xml:62(returnvalue)
#: xml/gcut-test-utils.xml:64(returnvalue) xml/gcut-public.xml:29(returnvalue)
#: xml/gcut-hash-table.xml:14(type) xml/gcut-hash-table.xml:34(returnvalue)
msgid "GHashTable"
msgstr ""

#: xml/gcut-test-utils.xml:30(entry) xml/gcut-test-utils.xml:60(entry)
#: xml/gcut-test-utils.xml:62(entry) xml/gcut-test-utils.xml:64(entry)
#: xml/gcut-public.xml:29(entry) xml/gcut-hash-table.xml:34(entry)
msgid "<link linkend=\"GHashTable\"><placeholder-1/></link> *"
msgstr ""

#: xml/gcut-test-utils.xml:31(link) xml/gcut-test-utils.xml:171(primary)
#: xml/api-index-full.xml:427(link) xml/api-index-1.0.4.xml:10(link)
msgid "gcut_take_hash_table"
msgstr ""

#: xml/gcut-test-utils.xml:32(returnvalue)
#: xml/gcut-test-utils.xml:34(returnvalue)
#: xml/gcut-test-utils.xml:66(returnvalue) xml/gcut-string.xml:14(type)
#: xml/gcut-string-io-channel.xml:25(returnvalue)
#: xml/gcut-public.xml:31(returnvalue) xml/gcut-public.xml:33(returnvalue)
#: xml/gcut-public.xml:35(returnvalue) xml/gcut-process.xml:58(returnvalue)
#: xml/gcut-process.xml:60(returnvalue)
msgid "GString"
msgstr ""

#: xml/gcut-test-utils.xml:32(entry) xml/gcut-test-utils.xml:34(entry)
#: xml/gcut-test-utils.xml:66(entry) xml/gcut-string-io-channel.xml:25(entry)
#: xml/gcut-public.xml:31(entry) xml/gcut-public.xml:33(entry)
#: xml/gcut-public.xml:35(entry) xml/gcut-process.xml:58(entry)
#: xml/gcut-process.xml:60(entry)
msgid "<link linkend=\"GString\"><placeholder-1/></link> *"
msgstr ""

#: xml/gcut-test-utils.xml:33(link) xml/gcut-test-utils.xml:197(primary)
#: xml/api-index-full.xml:438(link) xml/api-index-1.1.6.xml:26(link)
msgid "gcut_take_string"
msgstr ""

#: xml/gcut-test-utils.xml:35(link) xml/gcut-test-utils.xml:223(primary)
#: xml/api-index-full.xml:436(link) xml/api-index-1.1.6.xml:25(link)
msgid "gcut_take_new_string"
msgstr ""

#: xml/gcut-test-utils.xml:36(entry) xml/gcut-test-utils.xml:38(entry)
#: xml/gcut-test-utils.xml:40(entry) xml/gcut-test-utils.xml:42(entry)
#: xml/gcut-test-utils.xml:44(entry)
msgid "<link linkend=\"GList\"><placeholder-1/></link> *"
msgstr ""

#: xml/gcut-test-utils.xml:37(link) xml/gcut-test-utils.xml:246(primary)
#: xml/api-index-full.xml:367(link) xml/api-index-1.1.1.xml:14(link)
msgid "gcut_list_new"
msgstr ""

#: xml/gcut-test-utils.xml:39(link) xml/gcut-test-utils.xml:282(primary)
#: xml/api-index-full.xml:366(link) xml/api-index-1.1.5.xml:21(link)
msgid "gcut_list_int_new"
msgstr ""

#: xml/gcut-test-utils.xml:41(link) xml/gcut-test-utils.xml:318(primary)
#: xml/api-index-full.xml:377(link) xml/api-index-1.1.5.xml:22(link)
msgid "gcut_list_uint_new"
msgstr ""

#: xml/gcut-test-utils.xml:43(link) xml/gcut-test-utils.xml:355(primary)
#: xml/api-index-full.xml:373(link) xml/api-index-1.0.3.xml:19(link)
msgid "gcut_list_string_new"
msgstr ""

#: xml/gcut-test-utils.xml:45(link) xml/gcut-test-utils.xml:382(primary)
#: xml/api-index-full.xml:374(link) xml/api-index-1.0.6.xml:69(link)
msgid "gcut_list_string_new_array"
msgstr ""

#: xml/gcut-test-utils.xml:47(link) xml/gcut-test-utils.xml:405(primary)
#: xml/api-index-full.xml:430(link) xml/api-index-1.1.5.xml:50(link)
msgid "gcut_take_new_list_int"
msgstr ""

#: xml/gcut-test-utils.xml:49(link) xml/gcut-test-utils.xml:442(primary)
#: xml/api-index-full.xml:435(link) xml/api-index-1.1.5.xml:51(link)
msgid "gcut_take_new_list_uint"
msgstr ""

#: xml/gcut-test-utils.xml:51(link) xml/gcut-test-utils.xml:479(primary)
#: xml/api-index-full.xml:432(link) xml/api-index-1.0.5.xml:51(link)
msgid "gcut_take_new_list_string"
msgstr ""

#: xml/gcut-test-utils.xml:52(link) xml/gcut-test-utils.xml:507(primary)
#: xml/api-index-full.xml:434(link) xml/api-index-deprecated.xml:60(link)
msgid "gcut_take_new_list_string_backward_compatibility"
msgstr ""

#: xml/gcut-test-utils.xml:54(link) xml/gcut-test-utils.xml:515(primary)
#: xml/api-index-full.xml:433(link) xml/api-index-1.0.6.xml:70(link)
msgid "gcut_take_new_list_string_array"
msgstr ""

#: xml/gcut-test-utils.xml:55(link) xml/gcut-test-utils.xml:539(primary)
#: xml/api-index-full.xml:431(link) xml/api-index-1.1.1.xml:16(link)
msgid "gcut_take_new_list_object"
msgstr ""

#: xml/gcut-test-utils.xml:57(link) xml/gcut-test-utils.xml:565(primary)
#: xml/api-index-full.xml:371(link) xml/api-index-1.0.3.xml:18(link)
msgid "gcut_list_string_free"
msgstr ""

#: xml/gcut-test-utils.xml:59(link) xml/gcut-test-utils.xml:585(primary)
#: xml/api-index-full.xml:368(link) xml/api-index-1.1.1.xml:15(link)
msgid "gcut_list_object_free"
msgstr ""

#: xml/gcut-test-utils.xml:61(link) xml/gcut-test-utils.xml:607(primary)
#: xml/api-index-full.xml:331(link) xml/api-index-1.0.4.xml:9(link)
msgid "gcut_hash_table_string_string_new"
msgstr ""

#: xml/gcut-test-utils.xml:63(link) xml/gcut-test-utils.xml:639(primary)
#: xml/api-index-full.xml:332(link) xml/api-index-1.0.5.xml:35(link)
msgid "gcut_hash_table_string_string_new_va_list"
msgstr ""

#: xml/gcut-test-utils.xml:65(link) xml/gcut-test-utils.xml:672(primary)
#: xml/api-index-full.xml:429(link) xml/api-index-1.0.5.xml:50(link)
msgid "gcut_take_new_hash_table_string_string"
msgstr ""

#: xml/gcut-test-utils.xml:67(link) xml/gcut-test-utils.xml:704(primary)
#: xml/api-index-full.xml:323(link) xml/api-index-1.1.6.xml:21(link)
msgid "gcut_get_fixture_data"
msgstr ""

#: xml/gcut-test-utils.xml:77(para) xml/cut-test-utils.xml:73(para)
msgid ""
"To write tests, you need to write codes that set up/tear down test "
"environment, prepare expected and actual values and so on. Cutter provides "
"test utilities to you write your tests more easily."
msgstr ""
"テストを書くためには、テスト環境を前処理・後処理するコードや、検証する結果を"
"準備するコードなどたくさんのコードを書く必要があります。Cutterはもっと簡単に"
"テストを書くためにユーティリティを提供します。"

#: xml/gcut-test-utils.xml:81(para)
msgid "The utilities work with GLib."
msgstr "このユーティリティはGLibと一緒に使います。"

#: xml/gcut-test-utils.xml:87(title)
msgid "gcut_take_object ()"
msgstr ""

#: xml/gcut-test-utils.xml:89(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GObject\"><returnvalue>GObject</returnvalue></link> *\n"
"gcut_take_object (<parameter><link linkend=\"GObject\"><type>GObject</type></link> *object</parameter>);"
msgstr "詳細を示す<link linkend=\"GObject\"><type>GObject</type></link>の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-test-utils.xml:91(para)
msgid ""
"Passes ownership of <parameter>object</parameter> to Cutter and returns "
"<parameter>object</parameter> ."
msgstr ""
"<parameter>object</parameter>の所有権をCutterに渡し、<parameter>object</"
"parameter>を返します。"

#: xml/gcut-test-utils.xml:102(para) xml/gcut-test-utils.xml:551(para)
#: xml/gcut-object.xml:108(para) xml/gcut-object.xml:136(para)
#: xml/cut-test-utils.xml:102(para) xml/cppcut-assertions.xml:142(para)
#: xml/cppcut-assertions.xml:176(para)
msgid "object"
msgstr ""

#: xml/gcut-test-utils.xml:103(para)
msgid ""
"the <link linkend=\"GObject\"><type>GObject</type></link> to be owned by "
"Cutter."
msgstr ""
"Cutterに所有権を渡す<link linkend=\"GObject\"><type>GObject</type></link>。"

#: xml/gcut-test-utils.xml:108(para)
msgid ""
"<parameter>object</parameter> owned by Cutter. Don't <link linkend=\"g-"
"object-unref\"><function>g_object_unref()</function></link> it."
msgstr ""
"Cutterが所有権をもつ<parameter>object</parameter>。<link linkend=\"g-object-"
"unref\"><function>g_object_unref()</function></link>しないでください。"

#: xml/gcut-test-utils.xml:110(para) xml/gcut-test-utils.xml:136(para)
#: xml/gcut-test-utils.xml:168(para) xml/gcut-test-utils.xml:379(para)
#: xml/gcut-test-utils.xml:582(para) xml/gcut-assertions.xml:131(para)
#: xml/gcut-assertions.xml:191(para) xml/gcut-assertions.xml:299(para)
#: xml/gcut-assertions.xml:359(para) xml/gcut-assertions.xml:388(para)
#: xml/gcut-assertions.xml:661(para) xml/gcut-assertions.xml:740(para)
#: xml/cutter.xml:325(para) xml/cut-helper.xml:435(para)
msgid "Since: <link linkend=\"api-index-1.0.3\">1.0.3</link>"
msgstr ""

#: xml/gcut-test-utils.xml:112(title)
msgid "gcut_take_error ()"
msgstr ""

#: xml/gcut-test-utils.xml:114(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GError\"><returnvalue>GError</returnvalue></link> *\n"
"gcut_take_error (<parameter><link linkend=\"GError\"><type>GError</type></link> *error</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:116(para)
msgid ""
"Passes ownership of <parameter>error</parameter> to Cutter and returns a "
"<parameter>error</parameter> itself."
msgstr ""
"Cutterに<parameter>error</parameter>の所有権を渡し、<parameter>error</"
"parameter>それ自身を返します。"

#: xml/gcut-test-utils.xml:128(para) xml/gcut-process.xml:107(link)
#: xml/gcut-process.xml:489(para) xml/gcut-process.xml:550(para)
#: xml/gcut-process.xml:582(para) xml/gcut-process.xml:618(para)
#: xml/gcut-process.xml:644(para) xml/gcut-error.xml:92(para)
#: xml/gcut-enum.xml:135(para) xml/gcut-enum.xml:206(para)
#: xml/gcut-enum.xml:235(para) xml/gcut-egg.xml:93(link)
#: xml/gcut-egg.xml:473(para) xml/gcut-egg.xml:533(para)
#: xml/gcut-egg.xml:598(para) xml/gcut-assertions.xml:654(para)
#: xml/gcut-assertions.xml:680(para) xml/cut-helper.xml:562(para)
#: xml/cut-assertions.xml:1739(para) xml/cut-assertions.xml:1776(para)
msgid "error"
msgstr ""

#: xml/gcut-test-utils.xml:129(para)
msgid ""
"the <link linkend=\"GError\"><type>GError</type></link> to be owned by "
"Cutter."
msgstr ""
"Cutterに所有権を渡す<link linkend=\"GError\"><type>GError</type></link>。"

#: xml/gcut-test-utils.xml:134(para)
msgid ""
"a <link linkend=\"GError\"><type>GError</type></link> owned by Cutter. Don't "
"<link linkend=\"g-error-free\"><function>g_error_free()</function></link> it."
msgstr ""
"Cutterが所有権をもつ<link linkend=\"GError\"><type>GError</type></link>。"
"<link linkend=\"g-error-free\"><function>g_error_free()</function></link>しな"
"いでください。"

#: xml/gcut-test-utils.xml:138(title)
msgid "gcut_take_list ()"
msgstr ""

#: xml/gcut-test-utils.xml:140(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"GList\"><returnvalue>GList</returnvalue></link> *\n"
"gcut_take_list (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *list</parameter>,\n"
"                <parameter><link linkend=\"CutDestroyFunction\"><type>CutDestroyFunction</type></link> destroy_function</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:143(para)
msgid ""
"Passes ownership of <parameter>list</parameter> to Cutter and returns "
"<parameter>list</parameter> itself."
msgstr ""
"<parameter>list</parameter>の所有権をCutterに渡し、<parameter>list</"
"parameter>それ自身を返します。"

#: xml/gcut-test-utils.xml:155(para) xml/gcut-test-utils.xml:578(para)
#: xml/gcut-test-utils.xml:600(para) xml/gcut-list.xml:143(para)
#: xml/gcut-list.xml:209(para) xml/gcut-list.xml:269(para)
#: xml/gcut-list.xml:329(para) xml/gcut-list.xml:355(para)
#: xml/gcut-list.xml:386(para) xml/gcut-list.xml:417(para)
#: xml/gcut-list.xml:478(para) xml/gcut-list.xml:539(para)
#: xml/gcut-list.xml:600(para) xml/gcut-list.xml:627(para)
#: xml/gcut-list.xml:655(para) xml/gcut-list.xml:686(para)
msgid "list"
msgstr ""

#: xml/gcut-test-utils.xml:156(para)
msgid ""
"the <link linkend=\"GList\"><type>GList</type></link> to be owned by Cutter."
msgstr ""
"Cutterに所有権を渡す<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-test-utils.xml:158(para) xml/cut-test-utils.xml:105(para)
msgid "destroy_function"
msgstr ""

#: xml/gcut-test-utils.xml:159(para)
msgid ""
"the destroy function that destroys the elements of <parameter>list</"
"parameter> , or <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>."
msgstr ""
"<parameter>list</parameter>の各要素を破棄する関数、または<link linkend="
"\"NULL:CAPS\"><literal>NULL</literal></link>。"

#: xml/gcut-test-utils.xml:166(para)
msgid ""
"a <link linkend=\"GList\"><type>GList</type></link> owned by Cutter. Don't "
"<link linkend=\"g-list-free\"><function>g_list_free()</function></link> it."
msgstr ""
"Cutterが所有権を持つ<link linkend=\"GList\"><type>GList</type></link>。<link "
"linkend=\"g-list-free\"><function>g_list_free()</function></link>しないでくだ"
"さい。"

#: xml/gcut-test-utils.xml:170(title)
msgid "gcut_take_hash_table ()"
msgstr ""

#: xml/gcut-test-utils.xml:172(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GHashTable\"><returnvalue>GHashTable</returnvalue></link> *\n"
"gcut_take_hash_table (<parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *hash_table</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:174(para)
msgid ""
"Passes ownership of <parameter>hash_table</parameter> to Cutter and returns "
"<parameter>hash_table</parameter> itself."
msgstr ""
"<parameter>hash_table</parameter>の所有権をCutterに渡し、"
"<parameter>hash_table</parameter>それ自身を返します。"

#: xml/gcut-test-utils.xml:186(para)
msgid "hash_table"
msgstr ""

#: xml/gcut-test-utils.xml:187(para)
msgid ""
"the <link linkend=\"GHashTable\"><type>GHashTable</type></link> to be owned "
"by Cutter."
msgstr ""
"Cutterに所有権を渡す<link linkend=\"GHashTable\"><type>GHashTable</type></"
"link>。"

#: xml/gcut-test-utils.xml:192(para)
msgid ""
"a <link linkend=\"GHashTable\"><type>GHashTable</type></link> owned by "
"Cutter. Don't <link linkend=\"g-hash-table-unref"
"\"><function>g_hash_table_unref()</function></link> it."
msgstr ""
"Cutterが所有権をもつ<link linkend=\"GHashTable\"><type>GHashTable</type></"
"link>。<link linkend=\"g-hash-table-unref\"><function>g_hash_table_unref()</"
"function></link>しないでください。"

#: xml/gcut-test-utils.xml:194(para) xml/gcut-test-utils.xml:636(para)
#: xml/gcut-assertions.xml:637(para) xml/gcut-assertions.xml:795(para)
#: xml/cutter.xml:381(para) xml/cutter.xml:420(para) xml/cutter.xml:442(para)
#: xml/cut-multi-process.xml:148(para) xml/cut-multi-process.xml:172(para)
#: xml/cut-multi-process.xml:193(para) xml/cut-multi-process.xml:218(para)
#: xml/cut-multi-process.xml:244(para) xml/cut-multi-process.xml:269(para)
#: xml/cut-multi-process.xml:291(para) xml/cut-multi-process.xml:317(para)
#: xml/cut-multi-process.xml:339(para) xml/cut-multi-process.xml:365(para)
#: xml/cut-multi-process.xml:390(para) xml/cut-multi-process.xml:415(para)
#: xml/cut-multi-process.xml:491(para) xml/cut-multi-process.xml:516(para)
#: xml/cut-multi-process.xml:541(para) xml/cut-multi-process.xml:568(para)
#: xml/cut-multi-process.xml:591(para) xml/cut-multi-process.xml:616(para)
#: xml/cut-multi-process.xml:638(para) xml/cut-multi-process.xml:662(para)
#: xml/cut-multi-process.xml:686(para) xml/cut-multi-process.xml:708(para)
#: xml/cut-multi-process.xml:733(para) xml/cut-multi-process.xml:760(para)
#: xml/cut-multi-process.xml:788(para) xml/cut-multi-process.xml:799(para)
#: xml/cut-multi-process.xml:824(para) xml/cut-multi-process.xml:849(para)
#: xml/cut-multi-process.xml:871(para) xml/cut-multi-process.xml:896(para)
#: xml/cut-multi-process.xml:917(para) xml/cut-multi-process.xml:940(para)
msgid "Since: <link linkend=\"api-index-1.0.4\">1.0.4</link>"
msgstr ""

#: xml/gcut-test-utils.xml:196(title)
msgid "gcut_take_string ()"
msgstr ""

#: xml/gcut-test-utils.xml:198(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"GString\"><returnvalue>GString</returnvalue></link> *\n"
"gcut_take_string (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>);"
msgstr "ふたつの<link linkend=\"GString\"><type>GString</type></link>、<parameter>string1</parameter>と<parameter>string2</parameter>を比較します。"

#: xml/gcut-test-utils.xml:200(para) xml/cut-test-utils.xml:146(para)
msgid ""
"Passes ownership of <parameter>string</parameter> to Cutter and returns "
"<parameter>string</parameter> itself."
msgstr ""
"<parameter>string</parameter>の所有権をCutterに渡し、<parameter>string</"
"parameter>それ自身を返します。"

#: xml/gcut-test-utils.xml:213(para)
msgid ""
"the <link linkend=\"GString\"><type>GString</type></link> to be owned by "
"Cutter."
msgstr ""
"Cutterに所有権を渡す<link linkend=\"GString\"><type>GString</type></link>。"

#: xml/gcut-test-utils.xml:218(para) xml/gcut-test-utils.xml:241(para)
msgid ""
"a <link linkend=\"GString\"><type>GString</type></link> owned by Cutter. "
"Don't <link linkend=\"g-string-free\"><function>g_string_free()</function></"
"link> it."
msgstr ""
"Cutterが所有権を持つ<link linkend=\"GString\"><type>GString</type></link>。"
"<link linkend=\"g-string-free\"><function>g_string_free()</function></link>し"
"ないでください。"

#: xml/gcut-test-utils.xml:220(para) xml/gcut-test-utils.xml:243(para)
#: xml/gcut-test-utils.xml:733(para) xml/gcut-process.xml:892(para)
#: xml/gcut-process.xml:918(para) xml/gcut-glib-event-loop.xml:65(para)
#: xml/gcut-event-loop.xml:115(para) xml/gcut-event-loop.xml:146(para)
#: xml/gcut-event-loop.xml:166(para) xml/gcut-event-loop.xml:212(para)
#: xml/gcut-event-loop.xml:251(para) xml/gcut-event-loop.xml:299(para)
#: xml/gcut-event-loop.xml:337(para) xml/gcut-event-loop.xml:384(para)
#: xml/gcut-event-loop.xml:417(para) xml/gcut-event-loop.xml:459(para)
#: xml/gcut-event-loop.xml:486(para) xml/cut-test-utils.xml:515(para)
#: xml/cut-test-utils.xml:583(para)
msgid "Since: <link linkend=\"api-index-1.1.6\">1.1.6</link>"
msgstr ""

#: xml/gcut-test-utils.xml:222(title)
msgid "gcut_take_new_string ()"
msgstr ""

#: xml/gcut-test-utils.xml:224(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"GString\"><returnvalue>GString</returnvalue></link> *\n"
"gcut_take_new_string (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *string</parameter>);"
msgstr "ふたつの<link linkend=\"GString\"><type>GString</type></link>、<parameter>string1</parameter>と<parameter>string2</parameter>を比較します。"

#: xml/gcut-test-utils.xml:226(para)
msgid ""
"Creates a <link linkend=\"GString\"><type>GString</type></link> object from "
"passed string."
msgstr ""
"渡された文字列から<link linkend=\"GString\"><type>GString</type></link>を作成"
"します。"

#: xml/gcut-test-utils.xml:236(para)
msgid ""
"the string. It can be <link linkend=\"NULL:CAPS\"><literal>NULL</literal></"
"link>."
msgstr ""
"文字列。<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>も可。"

#: xml/gcut-test-utils.xml:245(title)
msgid "gcut_list_new ()"
msgstr ""

#: xml/gcut-test-utils.xml:247(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"GList\"><returnvalue>GList</returnvalue></link> *\n"
"gcut_list_new (<parameter>const <link linkend=\"gpointer\"><type>gpointer</type></link> element</parameter>,\n"
"               <parameter>...</parameter>);"
msgstr "比較する<link linkend=\"gint\"><type>gint</type></link>の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-test-utils.xml:250(para)
msgid "Creates a list from passed elements."
msgstr "渡された要素を含むリストを作ります。"

#: xml/gcut-test-utils.xml:268(para)
msgid "element"
msgstr ""

#: xml/gcut-test-utils.xml:269(para)
msgid "the first <link linkend=\"gpointer\"><type>gpointer</type></link>."
msgstr "最初の<link linkend=\"gpointer\"><type>gpointer</type></link>。"

#: xml/gcut-test-utils.xml:272(para)
msgid ""
"remaining elements in list. <link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>-terminate."
msgstr ""
"パスの残りの要素。<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>"
"終端。"

#: xml/gcut-test-utils.xml:277(para)
msgid ""
"a newly-allocated <link linkend=\"GList\"><type>GList</type></link> that "
"contains passed elements."
msgstr ""
"新しく割り当てられた<link linkend=\"GList\"><type>GList</type></link>。渡され"
"た要素を持ちます。"

#: xml/gcut-test-utils.xml:279(para) xml/gcut-test-utils.xml:562(para)
#: xml/gcut-test-utils.xml:604(para) xml/gcut-data.xml:683(para)
#: xml/cut-test-utils.xml:684(para) xml/cut-helper.xml:604(para)
#: xml/cut-helper.xml:628(para) xml/cut-assertions.xml:2779(para)
msgid "Since: <link linkend=\"api-index-1.1.1\">1.1.1</link>"
msgstr ""

#: xml/gcut-test-utils.xml:281(title)
msgid "gcut_list_int_new ()"
msgstr ""

#: xml/gcut-test-utils.xml:283(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GList\"><returnvalue>GList</returnvalue></link> *\n"
"gcut_list_int_new (<parameter><link linkend=\"guint\"><type>guint</type></link> n</parameter>,\n"
"                   <parameter><link linkend=\"gint\"><type>gint</type></link> value</parameter>,\n"
"                   <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:287(para)
msgid "Creates a list from passed integer values."
msgstr "渡された整数からリストを作ります。"

#: xml/gcut-test-utils.xml:301(para) xml/gcut-test-utils.xml:337(para)
#: xml/gcut-test-utils.xml:425(para) xml/gcut-test-utils.xml:462(para)
msgid "n"
msgstr ""

#: xml/gcut-test-utils.xml:302(para) xml/gcut-test-utils.xml:426(para)
msgid "the number of integer values."
msgstr "整数の数。"

#: xml/gcut-test-utils.xml:304(para) xml/gcut-test-utils.xml:340(para)
#: xml/gcut-test-utils.xml:368(para) xml/gcut-test-utils.xml:428(para)
#: xml/gcut-test-utils.xml:465(para) xml/gcut-test-utils.xml:493(para)
msgid "value"
msgstr ""

#: xml/gcut-test-utils.xml:305(para) xml/gcut-test-utils.xml:429(para)
msgid "the first integer value."
msgstr "最初の整数値。"

#: xml/gcut-test-utils.xml:308(para)
msgid "remaining integer values in list."
msgstr "リストの残りの整数値。"

#: xml/gcut-test-utils.xml:313(para)
msgid ""
"a newly-allocated <link linkend=\"GList\"><type>GList</type></link> that "
"contains passed integer values and must be freed with <link linkend=\"g-list-"
"free\"><function>g_list_free()</function></link>."
msgstr ""
"渡された整数を含む<link linkend=\"GList\"><type>GList</type></link>。<link "
"linkend=\"g-list-free\"><function>g_list_free()</function></link>で開放するこ"
"と。"

#: xml/gcut-test-utils.xml:315(para) xml/gcut-test-utils.xml:352(para)
#: xml/gcut-test-utils.xml:439(para) xml/gcut-test-utils.xml:476(para)
#: xml/gcut-string.xml:75(para) xml/gcut-string.xml:100(para)
#: xml/gcut-process.xml:241(para) xml/gcut-process.xml:264(para)
#: xml/gcut-process.xml:292(para) xml/gcut-process.xml:321(para)
#: xml/gcut-process.xml:345(para) xml/gcut-process.xml:369(para)
#: xml/gcut-process.xml:393(para) xml/gcut-process.xml:416(para)
#: xml/gcut-process.xml:445(para) xml/gcut-process.xml:470(para)
#: xml/gcut-process.xml:496(para) xml/gcut-process.xml:520(para)
#: xml/gcut-process.xml:558(para) xml/gcut-process.xml:589(para)
#: xml/gcut-process.xml:625(para) xml/gcut-process.xml:653(para)
#: xml/gcut-process.xml:675(para) xml/gcut-process.xml:697(para)
#: xml/gcut-process.xml:721(para) xml/gcut-process.xml:745(para)
#: xml/gcut-process.xml:769(para) xml/gcut-process.xml:793(para)
#: xml/gcut-process.xml:817(para) xml/gcut-process.xml:842(para)
#: xml/gcut-process.xml:869(para) xml/gcut-process.xml:984(para)
#: xml/gcut-process.xml:1005(para) xml/gcut-process.xml:1013(para)
#: xml/gcut-process.xml:1021(para) xml/gcut-process.xml:1028(para)
#: xml/gcut-data.xml:347(para) xml/gcut-assertions.xml:1176(para)
#: xml/cut-test-utils.xml:659(para) xml/cut-helper.xml:648(para)
#: xml/cut-assertions.xml:2567(para) xml/cut-assertions.xml:2629(para)
msgid "Since: <link linkend=\"api-index-1.1.5\">1.1.5</link>"
msgstr ""

#: xml/gcut-test-utils.xml:317(title)
msgid "gcut_list_uint_new ()"
msgstr ""

#: xml/gcut-test-utils.xml:319(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GList\"><returnvalue>GList</returnvalue></link> *\n"
"gcut_list_uint_new (<parameter><link linkend=\"guint\"><type>guint</type></link> n</parameter>,\n"
"                    <parameter><link linkend=\"guint\"><type>guint</type></link> value</parameter>,\n"
"                    <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:323(para)
msgid "Creates a list from passed unsigned integer values."
msgstr "渡された符号無し整数からリストを作ります。"

#: xml/gcut-test-utils.xml:338(para) xml/gcut-test-utils.xml:463(para)
msgid "the number of unsigned integer values."
msgstr "符号無し符号整数の数。"

#: xml/gcut-test-utils.xml:341(para) xml/gcut-test-utils.xml:466(para)
msgid "the first unsigned integer value."
msgstr "最初の符号無し符号整数値。"

#: xml/gcut-test-utils.xml:344(para)
msgid "remaining unsigned integer values in list."
msgstr "リストの残りの符号無し符号整数値。"

#: xml/gcut-test-utils.xml:349(para)
msgid ""
"a newly-allocated <link linkend=\"GList\"><type>GList</type></link> that "
"contains passed unsigned integer values and must be freed with <link linkend="
"\"g-list-free\"><function>g_list_free()</function></link>."
msgstr ""
"渡された符号無し整数を含む<link linkend=\"GList\"><type>GList</type></link>。"
"<link linkend=\"g-list-free\"><function>g_list_free()</function></link>で開放"
"すること。"

#: xml/gcut-test-utils.xml:354(title)
msgid "gcut_list_string_new ()"
msgstr ""

#: xml/gcut-test-utils.xml:356(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GList\"><returnvalue>GList</returnvalue></link> *\n"
"gcut_list_string_new (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *value</parameter>,\n"
"                      <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:359(para)
msgid "Creates a list from passed strings."
msgstr "渡された文字列からリストを作ります。"

#: xml/gcut-test-utils.xml:369(para) xml/gcut-test-utils.xml:494(para)
msgid "the first string."
msgstr "最初の文字列。"

#: xml/gcut-test-utils.xml:372(para) xml/gcut-test-utils.xml:497(para)
msgid ""
"remaining strings in list. <link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>-terminate."
msgstr ""
"リストの残りの文字列。<link linkend=\"NULL:CAPS\"><literal>NULL</literal></"
"link>終端。"

#: xml/gcut-test-utils.xml:377(para)
msgid ""
"a newly-allocated <link linkend=\"GList\"><type>GList</type></link> that "
"contains passed strings and must be freed with <link linkend=\"gcut-list-"
"string-free\"><function>gcut_list_string_free()</function></link>."
msgstr ""
"渡された文字列を含む<link linkend=\"GList\"><type>GList</type></link>。<link "
"linkend=\"gcut-list-string-free\"><function>gcut_list_string_free()</"
"function></link>で開放すること。"

#: xml/gcut-test-utils.xml:381(title)
msgid "gcut_list_string_new_array ()"
msgstr ""

#: xml/gcut-test-utils.xml:383(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"GList\"><returnvalue>GList</returnvalue></link> *\n"
"gcut_list_string_new_array (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> **strings</parameter>);"
msgstr "詳細を示す<link linkend=\"gint\"><type>gint</type></link>の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-test-utils.xml:385(para)
msgid "Creates a list from passed string array."
msgstr "渡された文字列配列からリストを作ります。"

#: xml/gcut-test-utils.xml:394(para) xml/gcut-test-utils.xml:528(para)
#: xml/cut-test-utils.xml:295(para) xml/cut-helper.xml:495(para)
#, fuzzy
msgid "strings"
msgstr "文字列。"

#: xml/gcut-test-utils.xml:395(para) xml/gcut-test-utils.xml:529(para)
msgid ""
"the string array. <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>-"
"terminate."
msgstr ""
"文字列の配列。<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>終"
"端。"

#: xml/gcut-test-utils.xml:400(para)
msgid ""
"a newly-allocated <link linkend=\"GList\"><type>GList</type></link> that "
"contains passed string array and must be freed with <link linkend=\"gcut-"
"list-string-free\"><function>gcut_list_string_free()</function></link>."
msgstr ""
"渡された文字列配列と同じ内容の<link linkend=\"GList\"><type>GList</type></"
"link>。<link linkend=\"gcut-list-string-free"
"\"><function>gcut_list_string_free()</function></link>で開放すること。"

#: xml/gcut-test-utils.xml:404(title)
msgid "gcut_take_new_list_int ()"
msgstr ""

#: xml/gcut-test-utils.xml:406(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"GList\"><returnvalue>GList</returnvalue></link> *\n"
"gcut_take_new_list_int (<parameter><link linkend=\"guint\"><type>guint</type></link> n</parameter>,\n"
"                        <parameter><link linkend=\"gint\"><type>gint</type></link> value</parameter>,\n"
"                        <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:410(para)
msgid "Creates a list from passed integer values that is owned by Cutter."
msgstr ""
"渡された整数からリストを作ります。作られたリストはCutterが所有権を持ちます。"

#: xml/gcut-test-utils.xml:432(para) xml/gcut-test-utils.xml:469(para)
msgid "remaining strings in list."
msgstr "リストの残りの文字列。"

#: xml/gcut-test-utils.xml:437(para)
msgid ""
"a newly-allocated <link linkend=\"GList\"><type>GList</type></link> that "
"contains passed integer values and is owned by Cutter."
msgstr ""
"渡された整数と同じ内容の<link linkend=\"GList\"><type>GList</type></link>。"
"Cutterが所有権を持ちます。"

#: xml/gcut-test-utils.xml:441(title)
msgid "gcut_take_new_list_uint ()"
msgstr ""

#: xml/gcut-test-utils.xml:443(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"GList\"><returnvalue>GList</returnvalue></link> *\n"
"gcut_take_new_list_uint (<parameter><link linkend=\"guint\"><type>guint</type></link> n</parameter>,\n"
"                         <parameter><link linkend=\"guint\"><type>guint</type></link> value</parameter>,\n"
"                         <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:447(para)
msgid ""
"Creates a list from passed unsigned integer values that is owned by Cutter."
msgstr ""
"渡された符号無し整数からリストを作ります。作られたリストはCutterが所有権を持"
"ちます。"

#: xml/gcut-test-utils.xml:474(para)
msgid ""
"a newly-allocated <link linkend=\"GList\"><type>GList</type></link> that "
"contains passed unsigned integer values and is owned by Cutter."
msgstr ""
"渡された符号無し整数と同じ内容の<link linkend=\"GList\"><type>GList</type></"
"link>。Cutterが所有権を持ちます。"

#: xml/gcut-test-utils.xml:478(title)
msgid "gcut_take_new_list_string ()"
msgstr ""

#: xml/gcut-test-utils.xml:480(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"GList\"><returnvalue>GList</returnvalue></link> *\n"
"gcut_take_new_list_string (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *value</parameter>,\n"
"                           <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:483(para)
msgid "Creates a list from passed strings that is owned by Cutter."
msgstr ""
"渡された文字列からリストを作ります。作られたリストはCutterが所有権を持ちま"
"す。"

#: xml/gcut-test-utils.xml:502(para)
msgid ""
"a newly-allocated <link linkend=\"GList\"><type>GList</type></link> that "
"contains passed strings and is owned by Cutter."
msgstr ""
"渡された文字列と同じ内容の<link linkend=\"GList\"><type>GList</type></link>。"
"Cutterが所有権を持ちます。"

#: xml/gcut-test-utils.xml:506(title)
msgid "gcut_take_new_list_string_backward_compatibility()"
msgstr ""

#: xml/gcut-test-utils.xml:508(programlisting)
#, no-wrap
msgid "#define             gcut_take_new_list_string_backward_compatibility(value, ...)"
msgstr ""

#: xml/gcut-test-utils.xml:509(para)
msgid ""
"<literal>gcut_take_new_list_string_backward_compatibility</literal> is "
"deprecated and should not be used in newly-written code."
msgstr ""
"<literal>gcut_take_new_list_string_backward_compatibility</literal>は非推奨で"
"す。新しいコードでは使わないでください。"

#: xml/gcut-test-utils.xml:514(title)
msgid "gcut_take_new_list_string_array ()"
msgstr ""

#: xml/gcut-test-utils.xml:516(programlisting)
#, fuzzy, no-wrap
msgid ""
"const <link linkend=\"GList\"><returnvalue>GList</returnvalue></link> *\n"
"gcut_take_new_list_string_array (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> **strings</parameter>);"
msgstr "詳細を示す<link linkend=\"gint\"><type>gint</type></link>の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-test-utils.xml:518(para)
msgid "Creates a list from passed string array that is owned by Cutter."
msgstr "渡された文字列の配列からリストを作ります。Cutterが所有権を持ちます。"

#: xml/gcut-test-utils.xml:534(para)
msgid ""
"a newly-allocated <link linkend=\"GList\"><type>GList</type></link> that "
"contains passed string array and is owned by Cutter."
msgstr ""
"渡された文字列の配列と同じ内容の<link linkend=\"GList\"><type>GList</type></"
"link>。Cutterが所有。"

#: xml/gcut-test-utils.xml:538(title)
msgid "gcut_take_new_list_object()"
msgstr ""

#: xml/gcut-test-utils.xml:540(programlisting)
#, no-wrap
msgid "#define             gcut_take_new_list_object(object, ...)"
msgstr ""

#: xml/gcut-test-utils.xml:541(para)
msgid "Creates a list from passed objects that is owned by Cutter."
msgstr ""
"渡されたオブジェクトからリストを作ります。作られたリストはCutterが所有権を持"
"ちます。"

#: xml/gcut-test-utils.xml:552(para)
msgid "the first <link linkend=\"GObject\"><type>GObject</type></link>."
msgstr "最初の<link linkend=\"GObject\"><type>GObject</type></link>。"

#: xml/gcut-test-utils.xml:555(para)
msgid ""
"remaining objects in list. <link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>-terminate."
msgstr ""
"リストの残りのオブジェクト。<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>終端。"

#: xml/gcut-test-utils.xml:560(para)
msgid ""
"a newly-allocated <link linkend=\"GList\"><type>GList</type></link> that "
"contains passed objects and is owned by Cutter."
msgstr ""
"新しく割り当てられた<link linkend=\"GList\"><type>GList</type></link>。リスト"
"には渡されたオブジェクトが含まれます。Cutterが所有権を持ちます。"

#: xml/gcut-test-utils.xml:564(title)
msgid "gcut_list_string_free ()"
msgstr ""

#: xml/gcut-test-utils.xml:566(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_list_string_free (<parameter><link linkend=\"GList\"><type>GList</type></link> *list</parameter>);"
msgstr "詳細を示す<link linkend=\"gint\"><type>gint</type></link>の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-test-utils.xml:568(para)
msgid "Frees <parameter>list</parameter> and contained strings."
msgstr ""
"<parameter>list</parameter>と<parameter>list</parameter>内にある文字列を開放"
"します。"

#: xml/gcut-test-utils.xml:579(para)
msgid "the list that contains strings to be freed."
msgstr "開放する文字列のリスト。"

#: xml/gcut-test-utils.xml:584(title)
msgid "gcut_list_object_free ()"
msgstr ""

#: xml/gcut-test-utils.xml:586(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_list_object_free (<parameter><link linkend=\"GList\"><type>GList</type></link> *list</parameter>);"
msgstr "詳細を示す<link linkend=\"gint\"><type>gint</type></link>の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-test-utils.xml:588(para)
msgid ""
"Frees <parameter>list</parameter> and contained objects. It's safe that "
"<parameter>list</parameter> contains <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>."
msgstr ""
"<parameter>list</parameter>と中のオブジェクトを破棄します。<parameter>list</"
"parameter>に<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>が含ま"
"れていても大丈夫です。"

#: xml/gcut-test-utils.xml:601(para)
msgid ""
"the list that contains <link linkend=\"GObject\"><type>GObject</type></"
"link>'s to be unrefed."
msgstr ""
"リファレンスを減らしたい<link linkend=\"GObject\"><type>GObject</type></link>"
"を含んだリスト。"

#: xml/gcut-test-utils.xml:606(title)
msgid "gcut_hash_table_string_string_new ()"
msgstr ""

#: xml/gcut-test-utils.xml:608(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GHashTable\"><returnvalue>GHashTable</returnvalue></link> *\n"
"gcut_hash_table_string_string_new (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *key</parameter>,\n"
"                                   <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:611(para) xml/gcut-test-utils.xml:644(para)
msgid ""
"Creates a hash table that has string key and string value from passed key/"
"value pairs."
msgstr ""
"引数で指定されたキーと値のペアから、文字列のキーと値を持つハッシュテーブルを"
"作成します。"

#: xml/gcut-test-utils.xml:621(para) xml/gcut-test-utils.xml:654(para)
#: xml/gcut-test-utils.xml:688(para)
msgid "key"
msgstr ""

#: xml/gcut-test-utils.xml:622(para) xml/gcut-test-utils.xml:655(para)
#: xml/gcut-test-utils.xml:689(para)
msgid "The first key string."
msgstr "最初のキー文字列。"

#: xml/gcut-test-utils.xml:625(para) xml/gcut-test-utils.xml:658(para)
msgid ""
"A <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>-terminated list "
"of rest arguments. The first item is the string value of the first key, "
"followed optionally by more key/value pairs. It must end with <link linkend="
"\"NULL:CAPS\"><literal>NULL</literal></link>."
msgstr ""
"残りの引数の<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>終端の"
"リスト。まず、最初のキーの文字列値を指定します。続いて、任意の数だけキー・値"
"のペアを指定します。最後に<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>を指定しなければいけません。"

#: xml/gcut-test-utils.xml:633(para) xml/gcut-test-utils.xml:666(para)
msgid ""
"a newly-allocated <link linkend=\"GHashTable\"><type>GHashTable</type></"
"link> that contains passed key/value pairs and must be freed with <link "
"linkend=\"g-hash-table-unref\"><function>g_hash_table_unref()</function></"
"link>."
msgstr ""
"渡されたキー・値を持つ<link linkend=\"GHashTable\"><type>GHashTable</type></"
"link>。<link linkend=\"g-hash-table-unref\"><function>g_hash_table_unref()</"
"function></link>で開放してください。"

#: xml/gcut-test-utils.xml:638(title)
msgid "gcut_hash_table_string_string_new_va_list ()"
msgstr ""

#: xml/gcut-test-utils.xml:640(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GHashTable\"><returnvalue>GHashTable</returnvalue></link> *\n"
"gcut_hash_table_string_string_new_va_list\n"
"                               (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *key</parameter>,\n"
"                                <parameter><link linkend=\"va-list\"><type>va_list</type></link> args</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:657(para) xml/gcut-process.xml:284(para)
#: xml/gcut-egg.xml:252(para) xml/cutter.xml:488(para)
msgid "args"
msgstr ""

#: xml/gcut-test-utils.xml:671(title)
msgid "gcut_take_new_hash_table_string_string ()"
msgstr ""

#: xml/gcut-test-utils.xml:673(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GHashTable\"><returnvalue>GHashTable</returnvalue></link> *\n"
"gcut_take_new_hash_table_string_string\n"
"                               (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *key</parameter>,\n"
"                                <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:677(para)
msgid ""
"Creates a hash table that has string key and string value from passed key/"
"value pairs. The created hash table is owned by Cutter. So don't <link "
"linkend=\"g-hash-table-unref\"><function>g_hash_table_unref()</function></"
"link> it."
msgstr ""
"渡されたキー・値のペアから文字列のキー・値を持つハッシュテーブルを作成しま"
"す。作成されたハッシュテーブルはCutterが所有権を持つので、<link linkend=\"g-"
"hash-table-unref\"><function>g_hash_table_unref()</function></link>を呼ばない"
"でください。"

#: xml/gcut-test-utils.xml:692(para)
msgid ""
"A <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>-terminated list "
"of rest arguments. The string value of the first key, followed optionally by "
"more key/value pairs. It must end with <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>."
msgstr ""
"残りの引数の<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>終端の"
"リスト。まず、最初のキーの文字列値を指定します。続いて、任意の数だけキー・値"
"のペアを指定します。最後に<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>を指定しなければいけません。"

#: xml/gcut-test-utils.xml:699(para)
msgid ""
"a newly-allocated <link linkend=\"GHashTable\"><type>GHashTable</type></"
"link> that contains passed key/value pairs."
msgstr ""
"渡されたキー・値を持つ<link linkend=\"GHashTable\"><type>GHashTable</type></"
"link>。"

#: xml/gcut-test-utils.xml:703(title)
msgid "gcut_get_fixture_data ()"
msgstr ""

#: xml/gcut-test-utils.xml:705(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GString\"><returnvalue>GString</returnvalue></link> *\n"
"gcut_get_fixture_data (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *path</parameter>,\n"
"                       <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-test-utils.xml:708(para)
#, fuzzy
msgid ""
"Reads the fixture data at \"<parameter>path</parameter> /...\" and returns "
"it as a <link linkend=\"GString\"><type>GString</type></link> that is owned "
"by Cutter. The description of <link linkend=\"cut-build-fixture-path"
"\"><function>cut_build_fixture_path()</function></link> shows how the "
"fixture data path is determined."
msgstr ""
"<parameter>path</parameter>/...\"にあるフィクスチャデータを読み込み、<link "
"linkend=\"GString\"><type>GString</type></link>として返します。GStringは"
"Cutterが所持します。<link linkend=\"cut-build-fixture-data-path"
"\"><function>cut_build_fixture_data_path()</function></link>の説明にはフィク"
"スチャデータのパスがどのように決定されるかが書かれています。"

#: xml/gcut-test-utils.xml:722(para) xml/cut-test-utils.xml:472(para)
#: xml/cut-test-utils.xml:504(para) xml/cut-test-utils.xml:536(para)
#: xml/cut-test-utils.xml:572(para) xml/cut-assertions.xml:2746(para)
msgid "a first element of the path to the fixture data."
msgstr "フィクスチャデータのパスの最初の要素。"

#: xml/gcut-test-utils.xml:725(para) xml/cut-test-utils.xml:507(para)
#: xml/cut-test-utils.xml:575(para)
msgid ""
"remaining elements in path. <link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>-terminate is required."
msgstr ""
"パスの残りの要素。<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>"
"終端が必須です。"

#: xml/gcut-test-utils.xml:731(para)
msgid ""
"a content of the fixture data as <link linkend=\"GString\"><type>GString</"
"type></link> owend by Cutter. Don't free it."
msgstr ""
"フィクスチャデータの内容が入った<link linkend=\"GString\"><type>GString</"
"type></link>。GStringはCutterが所持します。開放しないでください。"

#: xml/gcut-string.xml:7(refentrytitle) xml/gcut-string.xml:12(refname)
#: xml/api-index-full.xml:411(link) xml/api-index-full.xml:412(link)
#: xml/api-index-1.1.5.xml:48(link) xml/api-index-1.1.5.xml:49(link)
msgid "Assertion Utilities for GString"
msgstr "GString用の検証ユーティリティ"

#: xml/gcut-string.xml:13(refpurpose)
msgid ""
"Utilities to write assertions related to <link linkend=\"GString"
"\"><placeholder-1/></link> more easily."
msgstr ""
"<link linkend=\"GString\"><placeholder-1/></link>に関する検証をもっと簡単に書"
"くためのユーティリティ。"

#: xml/gcut-string.xml:25(link) xml/gcut-string.xml:47(primary)
#: xml/api-index-full.xml:411(link) xml/api-index-1.1.5.xml:48(link)
msgid "gcut_string_equal"
msgstr ""

#: xml/gcut-string.xml:27(link) xml/gcut-string.xml:78(primary)
#: xml/api-index-full.xml:412(link) xml/api-index-1.1.5.xml:49(link)
msgid "gcut_string_inspect"
msgstr ""

#: xml/gcut-string.xml:39(para)
msgid ""
"The utilities help you to write assertions that are related to <link linkend="
"\"GString\"><type>GString</type></link>."
msgstr ""
"このユーティリティは<link linkend=\"GString\"><type>GString</type></link>に関"
"する検証の作成を補助します。"

#: xml/gcut-string.xml:46(title)
msgid "gcut_string_equal ()"
msgstr ""

#: xml/gcut-string.xml:48(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_string_equal (<parameter>const <link linkend=\"GString\"><type>GString</type></link> *string1</parameter>,\n"
"                   <parameter>const <link linkend=\"GString\"><type>GString</type></link> *string2</parameter>);"
msgstr ""

#: xml/gcut-string.xml:51(para)
#, fuzzy
msgid ""
"Compares two <link linkend=\"GString\"><type>GString</type></link>, "
"<parameter>string1</parameter> and <parameter>string2</parameter> ."
msgstr ""
"ふたつの<link linkend=\"GString\"><type>GString</type></link>、"
"<parameter>string1</parameter>と<parameter>string2</parameter>を比較します。"

#: xml/gcut-string.xml:62(para) xml/cut-helper.xml:523(para)
#, fuzzy
msgid "string1"
msgstr "文字列。"

#: xml/gcut-string.xml:63(para) xml/gcut-string.xml:66(para)
msgid "a <link linkend=\"GString\"><type>GString</type></link> to be compared."
msgstr "比較する<link linkend=\"GString\"><type>GString</type></link>。"

#: xml/gcut-string.xml:65(para) xml/cut-helper.xml:526(para)
#, fuzzy
msgid "string2"
msgstr "文字列。"

#: xml/gcut-string.xml:71(para)
msgid ""
"<link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></link> if both of "
"<parameter>string1</parameter> and <parameter>string2</parameter> have the "
"same content, <link linkend=\"FALSE:CAPS\"><literal>FALSE</literal></link> "
"otherwise."
msgstr ""
"<parameter>string1</parameter>と<parameter>string2</parameter>が同じ内容なら"
"<link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></link>、そうでなれば"
"<link linkend=\"FALSE:CAPS\"><literal>FALSE</literal></link>。"

#: xml/gcut-string.xml:77(title)
msgid "gcut_string_inspect ()"
msgstr ""

#: xml/gcut-string.xml:79(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_string_inspect (<parameter>const <link linkend=\"GString\"><type>GString</type></link> *string</parameter>);"
msgstr ""

#: xml/gcut-string.xml:81(para)
#, fuzzy
msgid ""
"Inspects <parameter>string</parameter> . The returned string should be freed "
"when no longer needed."
msgstr ""
"<parameter>string</parameter>の詳細を返します。返された文字列が必要なくなった"
"ときは開放してください。"

#: xml/gcut-string.xml:93(para)
msgid "a <link linkend=\"GString\"><type>GString</type></link> value."
msgstr "<link linkend=\"GString\"><type>GString</type></link>の値。"

#: xml/gcut-string.xml:98(para)
msgid "inspected <parameter>string</parameter> as a string."
msgstr "<parameter>string</parameter>の詳細を示した文字列。"

#: xml/gcut-string-io-channel.xml:7(refentrytitle)
#: xml/gcut-string-io-channel.xml:12(refname) xml/api-index-full.xml:413(link)
#: xml/api-index-full.xml:414(link) xml/api-index-full.xml:415(link)
#: xml/api-index-full.xml:416(link) xml/api-index-full.xml:417(link)
#: xml/api-index-full.xml:418(link) xml/api-index-full.xml:419(link)
#: xml/api-index-full.xml:420(link) xml/api-index-full.xml:421(link)
#: xml/api-index-full.xml:422(link) xml/api-index-full.xml:423(link)
#: xml/api-index-full.xml:424(link) xml/api-index-full.xml:425(link)
msgid "gcut-string-io-channel"
msgstr ""

#: xml/gcut-string-io-channel.xml:23(returnvalue)
#: xml/gcut-process.xml:62(returnvalue) xml/gcut-process.xml:64(returnvalue)
#: xml/gcut-process.xml:66(returnvalue) xml/gcut-egg.xml:56(returnvalue)
#: xml/gcut-egg.xml:58(returnvalue) xml/gcut-egg.xml:60(returnvalue)
msgid "GIOChannel"
msgstr ""

#: xml/gcut-string-io-channel.xml:23(entry) xml/gcut-process.xml:62(entry)
#: xml/gcut-process.xml:64(entry) xml/gcut-process.xml:66(entry)
#: xml/gcut-egg.xml:56(entry) xml/gcut-egg.xml:58(entry)
#: xml/gcut-egg.xml:60(entry)
#, fuzzy
msgid "<link linkend=\"GIOChannel\"><placeholder-1/></link> *"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/gcut-string-io-channel.xml:24(link)
#: xml/gcut-string-io-channel.xml:66(primary) xml/api-index-full.xml:420(link)
msgid "gcut_string_io_channel_new"
msgstr ""

#: xml/gcut-string-io-channel.xml:26(link)
#: xml/gcut-string-io-channel.xml:74(primary) xml/api-index-full.xml:419(link)
msgid "gcut_string_io_channel_get_string"
msgstr ""

#: xml/gcut-string-io-channel.xml:28(link)
#: xml/gcut-string-io-channel.xml:82(primary) xml/api-index-full.xml:413(link)
msgid "gcut_string_io_channel_clear"
msgstr ""

#: xml/gcut-string-io-channel.xml:29(returnvalue)
#: xml/gcut-string-io-channel.xml:33(returnvalue)
#: xml/gcut-data-helper.xml:35(returnvalue)
msgid "gsize"
msgstr ""

#: xml/gcut-string-io-channel.xml:30(link)
#: xml/gcut-string-io-channel.xml:90(primary) xml/api-index-full.xml:414(link)
msgid "gcut_string_io_channel_get_buffer_limit"
msgstr ""

#: xml/gcut-string-io-channel.xml:32(link)
#: xml/gcut-string-io-channel.xml:99(primary) xml/api-index-full.xml:421(link)
msgid "gcut_string_io_channel_set_buffer_limit"
msgstr ""

#: xml/gcut-string-io-channel.xml:34(link)
#: xml/gcut-string-io-channel.xml:109(primary) xml/api-index-full.xml:415(link)
msgid "gcut_string_io_channel_get_limit"
msgstr ""

#: xml/gcut-string-io-channel.xml:36(link)
#: xml/gcut-string-io-channel.xml:117(primary) xml/api-index-full.xml:422(link)
msgid "gcut_string_io_channel_set_limit"
msgstr ""

#: xml/gcut-string-io-channel.xml:38(link)
#: xml/gcut-string-io-channel.xml:126(primary) xml/api-index-full.xml:418(link)
msgid "gcut_string_io_channel_get_read_fail"
msgstr ""

#: xml/gcut-string-io-channel.xml:40(link)
#: xml/gcut-string-io-channel.xml:134(primary) xml/api-index-full.xml:425(link)
msgid "gcut_string_io_channel_set_read_fail"
msgstr ""

#: xml/gcut-string-io-channel.xml:42(link)
#: xml/gcut-string-io-channel.xml:143(primary) xml/api-index-full.xml:417(link)
msgid "gcut_string_io_channel_get_pipe_mode"
msgstr ""

#: xml/gcut-string-io-channel.xml:44(link)
#: xml/gcut-string-io-channel.xml:151(primary) xml/api-index-full.xml:424(link)
msgid "gcut_string_io_channel_set_pipe_mode"
msgstr ""

#: xml/gcut-string-io-channel.xml:46(link)
#: xml/gcut-string-io-channel.xml:160(primary) xml/api-index-full.xml:416(link)
msgid "gcut_string_io_channel_get_main_context"
msgstr ""

#: xml/gcut-string-io-channel.xml:48(link)
#: xml/gcut-string-io-channel.xml:169(primary) xml/api-index-full.xml:423(link)
msgid "gcut_string_io_channel_set_main_context"
msgstr ""

#: xml/gcut-string-io-channel.xml:65(title)
msgid "gcut_string_io_channel_new ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:67(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GIOChannel\"><returnvalue>GIOChannel</returnvalue></link> *\n"
"gcut_string_io_channel_new (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *initial</parameter>);"
msgstr ""

#: xml/gcut-string-io-channel.xml:73(title)
msgid "gcut_string_io_channel_get_string ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:75(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GString\"><returnvalue>GString</returnvalue></link> *\n"
"gcut_string_io_channel_get_string (<parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>);"
msgstr ""

#: xml/gcut-string-io-channel.xml:81(title)
msgid "gcut_string_io_channel_clear ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:83(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_string_io_channel_clear (<parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>);"
msgstr ""

#: xml/gcut-string-io-channel.xml:89(title)
msgid "gcut_string_io_channel_get_buffer_limit ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:91(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gsize\"><returnvalue>gsize</returnvalue></link>\n"
"gcut_string_io_channel_get_buffer_limit\n"
"                               (<parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>);"
msgstr ""

#: xml/gcut-string-io-channel.xml:98(title)
msgid "gcut_string_io_channel_set_buffer_limit ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:100(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_string_io_channel_set_buffer_limit\n"
"                               (<parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>,\n"
"                                <parameter><link linkend=\"gsize\"><type>gsize</type></link> limit</parameter>);"
msgstr ""

#: xml/gcut-string-io-channel.xml:108(title)
msgid "gcut_string_io_channel_get_limit ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:110(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gsize\"><returnvalue>gsize</returnvalue></link>\n"
"gcut_string_io_channel_get_limit (<parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>);"
msgstr ""

#: xml/gcut-string-io-channel.xml:116(title)
msgid "gcut_string_io_channel_set_limit ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:118(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_string_io_channel_set_limit (<parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>,\n"
"                                  <parameter><link linkend=\"gsize\"><type>gsize</type></link> limit</parameter>);"
msgstr ""

#: xml/gcut-string-io-channel.xml:125(title)
msgid "gcut_string_io_channel_get_read_fail ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:127(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_string_io_channel_get_read_fail (<parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>);"
msgstr ""

#: xml/gcut-string-io-channel.xml:133(title)
msgid "gcut_string_io_channel_set_read_fail ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:135(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_string_io_channel_set_read_fail (<parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>,\n"
"                                      <parameter><link linkend=\"gboolean\"><type>gboolean</type></link> read_fail</parameter>);"
msgstr ""

#: xml/gcut-string-io-channel.xml:142(title)
msgid "gcut_string_io_channel_get_pipe_mode ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:144(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_string_io_channel_get_pipe_mode (<parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>);"
msgstr ""

#: xml/gcut-string-io-channel.xml:150(title)
msgid "gcut_string_io_channel_set_pipe_mode ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:152(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_string_io_channel_set_pipe_mode (<parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>,\n"
"                                      <parameter><link linkend=\"gboolean\"><type>gboolean</type></link> pipe_mode</parameter>);"
msgstr ""

#: xml/gcut-string-io-channel.xml:159(title)
msgid "gcut_string_io_channel_get_main_context ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:161(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GMainContext\"><returnvalue>GMainContext</returnvalue></link> *\n"
"gcut_string_io_channel_get_main_context\n"
"                               (<parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>);"
msgstr ""

#: xml/gcut-string-io-channel.xml:168(title)
msgid "gcut_string_io_channel_set_main_context ()"
msgstr ""

#: xml/gcut-string-io-channel.xml:170(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_string_io_channel_set_main_context\n"
"                               (<parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>,\n"
"                                <parameter><link linkend=\"GMainContext\"><type>GMainContext</type></link> *main_context</parameter>);"
msgstr ""

#: xml/gcut-public.xml:7(refentrytitle) xml/gcut-public.xml:12(refname)
#: xml/api-index-full.xml:439(link) xml/api-index-full.xml:440(link)
#: xml/api-index-full.xml:647(link) xml/api-index-full.xml:648(link)
#: xml/api-index-full.xml:649(link) xml/api-index-full.xml:650(link)
#: xml/api-index-full.xml:651(link)
msgid "gcut-public"
msgstr ""

#: xml/gcut-public.xml:24(link) xml/gcut-public.xml:54(primary)
#: xml/api-index-full.xml:650(link)
msgid "cut_test_context_take_g_object"
msgstr ""

#: xml/gcut-public.xml:25(entry)
#, fuzzy
msgid "const <link linkend=\"GError\"><placeholder-1/></link> *"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/gcut-public.xml:26(link) xml/gcut-public.xml:63(primary)
#: xml/api-index-full.xml:647(link)
msgid "cut_test_context_take_g_error"
msgstr ""

#: xml/gcut-public.xml:28(link) xml/gcut-public.xml:72(primary)
#: xml/api-index-full.xml:649(link)
msgid "cut_test_context_take_g_list"
msgstr ""

#: xml/gcut-public.xml:30(link) xml/gcut-public.xml:82(primary)
#: xml/api-index-full.xml:648(link)
msgid "cut_test_context_take_g_hash_table"
msgstr ""

#: xml/gcut-public.xml:32(link) xml/gcut-public.xml:91(primary)
#: xml/api-index-full.xml:651(link)
msgid "cut_test_context_take_g_string"
msgstr ""

#: xml/gcut-public.xml:34(link) xml/gcut-public.xml:100(primary)
#: xml/api-index-full.xml:439(link)
msgid "gcut_utils_get_fixture_data"
msgstr ""

#: xml/gcut-public.xml:36(link) xml/gcut-public.xml:111(primary)
#: xml/api-index-full.xml:440(link)
msgid "gcut_utils_get_fixture_data_va_list"
msgstr ""

#: xml/gcut-public.xml:53(title)
msgid "cut_test_context_take_g_object ()"
msgstr ""

#: xml/gcut-public.xml:55(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GObject\"><returnvalue>GObject</returnvalue></link> *\n"
"cut_test_context_take_g_object (<parameter><link linkend=\"CutTestContext\"><type>CutTestContext</type></link> *context</parameter>,\n"
"                                <parameter><link linkend=\"GObject\"><type>GObject</type></link> *object</parameter>);"
msgstr ""

#: xml/gcut-public.xml:62(title)
msgid "cut_test_context_take_g_error ()"
msgstr ""

#: xml/gcut-public.xml:64(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"GError\"><returnvalue>GError</returnvalue></link> *\n"
"cut_test_context_take_g_error (<parameter><link linkend=\"CutTestContext\"><type>CutTestContext</type></link> *context</parameter>,\n"
"                               <parameter><link linkend=\"GError\"><type>GError</type></link> *error</parameter>);"
msgstr ""

#: xml/gcut-public.xml:71(title)
msgid "cut_test_context_take_g_list ()"
msgstr ""

#: xml/gcut-public.xml:73(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"GList\"><returnvalue>GList</returnvalue></link> *\n"
"cut_test_context_take_g_list (<parameter><link linkend=\"CutTestContext\"><type>CutTestContext</type></link> *context</parameter>,\n"
"                              <parameter><link linkend=\"GList\"><type>GList</type></link> *list</parameter>,\n"
"                              <parameter><link linkend=\"CutDestroyFunction\"><type>CutDestroyFunction</type></link> destroy</parameter>);"
msgstr ""

#: xml/gcut-public.xml:81(title)
msgid "cut_test_context_take_g_hash_table ()"
msgstr ""

#: xml/gcut-public.xml:83(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GHashTable\"><returnvalue>GHashTable</returnvalue></link> *\n"
"cut_test_context_take_g_hash_table (<parameter><link linkend=\"CutTestContext\"><type>CutTestContext</type></link> *context</parameter>,\n"
"                                    <parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *hash_table</parameter>);"
msgstr ""

#: xml/gcut-public.xml:90(title)
msgid "cut_test_context_take_g_string ()"
msgstr ""

#: xml/gcut-public.xml:92(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GString\"><returnvalue>GString</returnvalue></link> *\n"
"cut_test_context_take_g_string (<parameter><link linkend=\"CutTestContext\"><type>CutTestContext</type></link> *context</parameter>,\n"
"                                <parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>);"
msgstr ""

#: xml/gcut-public.xml:99(title)
msgid "gcut_utils_get_fixture_data ()"
msgstr ""

#: xml/gcut-public.xml:101(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GString\"><returnvalue>GString</returnvalue></link> *\n"
"gcut_utils_get_fixture_data (<parameter><link linkend=\"CutTestContext\"><type>CutTestContext</type></link> *context</parameter>,\n"
"                             <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> **full_path</parameter>,\n"
"                             <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *path</parameter>,\n"
"                             <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-public.xml:110(title)
msgid "gcut_utils_get_fixture_data_va_list ()"
msgstr ""

#: xml/gcut-public.xml:112(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GString\"><returnvalue>GString</returnvalue></link> *\n"
"gcut_utils_get_fixture_data_va_list (<parameter><link linkend=\"CutTestContext\"><type>CutTestContext</type></link> *context</parameter>,\n"
"                                     <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> **full_path</parameter>,\n"
"                                     <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *path</parameter>,\n"
"                                     <parameter><link linkend=\"va-list\"><type>va_list</type></link> args</parameter>);"
msgstr ""

#: xml/gcut-process.xml:7(refentrytitle) xml/gcut-process.xml:12(refname)
msgid "External command"
msgstr "外部コマンド"

#: xml/gcut-process.xml:13(refpurpose)
msgid "Convenience API for using external command."
msgstr "外部コマンドを使うための便利API"

#: xml/gcut-process.xml:24(returnvalue) xml/gcut-event-loop.xml:24(returnvalue)
#: xml/gcut-enum.xml:24(returnvalue) xml/gcut-egg.xml:24(returnvalue)
#: xml/cut-logger.xml:43(returnvalue) xml/cut-logger.xml:45(returnvalue)
#: xml/cut-logger.xml:47(returnvalue)
msgid "GQuark"
msgstr ""

#: xml/gcut-process.xml:25(link) xml/gcut-process.xml:208(primary)
#: xml/api-index-full.xml:382(link)
msgid "gcut_process_error_quark"
msgstr ""

#: xml/gcut-process.xml:26(returnvalue) xml/gcut-process.xml:28(returnvalue)
#: xml/gcut-process.xml:30(returnvalue) xml/gcut-process.xml:32(returnvalue)
#: xml/gcut-process.xml:34(returnvalue) xml/gcut-process.xml:36(returnvalue)
#: xml/api-index-full.xml:189(link) xml/api-index-full.xml:190(link)
#: xml/api-index-full.xml:191(link) xml/api-index-full.xml:192(link)
#: xml/api-index-full.xml:193(link) xml/api-index-full.xml:194(link)
#: xml/api-index-full.xml:381(link) xml/api-index-full.xml:382(link)
#: xml/api-index-full.xml:383(link) xml/api-index-full.xml:384(link)
#: xml/api-index-full.xml:385(link) xml/api-index-full.xml:386(link)
#: xml/api-index-full.xml:387(link) xml/api-index-full.xml:388(link)
#: xml/api-index-full.xml:389(link) xml/api-index-full.xml:390(link)
#: xml/api-index-full.xml:391(link) xml/api-index-full.xml:392(link)
#: xml/api-index-full.xml:393(link) xml/api-index-full.xml:394(link)
#: xml/api-index-full.xml:395(link) xml/api-index-full.xml:396(link)
#: xml/api-index-full.xml:397(link) xml/api-index-full.xml:398(link)
#: xml/api-index-full.xml:399(link) xml/api-index-full.xml:400(link)
#: xml/api-index-full.xml:401(link) xml/api-index-full.xml:402(link)
#: xml/api-index-full.xml:403(link) xml/api-index-full.xml:404(link)
#: xml/api-index-full.xml:405(link) xml/api-index-full.xml:406(link)
#: xml/api-index-full.xml:407(link) xml/api-index-full.xml:408(link)
#: xml/api-index-full.xml:409(link) xml/api-index-1.1.6.xml:23(link)
#: xml/api-index-1.1.6.xml:24(link) xml/api-index-1.1.5.xml:14(link)
#: xml/api-index-1.1.5.xml:15(link) xml/api-index-1.1.5.xml:16(link)
#: xml/api-index-1.1.5.xml:17(link) xml/api-index-1.1.5.xml:18(link)
#: xml/api-index-1.1.5.xml:23(link) xml/api-index-1.1.5.xml:24(link)
#: xml/api-index-1.1.5.xml:25(link) xml/api-index-1.1.5.xml:26(link)
#: xml/api-index-1.1.5.xml:27(link) xml/api-index-1.1.5.xml:28(link)
#: xml/api-index-1.1.5.xml:29(link) xml/api-index-1.1.5.xml:30(link)
#: xml/api-index-1.1.5.xml:31(link) xml/api-index-1.1.5.xml:32(link)
#: xml/api-index-1.1.5.xml:33(link) xml/api-index-1.1.5.xml:34(link)
#: xml/api-index-1.1.5.xml:35(link) xml/api-index-1.1.5.xml:36(link)
#: xml/api-index-1.1.5.xml:37(link) xml/api-index-1.1.5.xml:38(link)
#: xml/api-index-1.1.5.xml:39(link) xml/api-index-1.1.5.xml:40(link)
#: xml/api-index-1.1.5.xml:41(link) xml/api-index-1.1.5.xml:42(link)
#: xml/api-index-1.1.5.xml:43(link) xml/api-index-1.1.5.xml:44(link)
#: xml/api-index-1.1.5.xml:45(link) xml/api-index-1.1.5.xml:46(link)
#: xml/api-index-1.1.5.xml:47(link)
msgid "GCutProcess"
msgstr ""

#: xml/gcut-process.xml:26(entry) xml/gcut-process.xml:28(entry)
#: xml/gcut-process.xml:30(entry) xml/gcut-process.xml:32(entry)
#: xml/gcut-process.xml:34(entry) xml/gcut-process.xml:36(entry)
#, fuzzy
msgid "<link linkend=\"GCutProcess\"><placeholder-1/></link> *"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/gcut-process.xml:27(link) xml/gcut-process.xml:216(primary)
#: xml/api-index-full.xml:397(link) xml/api-index-1.1.5.xml:36(link)
msgid "gcut_process_new"
msgstr ""

#: xml/gcut-process.xml:29(link) xml/gcut-process.xml:244(primary)
#: xml/api-index-full.xml:400(link) xml/api-index-1.1.5.xml:39(link)
msgid "gcut_process_new_command_line"
msgstr ""

#: xml/gcut-process.xml:31(link) xml/gcut-process.xml:267(primary)
#: xml/api-index-full.xml:402(link) xml/api-index-1.1.5.xml:41(link)
msgid "gcut_process_new_va_list"
msgstr ""

#: xml/gcut-process.xml:33(link) xml/gcut-process.xml:295(primary)
#: xml/api-index-full.xml:398(link) xml/api-index-1.1.5.xml:37(link)
msgid "gcut_process_new_argv"
msgstr ""

#: xml/gcut-process.xml:35(link) xml/gcut-process.xml:324(primary)
#: xml/api-index-full.xml:401(link) xml/api-index-1.1.5.xml:40(link)
msgid "gcut_process_new_strings"
msgstr ""

#: xml/gcut-process.xml:37(link) xml/gcut-process.xml:348(primary)
#: xml/api-index-full.xml:399(link) xml/api-index-1.1.5.xml:38(link)
msgid "gcut_process_new_array"
msgstr ""

#: xml/gcut-process.xml:39(link) xml/gcut-process.xml:372(primary)
#: xml/api-index-full.xml:406(link) xml/api-index-1.1.5.xml:44(link)
msgid "gcut_process_set_flags"
msgstr ""

#: xml/gcut-process.xml:40(returnvalue) xml/gcut-egg.xml:38(returnvalue)
msgid "GSpawnFlags"
msgstr ""

#: xml/gcut-process.xml:41(link) xml/gcut-process.xml:396(primary)
#: xml/api-index-full.xml:389(link) xml/api-index-1.1.5.xml:28(link)
msgid "gcut_process_get_flags"
msgstr ""

#: xml/gcut-process.xml:43(link) xml/gcut-process.xml:419(primary)
#: xml/api-index-full.xml:404(link) xml/api-index-1.1.5.xml:43(link)
msgid "gcut_process_set_env"
msgstr ""

#: xml/gcut-process.xml:44(entry) xml/gcut-egg.xml:42(entry)
#, fuzzy
msgid "<link linkend=\"gchar\"><placeholder-1/></link> **"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/gcut-process.xml:45(link) xml/gcut-process.xml:448(primary)
#: xml/api-index-full.xml:384(link) xml/api-index-1.1.5.xml:24(link)
msgid "gcut_process_get_env"
msgstr ""

#: xml/gcut-process.xml:47(link) xml/gcut-process.xml:473(primary)
#: xml/api-index-full.xml:403(link) xml/api-index-1.1.5.xml:42(link)
msgid "gcut_process_run"
msgstr ""

#: xml/gcut-process.xml:48(returnvalue) xml/gcut-egg.xml:50(returnvalue)
msgid "GPid"
msgstr ""

#: xml/gcut-process.xml:49(link) xml/gcut-process.xml:499(primary)
#: xml/api-index-full.xml:395(link) xml/api-index-1.1.5.xml:34(link)
msgid "gcut_process_get_pid"
msgstr ""

#: xml/gcut-process.xml:50(returnvalue) xml/gcut-key-file.xml:23(returnvalue)
#: xml/gcut-enum.xml:28(returnvalue) xml/gcut-egg.xml:52(returnvalue)
#: xml/gcut-data.xml:31(returnvalue) xml/gcut-data.xml:40(returnvalue)
#: xml/gcut-data-helper.xml:27(returnvalue)
#: xml/gcut-data-helper.xml:41(returnvalue)
msgid "gint"
msgstr ""

#: xml/gcut-process.xml:51(link) xml/gcut-process.xml:523(primary)
#: xml/api-index-full.xml:408(link) xml/api-index-1.1.5.xml:46(link)
msgid "gcut_process_wait"
msgstr ""

#: xml/gcut-process.xml:53(link) xml/gcut-process.xml:561(primary)
#: xml/api-index-full.xml:396(link) xml/api-index-1.1.5.xml:35(link)
msgid "gcut_process_kill"
msgstr ""

#: xml/gcut-process.xml:55(link) xml/gcut-process.xml:592(primary)
#: xml/api-index-full.xml:409(link) xml/api-index-1.1.5.xml:47(link)
msgid "gcut_process_write"
msgstr ""

#: xml/gcut-process.xml:56(returnvalue)
msgid "GIOStatus"
msgstr ""

#: xml/gcut-process.xml:57(link) xml/gcut-process.xml:628(primary)
#: xml/api-index-full.xml:383(link) xml/api-index-1.1.5.xml:23(link)
msgid "gcut_process_flush"
msgstr ""

#: xml/gcut-process.xml:59(link) xml/gcut-process.xml:656(primary)
#: xml/api-index-full.xml:394(link) xml/api-index-1.1.5.xml:33(link)
msgid "gcut_process_get_output_string"
msgstr ""

#: xml/gcut-process.xml:61(link) xml/gcut-process.xml:678(primary)
#: xml/api-index-full.xml:387(link) xml/api-index-1.1.5.xml:27(link)
msgid "gcut_process_get_error_string"
msgstr ""

#: xml/gcut-process.xml:63(link) xml/gcut-process.xml:700(primary)
#: xml/api-index-full.xml:391(link) xml/api-index-1.1.5.xml:30(link)
msgid "gcut_process_get_input_channel"
msgstr ""

#: xml/gcut-process.xml:65(link) xml/gcut-process.xml:724(primary)
#: xml/api-index-full.xml:392(link) xml/api-index-1.1.5.xml:31(link)
msgid "gcut_process_get_output_channel"
msgstr ""

#: xml/gcut-process.xml:67(link) xml/gcut-process.xml:748(primary)
#: xml/api-index-full.xml:385(link) xml/api-index-1.1.5.xml:25(link)
msgid "gcut_process_get_error_channel"
msgstr ""

#: xml/gcut-process.xml:68(returnvalue) xml/gcut-process.xml:70(returnvalue)
msgid "GInputStream"
msgstr ""

#: xml/gcut-process.xml:68(entry) xml/gcut-process.xml:70(entry)
#, fuzzy
msgid "<link linkend=\"GInputStream\"><placeholder-1/></link> *"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/gcut-process.xml:69(link) xml/gcut-process.xml:772(primary)
#: xml/api-index-full.xml:393(link) xml/api-index-1.1.5.xml:32(link)
msgid "gcut_process_get_output_stream"
msgstr ""

#: xml/gcut-process.xml:71(link) xml/gcut-process.xml:796(primary)
#: xml/api-index-full.xml:386(link) xml/api-index-1.1.5.xml:26(link)
msgid "gcut_process_get_error_stream"
msgstr ""

#: xml/gcut-process.xml:73(link) xml/gcut-process.xml:820(primary)
#: xml/api-index-full.xml:390(link) xml/api-index-1.1.5.xml:29(link)
msgid "gcut_process_get_forced_termination_wait_time"
msgstr ""

#: xml/gcut-process.xml:75(link) xml/gcut-process.xml:845(primary)
#: xml/api-index-full.xml:407(link) xml/api-index-1.1.5.xml:45(link)
msgid "gcut_process_set_forced_termination_wait_time"
msgstr ""

#: xml/gcut-process.xml:76(returnvalue)
#: xml/gcut-glib-event-loop.xml:24(returnvalue)
#: xml/api-index-full.xml:307(link) xml/api-index-full.xml:308(link)
#: xml/api-index-full.xml:309(link) xml/api-index-full.xml:310(link)
#: xml/api-index-full.xml:311(link) xml/api-index-full.xml:312(link)
#: xml/api-index-full.xml:313(link) xml/api-index-full.xml:314(link)
#: xml/api-index-full.xml:315(link) xml/api-index-full.xml:316(link)
#: xml/api-index-full.xml:317(link) xml/api-index-full.xml:318(link)
#: xml/api-index-full.xml:319(link) xml/api-index-1.1.6.xml:10(link)
#: xml/api-index-1.1.6.xml:11(link) xml/api-index-1.1.6.xml:12(link)
#: xml/api-index-1.1.6.xml:13(link) xml/api-index-1.1.6.xml:14(link)
#: xml/api-index-1.1.6.xml:15(link) xml/api-index-1.1.6.xml:16(link)
#: xml/api-index-1.1.6.xml:17(link) xml/api-index-1.1.6.xml:18(link)
#: xml/api-index-1.1.6.xml:19(link) xml/api-index-1.1.6.xml:20(link)
msgid "GCutEventLoop"
msgstr ""

#: xml/gcut-process.xml:76(entry) xml/gcut-glib-event-loop.xml:24(entry)
#, fuzzy
msgid "<link linkend=\"GCutEventLoop\"><placeholder-1/></link> *"
msgstr ""
"<link linkend=\"CutCallbackFunction\">CutCallbackFunction<type></type></link>"
"コールバック。"

#: xml/gcut-process.xml:77(link) xml/gcut-process.xml:872(primary)
#: xml/api-index-full.xml:388(link) xml/api-index-1.1.6.xml:23(link)
msgid "gcut_process_get_event_loop"
msgstr ""

#: xml/gcut-process.xml:79(link) xml/gcut-process.xml:895(primary)
#: xml/api-index-full.xml:405(link) xml/api-index-1.1.6.xml:24(link)
msgid "gcut_process_set_event_loop"
msgstr ""

#: xml/gcut-process.xml:93(type) xml/gcut-egg.xml:79(type)
#: xml/gcut-data-helper.xml:47(returnvalue)
msgid "gpointer"
msgstr ""

#: xml/gcut-process.xml:93(link) xml/gcut-process.xml:230(para)
#: xml/gcut-process.xml:281(para) xml/gcut-process.xml:337(para)
#: xml/gcut-process.xml:361(para) xml/gcut-egg.xml:79(link)
#: xml/gcut-egg.xml:219(para) xml/gcut-egg.xml:249(para)
#: xml/gcut-egg.xml:309(para) xml/gcut-egg.xml:335(para)
msgid "command"
msgstr ""

#: xml/gcut-process.xml:100(title) xml/gcut-egg.xml:86(title)
msgid "Signals"
msgstr "シグナル"

#: xml/gcut-process.xml:107(link) xml/gcut-process.xml:108(link)
#: xml/gcut-process.xml:109(link) xml/gcut-process.xml:110(link)
#: xml/gcut-egg.xml:93(link) xml/gcut-egg.xml:94(link)
#: xml/gcut-egg.xml:95(link) xml/gcut-egg.xml:96(link)
msgid "Run Last"
msgstr ""

#: xml/gcut-process.xml:108(link) xml/gcut-egg.xml:94(link)
msgid "error-received"
msgstr ""

#: xml/gcut-process.xml:109(link) xml/gcut-egg.xml:95(link)
msgid "output-received"
msgstr ""

#: xml/gcut-process.xml:110(link) xml/gcut-egg.xml:96(link)
msgid "reaped"
msgstr ""

#: xml/gcut-process.xml:123(link) xml/gcut-process.xml:924(title)
#: xml/gcut-process.xml:925(primary) xml/api-index-full.xml:381(link)
msgid "GCUT_PROCESS_ERROR"
msgstr ""

#: xml/gcut-process.xml:124(entry) xml/gcut-enum.xml:49(entry)
#: xml/gcut-egg.xml:110(entry) xml/cut-logger.xml:100(entry)
#: xml/cut-logger.xml:102(entry) xml/cut-logger.xml:104(entry)
#: xml/cut-logger.xml:107(entry) xml/cut-logger.xml:108(entry)
msgid "enum"
msgstr ""

#: xml/gcut-process.xml:124(link) xml/gcut-process.xml:933(primary)
#: xml/api-index-full.xml:194(link) xml/api-index-1.1.5.xml:18(link)
msgid "GCutProcessError"
msgstr ""

#: xml/gcut-process.xml:132(screen)
#, no-wrap
msgid ""
"    <placeholder-1/>\n"
"    <placeholder-2/> GCutProcess\n"
msgstr ""

#: xml/gcut-process.xml:140(para)
msgid ""
"<link linkend=\"GCutProcess\"><type>GCutProcess</type></link> encapsulates "
"external command execution, communication and termination. <link linkend="
"\"GCutProcess\"><type>GCutProcess</type></link> reports an error as <link "
"linkend=\"GError\"><type>GError</type></link>. It can be asserted easily by "
"<link linkend=\"gcut-assert-error\"><function>gcut_assert_error()</"
"function></link>."
msgstr ""
"<link linkend=\"GCutProcess\"><type>GCutProcess</type></link>は外部コマンドの"
"実行・通信・終了をカプセル化します。<link linkend=\"GCutProcess"
"\"><type>GCutProcess</type></link>はエラーを<link linkend=\"GError"
"\"><type>GError</type></link>として報告します。エラーは<link linkend=\"gcut-"
"assert-error\"><function>gcut_assert_error()</function></link>を使うことによ"
"り簡単に検証できます。"

#: xml/gcut-process.xml:144(para)
msgid ""
"External command is specified to constructor like <link linkend=\"gcut-"
"process-new\"><function>gcut_process_new()</function></link>, <link linkend="
"\"gcut-process-new-strings\"><function>gcut_process_new_strings()</"
"function></link> and so on. External command isn't run at the time. <link "
"linkend=\"gcut-process-run\"><function>gcut_process_run()</function></link> "
"runs specified external command."
msgstr ""
"外部コマンドは<link linkend=\"gcut-process-new"
"\"><function>gcut_process_new()</function></link>、<link linkend=\"gcut-"
"process-new-strings\"><function>gcut_process_new_strings()</function></link>"
"などのようなコンストラクタで指定します。この時点では外部コマンドは実行されま"
"せん。<link linkend=\"gcut-process-hatch\"><function>gcut_process_hatch()</"
"function></link>で指定された外部コマンドが実行されます。"

#: xml/gcut-process.xml:148(para)
#, fuzzy
msgid ""
"Standard/Error outputs of external command are passed by <link linkend="
"\"GCutProcess-output-received\"><type>“output-received”</type></link>/<link "
"linkend=\"GCutProcess-error-received\"><type>“error-received”</type></link> "
"signals or <link linkend=\"GIOChannel\"><type>GIOChannel</type></link> "
"returned by <link linkend=\"gcut-process-get-output"
"\"><function>gcut_process_get_output()</function></link>/<link linkend="
"\"gcut-process-get-error\"><function>gcut_process_get_error()</function></"
"link>. <link linkend=\"gcut-process-write\"><function>gcut_process_write()</"
"function></link> writes a chunk to standard input of external command."
msgstr ""
"外部コマンドの標準出力・エラー出力は<link linkend=\"GCutProcess-output-"
"received\"><type>\"output-received\"</type></link>シグナル・<link linkend="
"\"GCutProcess-error-received\"><type>\"error-received\"</type></link>シグナ"
"ル、あるいは、<link linkend=\"gcut-process-get-output"
"\"><function>gcut_process_get_output()</function></link>・<link linkend="
"\"gcut-process-get-error\"><function>gcut_process_get_error()</function></"
"link>が返す<link linkend=\"GIOChannel\"><type>GIOChannel</type></link>で取得"
"できます。<link linkend=\"gcut-process-write"
"\"><function>gcut_process_write()</function></link>は外部コマンドの標準入力に"
"データを書き込みます。"

#: xml/gcut-process.xml:154(para)
msgid ""
"To wait external command finished, <link linkend=\"gcut-process-wait"
"\"><function>gcut_process_wait()</function></link> can be used. It accepts "
"timeout to avoid infinite waiting."
msgstr ""
"外部コマンドの終了を待つためには<link linkend=\"gcut-process-wait"
"\"><function>gcut_process_wait()</function></link>を使うことができます。無限"
"待ちを避けるために、タイムアウトを指定することができます。"

#: xml/gcut-process.xml:207(title)
msgid "gcut_process_error_quark ()"
msgstr ""

#: xml/gcut-process.xml:209(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GQuark\"><returnvalue>GQuark</returnvalue></link>\n"
"gcut_process_error_quark (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/gcut-process.xml:215(title)
msgid "gcut_process_new ()"
msgstr ""

#: xml/gcut-process.xml:217(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GCutProcess\"><returnvalue>GCutProcess</returnvalue></link> *\n"
"gcut_process_new (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *command</parameter>,\n"
"                  <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-process.xml:220(para) xml/gcut-process.xml:271(para)
#: xml/gcut-process.xml:299(para) xml/gcut-process.xml:327(para)
#: xml/gcut-process.xml:351(para)
#, fuzzy
msgid ""
"Creates a new <link linkend=\"GCutProcess\"><type>GCutProcess</type></link> "
"object that runs <parameter>command</parameter> ."
msgstr ""
"<parameter>command</parameter>を実行する新しい<link linkend=\"GCutProcess"
"\"><type>GCutProcess</type></link>オブジェクトを生成します。"

#: xml/gcut-process.xml:231(para) xml/gcut-process.xml:282(para)
#: xml/gcut-egg.xml:220(para) xml/gcut-egg.xml:250(para)
msgid "the external command name to be ran"
msgstr "実行する外部コマンド名。"

#: xml/gcut-process.xml:234(para) xml/gcut-egg.xml:223(para)
msgid "the arguments for <parameter>command</parameter>"
msgstr "<parameter>command</parameter>の引数"

#: xml/gcut-process.xml:240(para) xml/gcut-process.xml:263(para)
#: xml/gcut-process.xml:291(para) xml/gcut-process.xml:320(para)
#: xml/gcut-process.xml:344(para) xml/gcut-process.xml:368(para)
msgid "a new <link linkend=\"GCutProcess\"><type>GCutProcess</type></link>."
msgstr ""
"<link linkend=\"GCutProcess\"><type>GCutProcess</type></link>オブジェクト。"

#: xml/gcut-process.xml:243(title)
msgid "gcut_process_new_command_line ()"
msgstr ""

#: xml/gcut-process.xml:245(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GCutProcess\"><returnvalue>GCutProcess</returnvalue></link> *\n"
"gcut_process_new_command_line (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *command_line</parameter>);"
msgstr ""

#: xml/gcut-process.xml:247(para)
#, fuzzy
msgid ""
"Creates a new <link linkend=\"GCutProcess\"><type>GCutProcess</type></link> "
"object that runs <parameter>command_line</parameter> ."
msgstr ""
"<parameter>command_line</parameter>を実行する新しい<link linkend="
"\"GCutProcess\"><type>GCutProcess</type></link>オブジェクトを生成します。"

#: xml/gcut-process.xml:257(para)
#, fuzzy
msgid "command_line"
msgstr "コマンドライン"

#: xml/gcut-process.xml:258(para)
msgid "a command line"
msgstr "コマンドライン"

#: xml/gcut-process.xml:266(title)
msgid "gcut_process_new_va_list ()"
msgstr ""

#: xml/gcut-process.xml:268(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GCutProcess\"><returnvalue>GCutProcess</returnvalue></link> *\n"
"gcut_process_new_va_list (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *command</parameter>,\n"
"                          <parameter><link linkend=\"va-list\"><type>va_list</type></link> args</parameter>);"
msgstr ""

#: xml/gcut-process.xml:285(para) xml/gcut-egg.xml:253(para)
msgid "arguments for <parameter>command</parameter>"
msgstr "<parameter>command</parameter>の引数"

#: xml/gcut-process.xml:294(title)
msgid "gcut_process_new_argv ()"
msgstr ""

#: xml/gcut-process.xml:296(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GCutProcess\"><returnvalue>GCutProcess</returnvalue></link> *\n"
"gcut_process_new_argv (<parameter><link linkend=\"gint\"><type>gint</type></link> argc</parameter>,\n"
"                       <parameter><link linkend=\"gchar\"><type>gchar</type></link> **argv</parameter>);"
msgstr ""

#: xml/gcut-process.xml:309(para) xml/gcut-egg.xml:279(para)
msgid "argc"
msgstr ""

#: xml/gcut-process.xml:310(para) xml/gcut-egg.xml:280(para)
msgid "the number of elements of <parameter>argv</parameter>"
msgstr "<parameter>argv</parameter>の要素数"

#: xml/gcut-process.xml:313(para) xml/gcut-egg.xml:283(para)
msgid "argv"
msgstr ""

#: xml/gcut-process.xml:314(para) xml/gcut-egg.xml:284(para)
msgid "the external command name to be ran and arguments of it."
msgstr "実行する外部コマンド名とコマンド引数。"

#: xml/gcut-process.xml:323(title)
msgid "gcut_process_new_strings ()"
msgstr ""

#: xml/gcut-process.xml:325(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GCutProcess\"><returnvalue>GCutProcess</returnvalue></link> *\n"
"gcut_process_new_strings (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> **command</parameter>);"
msgstr ""

#: xml/gcut-process.xml:338(para) xml/gcut-egg.xml:310(para)
msgid ""
"the external command name to be ran and arguments of it. <link linkend="
"\"NULL:CAPS\"><literal>NULL</literal></link>-terminated."
msgstr ""
"実行する外部コマンド名とコマンド引数。<link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>終端。"

#: xml/gcut-process.xml:347(title)
msgid "gcut_process_new_array ()"
msgstr ""

#: xml/gcut-process.xml:349(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GCutProcess\"><returnvalue>GCutProcess</returnvalue></link> *\n"
"gcut_process_new_array (<parameter><link linkend=\"GArray\"><type>GArray</type></link> *command</parameter>);"
msgstr ""

#: xml/gcut-process.xml:362(para) xml/gcut-egg.xml:336(para)
msgid ""
"the external command name to be ran and arguments of it. The <link linkend="
"\"GArray\"><type>GArray</type></link> should be zero-terminated."
msgstr ""
"実行する外部コマンド名とコマンド引数。<link linkend=\"GArray\"><type>GArray</"
"type></link>は0終端にして下さい。"

#: xml/gcut-process.xml:371(title)
msgid "gcut_process_set_flags ()"
msgstr ""

#: xml/gcut-process.xml:373(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_process_set_flags (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>,\n"
"                        <parameter><link linkend=\"GSpawnFlags\"><type>GSpawnFlags</type></link> flags</parameter>);"
msgstr ""

#: xml/gcut-process.xml:376(para) xml/gcut-egg.xml:352(para)
msgid "Sets <parameter>flags</parameter> for spawning."
msgstr "外部コマンドを実行するときの<parameter>flags</parameter>を設定します。"

#: xml/gcut-process.xml:386(para) xml/gcut-process.xml:409(para)
#: xml/gcut-process.xml:433(para) xml/gcut-process.xml:460(para)
#: xml/gcut-process.xml:486(para) xml/gcut-process.xml:512(para)
#: xml/gcut-process.xml:544(para) xml/gcut-process.xml:576(para)
#: xml/gcut-process.xml:608(para) xml/gcut-process.xml:641(para)
#: xml/gcut-process.xml:667(para) xml/gcut-process.xml:689(para)
#: xml/gcut-process.xml:713(para) xml/gcut-process.xml:737(para)
#: xml/gcut-process.xml:761(para) xml/gcut-process.xml:785(para)
#: xml/gcut-process.xml:809(para) xml/gcut-process.xml:834(para)
#: xml/gcut-process.xml:862(para) xml/gcut-process.xml:885(para)
#: xml/gcut-process.xml:911(para)
#, fuzzy
msgid "process"
msgstr "プロセスID。"

#: xml/gcut-process.xml:387(para) xml/gcut-process.xml:410(para)
#: xml/gcut-process.xml:434(para) xml/gcut-process.xml:461(para)
#: xml/gcut-process.xml:487(para) xml/gcut-process.xml:513(para)
#: xml/gcut-process.xml:545(para) xml/gcut-process.xml:577(para)
#: xml/gcut-process.xml:609(para) xml/gcut-process.xml:642(para)
#: xml/gcut-process.xml:668(para) xml/gcut-process.xml:690(para)
#: xml/gcut-process.xml:714(para) xml/gcut-process.xml:738(para)
#: xml/gcut-process.xml:762(para) xml/gcut-process.xml:786(para)
#: xml/gcut-process.xml:810(para) xml/gcut-process.xml:835(para)
#: xml/gcut-process.xml:863(para) xml/gcut-process.xml:886(para)
#: xml/gcut-process.xml:912(para)
msgid "a <link linkend=\"GCutProcess\"><type>GCutProcess</type></link>"
msgstr "<link linkend=\"GCutProcess\"><type>GCutProcess</type></link>"

#: xml/gcut-process.xml:389(para) xml/gcut-egg.xml:365(para)
msgid "flags"
msgstr ""

#: xml/gcut-process.xml:390(para) xml/gcut-egg.xml:366(para)
msgid ""
"the flags to be passed to <link linkend=\"g-spawn-async-with-pipes"
"\"><function>g_spawn_async_with_pipes()</function></link>."
msgstr ""
"<link linkend=\"g-spawn-async-with-pipes"
"\"><function>g_spawn_async_with_pipes()</function></link>に渡すフラグ。"

#: xml/gcut-process.xml:395(title)
msgid "gcut_process_get_flags ()"
msgstr ""

#: xml/gcut-process.xml:397(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GSpawnFlags\"><returnvalue>GSpawnFlags</returnvalue></link>\n"
"gcut_process_get_flags (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>);"
msgstr ""

#: xml/gcut-process.xml:399(para) xml/gcut-egg.xml:377(para)
msgid "Gets <parameter>flags</parameter> for spawning."
msgstr "外部コマンドを実行する時の<parameter>flags</parameter>を取得します。"

#: xml/gcut-process.xml:415(para) xml/gcut-egg.xml:393(para)
msgid "the flags for spawning."
msgstr "外部コマンドを実行するときのフラグ。"

#: xml/gcut-process.xml:418(title)
msgid "gcut_process_set_env ()"
msgstr ""

#: xml/gcut-process.xml:420(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_process_set_env (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>,\n"
"                      <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *name</parameter>,\n"
"                      <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-process.xml:424(para) xml/gcut-egg.xml:404(para)
msgid "Sets environment variable for external command."
msgstr "外部コマンドの環境変数を設定します。"

#: xml/gcut-process.xml:436(para) xml/gcut-egg.xml:416(para)
#: xml/gcut-data.xml:306(para)
msgid "name"
msgstr ""

#: xml/gcut-process.xml:437(para) xml/gcut-egg.xml:417(para)
msgid "the first environment name."
msgstr "最初の環境変数名。"

#: xml/gcut-process.xml:440(para) xml/gcut-egg.xml:420(para)
#, fuzzy
msgid ""
"the value of <parameter>name</parameter> , followed by name and value pairs. "
"<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>-terminated."
msgstr ""
"<parameter>name</parameter>に対応する値。その後に、名前と値のペアを任意の数だ"
"け指定します。最後の引数は<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>にしてください。"

#: xml/gcut-process.xml:447(title)
msgid "gcut_process_get_env ()"
msgstr ""

#: xml/gcut-process.xml:449(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> **\n"
"gcut_process_get_env (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>);"
msgstr ""

#: xml/gcut-process.xml:451(para) xml/gcut-egg.xml:433(para)
msgid "Gets environment variable for external command."
msgstr "外部コマンドの環境変数を取得します。"

#: xml/gcut-process.xml:466(para) xml/gcut-egg.xml:448(para)
msgid ""
"a newly-allocated <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>-"
"terminated environment variables. (\"NAME1=VALUE1\", \"NAME2=VALUE2\", ..., "
"<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>) It should be "
"freed by <link linkend=\"g-strfreev\"><function>g_strfreev()</function></"
"link> when no longer needed."
msgstr ""
"新しく割り当てられた<link linkend=\"NULL:CAPS\"><literal>NULL</literal></"
"link>終端の環境変数のリスト（\"名前1=値1\", \"名前2=値2\", ..., <link "
"linkend=\"NULL:CAPS\"><literal>NULL</literal></link>）を返します。必要がなく"
"なったら<link linkend=\"g-strfreev\"><function>g_strfreev()</function></link>"
"で開放してください。"

#: xml/gcut-process.xml:472(title)
msgid "gcut_process_run ()"
msgstr ""

#: xml/gcut-process.xml:474(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_process_run (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>,\n"
"                  <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-process.xml:477(para)
msgid "Runs a new external process."
msgstr "新しい外部プロセスを実行します。"

#: xml/gcut-process.xml:490(para) xml/gcut-process.xml:551(para)
#: xml/gcut-process.xml:583(para) xml/gcut-process.xml:619(para)
#: xml/gcut-process.xml:645(para) xml/gcut-enum.xml:136(para)
#: xml/gcut-enum.xml:207(para) xml/gcut-enum.xml:236(para)
#: xml/gcut-egg.xml:474(para) xml/gcut-egg.xml:534(para)
#: xml/gcut-egg.xml:599(para)
msgid ""
"return location for an error, or <link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>"
msgstr ""
"エラーを返すアドレスまたは<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>。"

#: xml/gcut-process.xml:495(para) xml/gcut-process.xml:588(para)
#: xml/gcut-process.xml:624(para) xml/gcut-egg.xml:479(para)
#: xml/gcut-egg.xml:539(para)
msgid ""
"<link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></link> on success, "
"otherwise <link linkend=\"FALSE:CAPS\"><literal>FALSE</literal></link>"
msgstr ""
"成功したときは<link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></link>、そ"
"うでない場合は<link linkend=\"FALSE:CAPS\"><literal>FALSE</literal></link>。"

#: xml/gcut-process.xml:498(title)
msgid "gcut_process_get_pid ()"
msgstr ""

#: xml/gcut-process.xml:500(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"GPid\"><returnvalue>GPid</returnvalue></link>\n"
"gcut_process_get_pid (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>);"
msgstr "詳細を示す<link linkend=\"guint\"><type>guint</type></link>の<link linkend=\"GList\"><type>GList</type></link>です。"

#: xml/gcut-process.xml:502(para) xml/gcut-egg.xml:548(para)
msgid ""
"Gets the process ID of running external process. If external process isn't "
"running, 0 is returned."
msgstr ""
"実行している外部プロセスのプロセスIDを取得します。外部コマンドが実行されてい"
"ない場合は0が返ります。"

#: xml/gcut-process.xml:518(para) xml/gcut-egg.xml:564(para)
msgid ""
"the process ID of running external process if external process is running, "
"otherwise 0."
msgstr "実行中の外部コマンドのプロセスID。実行していない場合は0。"

#: xml/gcut-process.xml:522(title)
msgid "gcut_process_wait ()"
msgstr ""

#: xml/gcut-process.xml:524(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gint\"><returnvalue>gint</returnvalue></link>\n"
"gcut_process_wait (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>,\n"
"                   <parameter><link linkend=\"guint\"><type>guint</type></link> timeout</parameter>,\n"
"                   <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-process.xml:528(para)
msgid ""
"Waits running external process is finished while <parameter>timeout</"
"parameter> milliseconds. If external process isn't finished while "
"<parameter>timeout</parameter> milliseconds, <link linkend=\"GCUT-PROCESS-"
"ERROR-TIMEOUT:CAPS\"><literal>GCUT_PROCESS_ERROR_TIMEOUT</literal></link> "
"error is set and -1 is returned. If external process isn't running, <link "
"linkend=\"GCUT-PROCESS-ERROR-NOT-RUNNING:CAPS"
"\"><literal>GCUT_PROCESS_ERROR_NOT_RUNNING</literal></link> error is set and "
"-1 is returned."
msgstr ""
"実行中の外部プロセスが終了することを<parameter>timeout</parameter>ミリ秒待ち"
"ます。外部コマンドが<parameter>timeout</parameter>ミリ秒以内に終了しなかった"
"場合は、<link linkend=\"GCUT-PROCESS-ERROR-TIMEOUT:CAPS"
"\"><literal>GCUT_PROCESS_ERROR_TIMEOUT</literal></link>エラーが設定され、-1が"
"返ります。外部プロセスが実行されていない場合は、<link linkend=\"GCUT-PROCESS-"
"ERROR-NOT-RUNNING:CAPS\"><literal>GCUT_PROCESS_ERROR_NOT_RUNNING</literal></"
"link>エラーが設定され、-1が返ります。"

#: xml/gcut-process.xml:547(para) xml/gcut-process.xml:865(para)
#: xml/gcut-egg.xml:595(para) xml/gcut-egg.xml:762(para)
#, fuzzy
msgid "timeout"
msgstr "タイムアウト。"

#: xml/gcut-process.xml:548(para) xml/gcut-egg.xml:596(para)
msgid "the timeout period in milliseconds"
msgstr "タイムアウト時間（ミリ秒）"

#: xml/gcut-process.xml:556(para) xml/gcut-egg.xml:604(para)
msgid "an exit status of external process on success, otherwise -1."
msgstr "外部プロセスが終了した場合は終了ステータス。そうでない場合は-1。"

#: xml/gcut-process.xml:560(title)
msgid "gcut_process_kill ()"
msgstr ""

#: xml/gcut-process.xml:562(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_process_kill (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>,\n"
"                   <parameter><link linkend=\"gint\"><type>gint</type></link> signal_number</parameter>,\n"
"                   <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-process.xml:566(para) xml/gcut-egg.xml:615(para)
msgid "Sends <parameter>signal_number</parameter> signal to external process."
msgstr "外部プロセスに<parameter>signal_number</parameter>シグナルを送ります。"

#: xml/gcut-process.xml:579(para) xml/gcut-egg.xml:628(para)
msgid "signal_number"
msgstr ""

#: xml/gcut-process.xml:580(para) xml/gcut-egg.xml:629(para)
msgid "the signal number to be sent to external process"
msgstr "外部プロセスに送るシグナル番号。"

#: xml/gcut-process.xml:591(title)
msgid "gcut_process_write ()"
msgstr ""

#: xml/gcut-process.xml:593(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_process_write (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>,\n"
"                    <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *chunk</parameter>,\n"
"                    <parameter><link linkend=\"gsize\"><type>gsize</type></link> size</parameter>,\n"
"                    <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-process.xml:598(para) xml/gcut-egg.xml:513(para)
msgid ""
"Writes <parameter>chunk</parameter> to external process's standard input."
msgstr "外部プロセスの標準入力に<parameter>chunk</parameter>を書き込みます。"

#: xml/gcut-process.xml:611(para) xml/gcut-egg.xml:526(para)
msgid "chunk"
msgstr ""

#: xml/gcut-process.xml:612(para) xml/gcut-egg.xml:527(para)
msgid "the data to be wrote"
msgstr "書き込むデータ"

#: xml/gcut-process.xml:614(para) xml/gcut-egg.xml:529(para)
#: xml/cut-test-utils.xml:214(para) xml/cut-test-utils.xml:244(para)
#: xml/cut-test-utils.xml:568(para)
msgid "size"
msgstr ""

#: xml/gcut-process.xml:615(para) xml/gcut-egg.xml:530(para)
msgid "the size of <parameter>chunk</parameter>"
msgstr "<parameter>chunk</parameter>のサイズ"

#: xml/gcut-process.xml:627(title)
msgid "gcut_process_flush ()"
msgstr ""

#: xml/gcut-process.xml:629(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GIOStatus\"><returnvalue>GIOStatus</returnvalue></link>\n"
"gcut_process_flush (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>,\n"
"                    <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-process.xml:632(para)
msgid "Flush buffered external process's standard input."
msgstr "外部プロセスの標準出力から読み込んだデータ。"

#: xml/gcut-process.xml:650(para)
msgid ""
"the status of the operation: One of <link linkend=\"G-IO-STATUS-NORMAL:CAPS"
"\"><literal>G_IO_STATUS_NORMAL</literal></link>, <link linkend=\"G-IO-STATUS-"
"AGAIN:CAPS\"><literal>G_IO_STATUS_AGAIN</literal></link>, or <link linkend="
"\"G-IO-STATUS-ERROR:CAPS\"><literal>G_IO_STATUS_ERROR</literal></link>."
msgstr ""

#: xml/gcut-process.xml:655(title)
msgid "gcut_process_get_output_string ()"
msgstr ""

#: xml/gcut-process.xml:657(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GString\"><returnvalue>GString</returnvalue></link> *\n"
"gcut_process_get_output_string (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>);"
msgstr ""

#: xml/gcut-process.xml:673(para)
msgid ""
"a <link linkend=\"GString\"><type>GString</type></link> that has all result "
"of standard output of external process."
msgstr ""
"外部プロセスの標準出力の結果をすべて持った<link linkend=\"GString"
"\"><type>GString</type></link>。"

#: xml/gcut-process.xml:677(title)
msgid "gcut_process_get_error_string ()"
msgstr ""

#: xml/gcut-process.xml:679(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GString\"><returnvalue>GString</returnvalue></link> *\n"
"gcut_process_get_error_string (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>);"
msgstr ""

#: xml/gcut-process.xml:695(para)
msgid ""
"a <link linkend=\"GString\"><type>GString</type></link> that has all result "
"of standard error of external process."
msgstr ""
"外部プロセスの標準エラー出力の結果をすべて持った<link linkend=\"GString"
"\"><type>GString</type></link>。"

#: xml/gcut-process.xml:699(title)
msgid "gcut_process_get_input_channel ()"
msgstr ""

#: xml/gcut-process.xml:701(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GIOChannel\"><returnvalue>GIOChannel</returnvalue></link> *\n"
"gcut_process_get_input_channel (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>);"
msgstr ""

#: xml/gcut-process.xml:703(para) xml/gcut-egg.xml:640(para)
msgid ""
"Gets a <link linkend=\"GIOChannel\"><type>GIOChannel</type></link> connected "
"with standard input of external process."
msgstr ""
"外部プロセスの標準入力と結びついた<link linkend=\"GIOChannel"
"\"><type>GIOChannel</type></link>を取得します。"

#: xml/gcut-process.xml:719(para) xml/gcut-process.xml:743(para)
#: xml/gcut-process.xml:767(para) xml/gcut-egg.xml:656(para)
#: xml/gcut-egg.xml:682(para) xml/gcut-egg.xml:708(para)
msgid ""
"a <link linkend=\"GIOChannel\"><type>GIOChannel</type></link> if external "
"process is running, otherwise <link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>."
msgstr ""
"外部プロセスが実行中の場合は<link linkend=\"GIOChannel\"><type>GIOChannel</"
"type></link>。そうでない場合は<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>。"

#: xml/gcut-process.xml:723(title)
msgid "gcut_process_get_output_channel ()"
msgstr ""

#: xml/gcut-process.xml:725(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GIOChannel\"><returnvalue>GIOChannel</returnvalue></link> *\n"
"gcut_process_get_output_channel (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>);"
msgstr ""

#: xml/gcut-process.xml:727(para) xml/gcut-egg.xml:666(para)
msgid ""
"Gets a <link linkend=\"GIOChannel\"><type>GIOChannel</type></link> connected "
"with standard output of external process."
msgstr ""
"外部プロセスの標準出力と結びついた<link linkend=\"GIOChannel"
"\"><type>GIOChannel</type></link>を取得します。"

#: xml/gcut-process.xml:747(title)
msgid "gcut_process_get_error_channel ()"
msgstr ""

#: xml/gcut-process.xml:749(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GIOChannel\"><returnvalue>GIOChannel</returnvalue></link> *\n"
"gcut_process_get_error_channel (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>);"
msgstr ""

#: xml/gcut-process.xml:751(para) xml/gcut-egg.xml:692(para)
msgid ""
"Gets a <link linkend=\"GIOChannel\"><type>GIOChannel</type></link> connected "
"with standard error output of external process."
msgstr ""
"外部プロセスのエラー出力に結びついた<link linkend=\"GIOChannel"
"\"><type>GIOChannel</type></link>を返します。"

#: xml/gcut-process.xml:771(title)
msgid "gcut_process_get_output_stream ()"
msgstr ""

#: xml/gcut-process.xml:773(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GInputStream\"><returnvalue>GInputStream</returnvalue></link> *\n"
"gcut_process_get_output_stream (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>);"
msgstr ""

#: xml/gcut-process.xml:775(para)
msgid ""
"Gets a <link linkend=\"GInputStream\"><type>GInputStream</type></link> "
"connected with standard output of external process."
msgstr ""
"外部プロセスの標準出力と結びついた<link linkend=\"GInputStream"
"\"><type>GInputStream</type></link>を取得します。"

#: xml/gcut-process.xml:791(para) xml/gcut-process.xml:815(para)
msgid ""
"a <link linkend=\"GInputStream\"><type>GInputStream</type></link> if "
"external process is running, otherwise <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>."
msgstr ""
"外部プロセスが実行中の場合は<link linkend=\"GInputStream"
"\"><type>GInputStream</type></link>。そうでない場合は<link linkend=\"NULL:"
"CAPS\"><literal>NULL</literal></link>。"

#: xml/gcut-process.xml:795(title)
msgid "gcut_process_get_error_stream ()"
msgstr ""

#: xml/gcut-process.xml:797(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GInputStream\"><returnvalue>GInputStream</returnvalue></link> *\n"
"gcut_process_get_error_stream (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>);"
msgstr ""

#: xml/gcut-process.xml:799(para)
msgid ""
"Gets a <link linkend=\"GInputStream\"><type>GInputStream</type></link> "
"connected with standard error output of external process."
msgstr ""
"外部プロセスの標準エラー出力に結びついた<link linkend=\"GInputStream"
"\"><type>GInputStream</type></link>を返します。"

#: xml/gcut-process.xml:819(title)
msgid "gcut_process_get_forced_termination_wait_time ()"
msgstr ""

#: xml/gcut-process.xml:821(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_process_get_forced_termination_wait_time\n"
"                               (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>);"
msgstr ""

#: xml/gcut-process.xml:824(para) xml/gcut-egg.xml:719(para)
msgid "Gets a wait time in milliseconds for forced termination on dispose."
msgstr ""
"オブジェクトが破棄されるときに行われる外部コマンド強制終了後に待つ時間（ミリ"
"秒）を取得します。"

#: xml/gcut-process.xml:840(para) xml/gcut-egg.xml:735(para)
msgid ""
"a timeout value for waiting forced terminated external command on dispose."
msgstr "破棄時の強制終了待ちの時間。"

#: xml/gcut-process.xml:844(title)
msgid "gcut_process_set_forced_termination_wait_time ()"
msgstr ""

#: xml/gcut-process.xml:846(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_process_set_forced_termination_wait_time\n"
"                               (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>,\n"
"                                <parameter><link linkend=\"guint\"><type>guint</type></link> timeout</parameter>);"
msgstr ""

#: xml/gcut-process.xml:850(para) xml/gcut-egg.xml:747(para)
msgid ""
"Sets a wait time in milliseconds for forced termination on dispose. If "
"<parameter>timeout</parameter> is 0, it doesn't wait termination of external "
"process. The default value is 10."
msgstr ""
"オブジェクトが破棄されるときに行われる外部コマンド強制終了時に待つ時間（ミリ"
"秒）を設定します。<parameter>timeout</parameter>が0なら外部コマンドの終了を待"
"ちません。デフォルト値は10です。"

#: xml/gcut-process.xml:866(para) xml/gcut-egg.xml:763(para)
msgid "the timeout value in milliseconds"
msgstr "タイムアウト時間（ミリ秒）"

#: xml/gcut-process.xml:871(title)
msgid "gcut_process_get_event_loop ()"
msgstr ""

#: xml/gcut-process.xml:873(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"GCutEventLoop\"><returnvalue>GCutEventLoop</returnvalue></link> *\n"
"gcut_process_get_event_loop (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>);"
msgstr "<link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link>はイベントループをカプセル化します。イベントループは<link linkend=\"GCutProcess\"><type>GCutProcess</type></link>で使われています。GCutProcessはデフォルトではGLibのデフォルトGMainContextを使います。"

#: xml/gcut-process.xml:875(para)
#, fuzzy
msgid "Gets a event loop using by the <parameter>process</parameter> ."
msgstr "<parameter>process</parameter>が使っているイベントループを取得します。"

#: xml/gcut-process.xml:891(para) xml/gcut-event-loop.xml:112(para)
#: xml/gcut-event-loop.xml:137(para) xml/gcut-event-loop.xml:163(para)
#: xml/gcut-event-loop.xml:193(para) xml/gcut-event-loop.xml:235(para)
#: xml/gcut-event-loop.xml:277(para) xml/gcut-event-loop.xml:320(para)
#: xml/gcut-event-loop.xml:361(para) xml/gcut-event-loop.xml:404(para)
#: xml/gcut-event-loop.xml:440(para) xml/gcut-event-loop.xml:477(para)
msgid "a <link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link>."
msgstr "<link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link>。"

#: xml/gcut-process.xml:894(title)
msgid "gcut_process_set_event_loop ()"
msgstr ""

#: xml/gcut-process.xml:896(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_process_set_event_loop (<parameter><link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process</parameter>,\n"
"                             <parameter><link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> *loop</parameter>);"
msgstr ""

#: xml/gcut-process.xml:899(para)
#, fuzzy
msgid ""
"Sets a event loop for the <parameter>process</parameter> . If "
"<parameter>loop</parameter> is <link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>, the default GLib event loop will be used."
msgstr ""
"<parameter>process</parameter>のイベントループを設定します。<parameter>loop</"
"parameter>が<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>なら、"
"デフォルトのGLibイベントループが使われます。"

#: xml/gcut-process.xml:914(para) xml/gcut-event-loop.xml:111(para)
#: xml/gcut-event-loop.xml:136(para) xml/gcut-event-loop.xml:162(para)
#: xml/gcut-event-loop.xml:192(para) xml/gcut-event-loop.xml:234(para)
#: xml/gcut-event-loop.xml:276(para) xml/gcut-event-loop.xml:319(para)
#: xml/gcut-event-loop.xml:360(para) xml/gcut-event-loop.xml:403(para)
#: xml/gcut-event-loop.xml:439(para) xml/gcut-event-loop.xml:476(para)
msgid "loop"
msgstr ""

#: xml/gcut-process.xml:915(para)
msgid ""
"the event loop or <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>"
msgstr ""
"イベントループまたは<link linkend=\"NULL:CAPS\"><literal>NULL</literal></"
"link>。"

#: xml/gcut-process.xml:926(programlisting)
#, no-wrap
msgid "#define GCUT_PROCESS_ERROR           (gcut_process_error_quark())\n"
msgstr ""

#: xml/gcut-process.xml:932(title)
msgid "enum GCutProcessError"
msgstr ""

#: xml/gcut-process.xml:934(para)
msgid ""
"Error codes returned by <link linkend=\"GCutProcess\"><type>GCutProcess</"
"type></link> related operations."
msgstr ""
"<link linkend=\"GCutProcess\"><type>GCutProcess</type></link>関連の操作で返さ"
"れるエラーコード。"

#: xml/gcut-process.xml:936(title) xml/gcut-enum.xml:261(title)
#: xml/gcut-egg.xml:787(title) xml/cut-logger.xml:495(title)
#: xml/cut-logger.xml:553(title) xml/cut-logger.xml:607(title)
#: xml/cut-logger.xml:650(title) xml/cut-logger.xml:673(title)
msgid "Members"
msgstr ""

#: xml/gcut-process.xml:943(para)
msgid "GCUT_PROCESS_ERROR_COMMAND_LINE"
msgstr ""

#: xml/gcut-process.xml:944(para) xml/gcut-egg.xml:795(para)
msgid "Command line related error."
msgstr "コマンドライン関連のエラー。"

#: xml/gcut-process.xml:948(para)
msgid "GCUT_PROCESS_ERROR_IO_ERROR"
msgstr ""

#: xml/gcut-process.xml:949(para) xml/gcut-egg.xml:800(para)
msgid "IO error."
msgstr "入出力エラー。"

#: xml/gcut-process.xml:953(para)
msgid "GCUT_PROCESS_ERROR_ALREADY_RUNNING"
msgstr ""

#: xml/gcut-process.xml:954(para) xml/gcut-egg.xml:805(para)
msgid "External command is already running."
msgstr "外部コマンドはすでに実行されています。"

#: xml/gcut-process.xml:958(para)
msgid "GCUT_PROCESS_ERROR_NOT_RUNNING"
msgstr ""

#: xml/gcut-process.xml:959(para) xml/gcut-egg.xml:810(para)
msgid "External command isn't running."
msgstr "外部こもアンドが実行されていません。"

#: xml/gcut-process.xml:963(para)
msgid "GCUT_PROCESS_ERROR_INVALID_OBJECT"
msgstr ""

#: xml/gcut-process.xml:964(para)
msgid ""
"Invalid <link linkend=\"GCutProcess\"><type>GCutProcess</type></link> object "
"is passed."
msgstr ""
"不正な<link linkend=\"GCutProcess\"><type>GCutProcess</type></link>オブジェク"
"トが渡されました。"

#: xml/gcut-process.xml:968(para)
msgid "GCUT_PROCESS_ERROR_INVALID_SIGNAL"
msgstr ""

#: xml/gcut-process.xml:969(para)
msgid "Invalid signal is passed."
msgstr "不正なシグナルが渡されました。"

#: xml/gcut-process.xml:973(para)
msgid "GCUT_PROCESS_ERROR_PERMISSION_DENIED"
msgstr ""

#: xml/gcut-process.xml:974(para)
msgid "Permission denied."
msgstr "許可がありません。"

#: xml/gcut-process.xml:978(para)
msgid "GCUT_PROCESS_ERROR_TIMEOUT"
msgstr ""

#: xml/gcut-process.xml:979(para) xml/gcut-egg.xml:820(para)
msgid "Timeout."
msgstr "タイムアウト。"

#: xml/gcut-process.xml:989(title) xml/gcut-egg.xml:830(title)
#, fuzzy
msgid "The <literal>“command”</literal> property"
msgstr "<literal>\"command\"</literal>プロパティ"

#: xml/gcut-process.xml:990(primary) xml/api-index-full.xml:193(link)
msgid "GCutProcess:command"
msgstr ""

#: xml/gcut-process.xml:991(programlisting)
#: xml/gcut-egg.xml:832(programlisting)
#, fuzzy, no-wrap
msgid "  “command”                  <link linkend=\"gpointer\"><type>gpointer</type></link>"
msgstr "最初の<link linkend=\"gpointer\"><type>gpointer</type></link>。"

#: xml/gcut-process.xml:992(para)
msgid "The command to be ran by the process."
msgstr "このプロセスが実行する外部コマンド。"

#: xml/gcut-process.xml:997(title) xml/gcut-egg.xml:838(title)
msgid "Signal Details"
msgstr "シグナル詳細"

#: xml/gcut-process.xml:998(title) xml/gcut-egg.xml:839(title)
#, fuzzy
msgid "The <literal>“error”</literal> signal"
msgstr "<literal>\"error\"</literal>シグナル"

#: xml/gcut-process.xml:999(primary) xml/api-index-full.xml:189(link)
#: xml/api-index-1.1.5.xml:14(link)
msgid "GCutProcess::error"
msgstr ""

#: xml/gcut-process.xml:1000(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"user_function (<link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process,\n"
"               <link linkend=\"gpointer\"><type>gpointer</type></link>     error,\n"
"               <link linkend=\"gpointer\"><type>gpointer</type></link>     user_data)"
msgstr ""

#: xml/gcut-process.xml:1004(para) xml/gcut-process.xml:1012(para)
#: xml/gcut-process.xml:1020(para) xml/gcut-process.xml:1027(para)
#: xml/gcut-egg.xml:845(para) xml/gcut-egg.xml:853(para)
#: xml/gcut-egg.xml:861(para) xml/gcut-egg.xml:868(para)
msgid "Flags: <link linkend=\"G-SIGNAL-RUN-LAST:CAPS\">Run Last</link>"
msgstr ""

#: xml/gcut-process.xml:1005(title) xml/gcut-egg.xml:846(title)
#, fuzzy
msgid "The <literal>“error-received”</literal> signal"
msgstr "<literal>\"error-received\"</literal>シグナル"

#: xml/gcut-process.xml:1006(primary) xml/api-index-full.xml:190(link)
#: xml/api-index-1.1.5.xml:15(link)
msgid "GCutProcess::error-received"
msgstr ""

#: xml/gcut-process.xml:1007(programlisting)
#: xml/gcut-process.xml:1015(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"user_function (<link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process,\n"
"               <link linkend=\"gchar\"><type>gchar</type></link>       *chunk,\n"
"               <link linkend=\"guint64\"><type>guint64</type></link>      size,\n"
"               <link linkend=\"gpointer\"><type>gpointer</type></link>     user_data)"
msgstr ""

#: xml/gcut-process.xml:1013(title) xml/gcut-egg.xml:854(title)
#, fuzzy
msgid "The <literal>“output-received”</literal> signal"
msgstr "<literal>\"output-received\"</literal>シグナル"

#: xml/gcut-process.xml:1014(primary) xml/api-index-full.xml:191(link)
#: xml/api-index-1.1.5.xml:16(link)
msgid "GCutProcess::output-received"
msgstr ""

#: xml/gcut-process.xml:1021(title) xml/gcut-egg.xml:862(title)
#, fuzzy
msgid "The <literal>“reaped”</literal> signal"
msgstr "<literal>\"reaped\"</literal>シグナル"

#: xml/gcut-process.xml:1022(primary) xml/api-index-full.xml:192(link)
#: xml/api-index-1.1.5.xml:17(link)
msgid "GCutProcess::reaped"
msgstr ""

#: xml/gcut-process.xml:1023(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"user_function (<link linkend=\"GCutProcess\"><type>GCutProcess</type></link> *process,\n"
"               <link linkend=\"gint\"><type>gint</type></link>         status,\n"
"               <link linkend=\"gpointer\"><type>gpointer</type></link>     user_data)"
msgstr ""

#: xml/gcut-object.xml:7(refentrytitle) xml/gcut-object.xml:12(refname)
#: xml/api-index-full.xml:378(link) xml/api-index-full.xml:379(link)
#: xml/api-index-full.xml:380(link) xml/api-index-1.0.5.xml:47(link)
#: xml/api-index-1.0.5.xml:48(link) xml/api-index-1.0.5.xml:49(link)
msgid "Assertion Utilities for GObject"
msgstr "GObject用の検証ユーティリティ"

#: xml/gcut-object.xml:13(refpurpose)
msgid ""
"Utilities to write assertions related to <link linkend=\"GObject"
"\"><placeholder-1/></link> more easily."
msgstr ""
"<link linkend=\"GObject\"><placeholder-1/></link>に関する検証をもっと簡単に書"
"くためのユーティリティ。"

#: xml/gcut-object.xml:25(link) xml/gcut-object.xml:49(primary)
#: xml/api-index-full.xml:378(link) xml/api-index-1.0.5.xml:47(link)
msgid "gcut_object_equal"
msgstr ""

#: xml/gcut-object.xml:27(link) xml/gcut-object.xml:94(primary)
#: xml/api-index-full.xml:379(link) xml/api-index-1.0.5.xml:48(link)
msgid "gcut_object_inspect"
msgstr ""

#: xml/gcut-object.xml:29(link) xml/gcut-object.xml:119(primary)
#: xml/api-index-full.xml:380(link) xml/api-index-1.0.5.xml:49(link)
msgid "gcut_object_inspect_custom"
msgstr ""

#: xml/gcut-object.xml:41(para)
msgid ""
"The utilities help you to write assertions that are related to <link linkend="
"\"GObject\"><type>GObject</type></link>."
msgstr ""
"このユーティリティは<link linkend=\"GObject\"><type>GObject</type></link>に関"
"する検証の作成を補助します。"

#: xml/gcut-object.xml:48(title)
msgid "gcut_object_equal ()"
msgstr ""

#: xml/gcut-object.xml:50(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_object_equal (<parameter>const <link linkend=\"GObject\"><type>GObject</type></link> *object1</parameter>,\n"
"                   <parameter>const <link linkend=\"GObject\"><type>GObject</type></link> *object2</parameter>,\n"
"                   <parameter><link linkend=\"GEqualFunc\"><type>GEqualFunc</type></link> equal_func</parameter>);"
msgstr ""

#: xml/gcut-object.xml:54(para)
#, fuzzy
msgid ""
"Compares two <link linkend=\"GObject\"><type>GObject</type></link>, "
"<parameter>object1</parameter> and <parameter>object2</parameter> by "
"<parameter>equal_func</parameter> . If <parameter>equal_func</parameter> is "
"NULL, <parameter>object1</parameter> and <parameter>object2</parameter> is "
"just only compared by memory location."
msgstr ""
"ふたつの<link linkend=\"GObject\"><type>GObject</type></link>、"
"<parameter>object1</parameter>と<parameter>object2</parameter>を"
"<parameter>equal_func</parameter>で比較します。<parameter>equal_func</"
"parameter>がNULLの場合は<parameter>object1</parameter>と<parameter>object2</"
"parameter>は単にメモリの位置だけで比較します。"

#: xml/gcut-object.xml:71(para)
msgid "object1"
msgstr ""

#: xml/gcut-object.xml:72(para) xml/gcut-object.xml:75(para)
msgid "a <link linkend=\"GObject\"><type>GObject</type></link> to be compared."
msgstr "比較する<link linkend=\"GObject\"><type>GObject</type></link>。"

#: xml/gcut-object.xml:74(para)
msgid "object2"
msgstr ""

#: xml/gcut-object.xml:78(para)
msgid ""
"a function that compares two <link linkend=\"GObject\"><type>GObject</type></"
"link>. NULL is OK."
msgstr ""
"ふたつの<link linkend=\"GObject\"><type>GObject</type></link>を比較する関数。"
"NULLも可。"

#: xml/gcut-object.xml:84(para)
#, fuzzy
msgid ""
"TRUE if <parameter>object1</parameter> == <parameter>object2</parameter> or "
"<parameter>equal_func</parameter> (<parameter>object1</parameter> , "
"<parameter>object2</parameter> ), FALSE otherwise."
msgstr ""
"<parameter>object1</parameter> == <parameter>object2</parameter>あるいは"
"<parameter>equal_func</parameter>(<parameter>object1</parameter>, "
"<parameter>object2</parameter>)がTRUEならTRUE、そうでない場合はFALSE。"

#: xml/gcut-object.xml:93(title)
msgid "gcut_object_inspect ()"
msgstr ""

#: xml/gcut-object.xml:95(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_object_inspect (<parameter>const <link linkend=\"GObject\"><type>GObject</type></link> *object</parameter>);"
msgstr "詳細を示す<link linkend=\"GObject\"><type>GObject</type></link>の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-object.xml:97(para)
#, fuzzy
msgid ""
"Inspects <parameter>object</parameter> 's property. The returned string "
"should be freed when no longer needed."
msgstr ""
"<parameter>object</parameter>のプロパティの詳細を返します。返された文字列が必"
"要なくなったときは開放してください。"

#: xml/gcut-object.xml:109(para) xml/gcut-object.xml:137(para)
msgid "a <link linkend=\"GObject\"><type>GObject</type></link>."
msgstr "<link linkend=\"GObject\"><type>GObject</type></link>。"

#: xml/gcut-object.xml:114(para) xml/gcut-object.xml:149(para)
msgid "inspected <parameter>object</parameter> as a string."
msgstr "<parameter>object</parameter>の詳細を示した文字列。"

#: xml/gcut-object.xml:118(title)
msgid "gcut_object_inspect_custom ()"
msgstr ""

#: xml/gcut-object.xml:120(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_object_inspect_custom (<parameter>const <link linkend=\"GObject\"><type>GObject</type></link> *object</parameter>,\n"
"                            <parameter><link linkend=\"GCutInspectFunction\"><type>GCutInspectFunction</type></link> inspect_func</parameter>,\n"
"                            <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-object.xml:124(para)
#, fuzzy
msgid ""
"Inspects <parameter>object</parameter> by <parameter>inspect_func</"
"parameter> . The returned string should be freed when no longer needed."
msgstr ""
"<parameter>object</parameter>を<parameter>inspect_func</parameter>で詳細を示"
"します。返された文字列が必要なくなったときは開放してください。"

#: xml/gcut-object.xml:139(para) xml/gcut-list.xml:146(para)
msgid "inspect_func"
msgstr ""

#: xml/gcut-object.xml:140(para)
#, fuzzy
msgid "a function that inspects <parameter>object</parameter> ."
msgstr "<parameter>object</parameter>の詳細を示す関数。"

#: xml/gcut-main.xml:7(refentrytitle) xml/gcut-main.xml:12(refname)
#: xml/api-index-full.xml:333(link) xml/api-index-full.xml:410(link)
#: xml/api-index-full.xml:442(link) xml/api-index-full.xml:443(link)
msgid "gcut-main"
msgstr ""

#: xml/gcut-main.xml:24(link) xml/gcut-main.xml:48(primary)
#: xml/api-index-full.xml:333(link)
msgid "gcut_init"
msgstr ""

#: xml/gcut-main.xml:26(link) xml/gcut-main.xml:56(primary)
#: xml/api-index-full.xml:442(link)
msgid "gcut_value_equal_init"
msgstr ""

#: xml/gcut-main.xml:28(link) xml/gcut-main.xml:64(primary)
#: xml/api-index-full.xml:410(link)
msgid "gcut_quit"
msgstr ""

#: xml/gcut-main.xml:30(link) xml/gcut-main.xml:72(primary)
#: xml/api-index-full.xml:443(link)
msgid "gcut_value_equal_quit"
msgstr ""

#: xml/gcut-main.xml:47(title)
msgid "gcut_init ()"
msgstr ""

#: xml/gcut-main.xml:49(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_init (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/gcut-main.xml:55(title)
msgid "gcut_value_equal_init ()"
msgstr ""

#: xml/gcut-main.xml:57(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_value_equal_init (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/gcut-main.xml:63(title)
msgid "gcut_quit ()"
msgstr ""

#: xml/gcut-main.xml:65(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_quit (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/gcut-main.xml:71(title)
msgid "gcut_value_equal_quit ()"
msgstr ""

#: xml/gcut-main.xml:73(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_value_equal_quit (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/gcut-list.xml:7(refentrytitle) xml/gcut-list.xml:12(refname)
#: xml/api-index-full.xml:351(link) xml/api-index-full.xml:352(link)
#: xml/api-index-full.xml:353(link) xml/api-index-full.xml:354(link)
#: xml/api-index-full.xml:355(link) xml/api-index-full.xml:356(link)
#: xml/api-index-full.xml:357(link) xml/api-index-full.xml:358(link)
#: xml/api-index-full.xml:359(link) xml/api-index-full.xml:360(link)
#: xml/api-index-full.xml:361(link) xml/api-index-full.xml:362(link)
#: xml/api-index-full.xml:363(link) xml/api-index-full.xml:364(link)
#: xml/api-index-full.xml:365(link) xml/api-index-full.xml:369(link)
#: xml/api-index-full.xml:370(link) xml/api-index-full.xml:372(link)
#: xml/api-index-full.xml:375(link) xml/api-index-full.xml:376(link)
#: xml/api-index-deprecated.xml:51(link) xml/api-index-deprecated.xml:52(link)
#: xml/api-index-deprecated.xml:53(link) xml/api-index-deprecated.xml:54(link)
#: xml/api-index-deprecated.xml:55(link) xml/api-index-deprecated.xml:56(link)
#: xml/api-index-deprecated.xml:57(link) xml/api-index-deprecated.xml:58(link)
#: xml/api-index-deprecated.xml:59(link) xml/api-index-1.0.6.xml:60(link)
#: xml/api-index-1.0.6.xml:61(link) xml/api-index-1.0.6.xml:62(link)
#: xml/api-index-1.0.6.xml:63(link) xml/api-index-1.0.6.xml:64(link)
#: xml/api-index-1.0.6.xml:65(link) xml/api-index-1.0.6.xml:66(link)
#: xml/api-index-1.0.6.xml:67(link) xml/api-index-1.0.6.xml:68(link)
#: xml/api-index-1.0.5.xml:36(link) xml/api-index-1.0.5.xml:37(link)
#: xml/api-index-1.0.5.xml:38(link) xml/api-index-1.0.5.xml:39(link)
#: xml/api-index-1.0.5.xml:40(link) xml/api-index-1.0.5.xml:41(link)
#: xml/api-index-1.0.5.xml:42(link) xml/api-index-1.0.5.xml:43(link)
#: xml/api-index-1.0.5.xml:44(link) xml/api-index-1.0.5.xml:45(link)
#: xml/api-index-1.0.5.xml:46(link)
msgid "Assertion Utilities for GList"
msgstr "GList用の検証ユーティリティ"

#: xml/gcut-list.xml:13(refpurpose)
msgid ""
"Utilities to write assertions related to <link linkend=\"GList"
"\"><placeholder-1/></link> more easily."
msgstr ""
"<link linkend=\"GList\"><placeholder-1/></link>に関する検証をもっと簡単に書く"
"ためのユーティリティ。"

#: xml/gcut-list.xml:25(link) xml/gcut-list.xml:74(primary)
#: xml/api-index-full.xml:352(link) xml/api-index-1.0.5.xml:37(link)
msgid "gcut_list_equal"
msgstr ""

#: xml/gcut-list.xml:27(link) xml/gcut-list.xml:119(primary)
#: xml/api-index-full.xml:357(link) xml/api-index-1.0.5.xml:39(link)
msgid "gcut_list_inspect"
msgstr ""

#: xml/gcut-list.xml:29(link) xml/gcut-list.xml:160(primary)
#: xml/api-index-full.xml:353(link) xml/api-index-1.0.6.xml:60(link)
msgid "gcut_list_equal_int"
msgstr ""

#: xml/gcut-list.xml:31(link) xml/gcut-list.xml:194(primary)
#: xml/api-index-full.xml:360(link) xml/api-index-1.0.6.xml:65(link)
msgid "gcut_list_inspect_int"
msgstr ""

#: xml/gcut-list.xml:33(link) xml/gcut-list.xml:220(primary)
#: xml/api-index-full.xml:355(link) xml/api-index-1.0.6.xml:62(link)
msgid "gcut_list_equal_uint"
msgstr ""

#: xml/gcut-list.xml:35(link) xml/gcut-list.xml:254(primary)
#: xml/api-index-full.xml:363(link) xml/api-index-1.0.6.xml:68(link)
msgid "gcut_list_inspect_uint"
msgstr ""

#: xml/gcut-list.xml:37(link) xml/gcut-list.xml:280(primary)
#: xml/api-index-full.xml:354(link) xml/api-index-1.0.6.xml:61(link)
msgid "gcut_list_equal_string"
msgstr ""

#: xml/gcut-list.xml:39(link) xml/gcut-list.xml:314(primary)
#: xml/api-index-full.xml:362(link) xml/api-index-1.0.6.xml:67(link)
msgid "gcut_list_inspect_string"
msgstr ""

#: xml/gcut-list.xml:41(link) xml/gcut-list.xml:340(primary)
#: xml/api-index-full.xml:361(link) xml/api-index-1.0.6.xml:66(link)
msgid "gcut_list_inspect_object"
msgstr ""

#: xml/gcut-list.xml:43(link) xml/gcut-list.xml:366(primary)
#: xml/api-index-full.xml:358(link) xml/api-index-1.0.6.xml:63(link)
msgid "gcut_list_inspect_enum"
msgstr ""

#: xml/gcut-list.xml:45(link) xml/gcut-list.xml:397(primary)
#: xml/api-index-full.xml:359(link) xml/api-index-1.0.6.xml:64(link)
msgid "gcut_list_inspect_flags"
msgstr ""

#: xml/gcut-list.xml:46(link) xml/gcut-list.xml:428(primary)
#: xml/api-index-full.xml:364(link) xml/api-index-deprecated.xml:53(link)
#: xml/api-index-1.0.5.xml:40(link)
msgid "gcut_list_int_equal"
msgstr ""

#: xml/gcut-list.xml:47(link) xml/gcut-list.xml:462(primary)
#: xml/api-index-full.xml:365(link) xml/api-index-deprecated.xml:54(link)
#: xml/api-index-1.0.5.xml:41(link)
msgid "gcut_list_int_inspect"
msgstr ""

#: xml/gcut-list.xml:48(link) xml/gcut-list.xml:489(primary)
#: xml/api-index-full.xml:375(link) xml/api-index-deprecated.xml:58(link)
#: xml/api-index-1.0.5.xml:45(link)
msgid "gcut_list_uint_equal"
msgstr ""

#: xml/gcut-list.xml:49(link) xml/gcut-list.xml:523(primary)
#: xml/api-index-full.xml:376(link) xml/api-index-deprecated.xml:59(link)
#: xml/api-index-1.0.5.xml:46(link)
msgid "gcut_list_uint_inspect"
msgstr ""

#: xml/gcut-list.xml:50(link) xml/gcut-list.xml:550(primary)
#: xml/api-index-full.xml:370(link) xml/api-index-deprecated.xml:56(link)
#: xml/api-index-1.0.5.xml:43(link)
msgid "gcut_list_string_equal"
msgstr ""

#: xml/gcut-list.xml:51(link) xml/gcut-list.xml:584(primary)
#: xml/api-index-full.xml:372(link) xml/api-index-deprecated.xml:57(link)
#: xml/api-index-1.0.5.xml:44(link)
msgid "gcut_list_string_inspect"
msgstr ""

#: xml/gcut-list.xml:52(link) xml/gcut-list.xml:611(primary)
#: xml/api-index-full.xml:369(link) xml/api-index-deprecated.xml:55(link)
#: xml/api-index-1.0.5.xml:42(link)
msgid "gcut_list_object_inspect"
msgstr ""

#: xml/gcut-list.xml:53(link) xml/gcut-list.xml:638(primary)
#: xml/api-index-full.xml:351(link) xml/api-index-deprecated.xml:51(link)
#: xml/api-index-1.0.5.xml:36(link)
msgid "gcut_list_enum_inspect"
msgstr ""

#: xml/gcut-list.xml:54(link) xml/gcut-list.xml:669(primary)
#: xml/api-index-full.xml:356(link) xml/api-index-deprecated.xml:52(link)
#: xml/api-index-1.0.5.xml:38(link)
msgid "gcut_list_flags_inspect"
msgstr ""

#: xml/gcut-list.xml:66(para)
msgid ""
"The utilities help you to write assertions that are related to <link linkend="
"\"GList\"><type>GList</type></link>."
msgstr ""
"このユーティリティは<link linkend=\"GList\"><type>GList</type></link>に関する"
"検証の作成を補助します。"

#: xml/gcut-list.xml:73(title)
msgid "gcut_list_equal ()"
msgstr ""

#: xml/gcut-list.xml:75(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_list_equal (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *list1</parameter>,\n"
"                 <parameter>const <link linkend=\"GList\"><type>GList</type></link> *list2</parameter>,\n"
"                 <parameter><link linkend=\"GEqualFunc\"><type>GEqualFunc</type></link> equal_func</parameter>);"
msgstr ""

#: xml/gcut-list.xml:79(para)
#, fuzzy
msgid ""
"Compares two <link linkend=\"GList\"><type>GList</type></link>, "
"<parameter>list1</parameter> and <parameter>list2</parameter> . "
"<parameter>equal_func</parameter> is called for each corresponding values of "
"<parameter>list1</parameter> and <parameter>list2</parameter> ."
msgstr ""
"ふたつの<link linkend=\"GList\"><type>GList</type></link>、<parameter>list1</"
"parameter>と<parameter>list2</parameter>を比較します。<parameter>equal_func</"
"parameter>は<parameter>list1</parameter>と<parameter>list2</parameter>の対応"
"する値それぞれに対して呼ばれます。"

#: xml/gcut-list.xml:99(para) xml/gcut-list.xml:178(para)
#: xml/gcut-list.xml:238(para) xml/gcut-list.xml:298(para)
#: xml/gcut-list.xml:446(para) xml/gcut-list.xml:507(para)
#: xml/gcut-list.xml:568(para)
msgid "list1"
msgstr ""

#: xml/gcut-list.xml:100(para) xml/gcut-list.xml:103(para)
msgid "a <link linkend=\"GList\"><type>GList</type></link> to be compared."
msgstr "比較する<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-list.xml:102(para) xml/gcut-list.xml:181(para)
#: xml/gcut-list.xml:241(para) xml/gcut-list.xml:301(para)
#: xml/gcut-list.xml:449(para) xml/gcut-list.xml:510(para)
#: xml/gcut-list.xml:571(para)
msgid "list2"
msgstr ""

#: xml/gcut-list.xml:106(para) xml/gcut-hash-table.xml:88(para)
msgid "a function that compares two values."
msgstr "ふたつの値を比較する関数。"

#: xml/gcut-list.xml:111(para)
#, fuzzy
msgid ""
"TRUE if all corresponding values of <parameter>list1</parameter> and "
"<parameter>list2</parameter> are reported TRUE by <parameter>equal_func</"
"parameter> , FALSE otherwise."
msgstr ""
"<parameter>list1</parameter>と<parameter>list2</parameter>のすべての対応する"
"値が<parameter>equal_func</parameter>でTRUEの場合はTRUE、そうでない場合は"
"FALSE。"

#: xml/gcut-list.xml:118(title)
msgid "gcut_list_inspect ()"
msgstr ""

#: xml/gcut-list.xml:120(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_list_inspect (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *list</parameter>,\n"
"                   <parameter><link linkend=\"GCutInspectFunction\"><type>GCutInspectFunction</type></link> inspect_func</parameter>,\n"
"                   <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-list.xml:124(para)
#, fuzzy
msgid ""
"Inspects <parameter>list</parameter> . Each value of <parameter>list</"
"parameter> is inspected by <parameter>inspect_func</parameter> . The "
"returned string should be freed when no longer needed."
msgstr ""
"<parameter>list</parameter>の詳細を返します。<parameter>list</parameter>のそ"
"れぞれの値は<parameter>inspect_func</parameter>で詳細化されます。返された文字"
"列が必要なくなったときは開放してください。"

#: xml/gcut-list.xml:144(para)
msgid "a <link linkend=\"GList\"><type>GList</type></link> to be inspected."
msgstr "詳細を示す<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-list.xml:147(para) xml/gcut-hash-table.xml:137(para)
#: xml/gcut-hash-table.xml:192(para)
msgid "a function that inspects each value."
msgstr "各値の詳細を示す関数。"

#: xml/gcut-list.xml:155(para) xml/gcut-list.xml:215(para)
#: xml/gcut-list.xml:275(para) xml/gcut-list.xml:335(para)
#: xml/gcut-list.xml:361(para) xml/gcut-list.xml:392(para)
#: xml/gcut-list.xml:423(para) xml/gcut-list.xml:484(para)
#: xml/gcut-list.xml:545(para) xml/gcut-list.xml:606(para)
#: xml/gcut-list.xml:633(para) xml/gcut-list.xml:664(para)
#: xml/gcut-list.xml:695(para)
msgid "inspected <parameter>list</parameter> as a string."
msgstr "<parameter>list</parameter>の詳細を示した文字列。"

#: xml/gcut-list.xml:159(title)
msgid "gcut_list_equal_int ()"
msgstr ""

#: xml/gcut-list.xml:161(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_list_equal_int (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *list1</parameter>,\n"
"                     <parameter>const <link linkend=\"GList\"><type>GList</type></link> *list2</parameter>);"
msgstr ""

#: xml/gcut-list.xml:164(para) xml/gcut-list.xml:432(para)
#, fuzzy
msgid ""
"Compares two <link linkend=\"GList\"><type>GList</type></link>, "
"<parameter>list1</parameter> and <parameter>list2</parameter> . "
"<parameter>list1</parameter> and <parameter>list2</parameter> should be "
"<link linkend=\"GList\"><type>GList</type></link> of <link linkend=\"gint"
"\"><type>gint</type></link>."
msgstr ""
"ふたつの<link linkend=\"GList\"><type>GList</type></link>、<parameter>list1</"
"parameter>と<parameter>list2</parameter>を比較します。<parameter>list1</"
"parameter>と<parameter>list2</parameter>は<link linkend=\"gint\"><type>gint</"
"type></link>の<link linkend=\"GList\"><type>GList</type></link>でなければいけ"
"ません。"

#: xml/gcut-list.xml:179(para) xml/gcut-list.xml:182(para)
#: xml/gcut-list.xml:447(para) xml/gcut-list.xml:450(para)
msgid ""
"a <link linkend=\"GList\"><type>GList</type></link> of <link linkend=\"gint"
"\"><type>gint</type></link> to be compared."
msgstr ""
"比較する<link linkend=\"gint\"><type>gint</type></link>の<link linkend="
"\"GList\"><type>GList</type></link>。"

#: xml/gcut-list.xml:187(para) xml/gcut-list.xml:455(para)
msgid ""
"TRUE if all corresponding integers of <parameter>list1</parameter> and "
"<parameter>list2</parameter> are same value, FALSE otherwise."
msgstr ""
"<parameter>list1</parameter>と<parameter>list2</parameter>の対応するすべての"
"値が同じ場合はTRUE、そうでない場合はFALSE。"

#: xml/gcut-list.xml:193(title)
msgid "gcut_list_inspect_int ()"
msgstr ""

#: xml/gcut-list.xml:195(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_list_inspect_int (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *list</parameter>);"
msgstr ""

#: xml/gcut-list.xml:197(para) xml/gcut-list.xml:466(para)
#, fuzzy
msgid ""
"Inspects <parameter>list</parameter> . <parameter>list</parameter> should be "
"<link linkend=\"GList\"><type>GList</type></link> of <link linkend=\"gint"
"\"><type>gint</type></link>. The returned string should be freed when no "
"longer needed."
msgstr ""
"<parameter>list</parameter>の詳細を返します。<parameter>list</parameter>は"
"<link linkend=\"gint\"><type>gint</type></link>の<link linkend=\"GList"
"\"><type>GList</type></link>でなければいけません。返された文字列が必要なく"
"なったときは開放してください。"

#: xml/gcut-list.xml:210(para) xml/gcut-list.xml:479(para)
msgid ""
"a <link linkend=\"GList\"><type>GList</type></link> of <link linkend=\"gint"
"\"><type>gint</type></link> to be inspected."
msgstr ""
"詳細を示す<link linkend=\"gint\"><type>gint</type></link>の<link linkend="
"\"GList\"><type>GList</type></link>。"

#: xml/gcut-list.xml:219(title)
msgid "gcut_list_equal_uint ()"
msgstr ""

#: xml/gcut-list.xml:221(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_list_equal_uint (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *list1</parameter>,\n"
"                      <parameter>const <link linkend=\"GList\"><type>GList</type></link> *list2</parameter>);"
msgstr ""

#: xml/gcut-list.xml:224(para) xml/gcut-list.xml:493(para)
#, fuzzy
msgid ""
"Compares two <link linkend=\"GList\"><type>GList</type></link>, "
"<parameter>list1</parameter> and <parameter>list2</parameter> . "
"<parameter>list1</parameter> and <parameter>list2</parameter> should be "
"<link linkend=\"GList\"><type>GList</type></link> of <link linkend=\"guint"
"\"><type>guint</type></link>."
msgstr ""
"ふたつの<link linkend=\"GList\"><type>GList</type></link>、<parameter>list1</"
"parameter>と<parameter>list2</parameter>を比較します。<parameter>list1</"
"parameter>と<parameter>list2</parameter>は<link linkend=\"guint"
"\"><type>guint</type></link>の<link linkend=\"GList\"><type>GList</type></"
"link>でなければいけません。"

#: xml/gcut-list.xml:239(para) xml/gcut-list.xml:242(para)
#: xml/gcut-list.xml:508(para) xml/gcut-list.xml:511(para)
msgid ""
"a <link linkend=\"GList\"><type>GList</type></link> of <link linkend=\"guint"
"\"><type>guint</type></link> to be compared."
msgstr ""
"比較する<link linkend=\"guint\"><type>guint</type></link>の<link linkend="
"\"GList\"><type>GList</type></link>。"

#: xml/gcut-list.xml:247(para) xml/gcut-list.xml:516(para)
msgid ""
"TRUE if all corresponding unsigned integers of <parameter>list1</parameter> "
"and <parameter>list2</parameter> are same value, FALSE otherwise."
msgstr ""
"<parameter>list1</parameter>と<parameter>list2</parameter>のすべての対応する"
"符号なし整数値が同じ値の場合はTRUE、そうでない場合はFALSE。"

#: xml/gcut-list.xml:253(title)
msgid "gcut_list_inspect_uint ()"
msgstr ""

#: xml/gcut-list.xml:255(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_list_inspect_uint (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *list</parameter>);"
msgstr ""

#: xml/gcut-list.xml:257(para) xml/gcut-list.xml:527(para)
#, fuzzy
msgid ""
"Inspects <parameter>list</parameter> . <parameter>list</parameter> should be "
"<link linkend=\"GList\"><type>GList</type></link> of <link linkend=\"guint"
"\"><type>guint</type></link>. The returned string should be freed when no "
"longer needed."
msgstr ""
"<parameter>list</parameter>の詳細を返します。<parameter>list</parameter>は"
"<link linkend=\"guint\"><type>guint</type></link>の<link linkend=\"GList"
"\"><type>GList</type></link>でなければいけません。返された文字列が必要なく"
"なったときは開放してください。"

#: xml/gcut-list.xml:270(para) xml/gcut-list.xml:540(para)
msgid ""
"a <link linkend=\"GList\"><type>GList</type></link> of <link linkend=\"guint"
"\"><type>guint</type></link> to be inspected."
msgstr ""
"詳細を示す<link linkend=\"guint\"><type>guint</type></link>の<link linkend="
"\"GList\"><type>GList</type></link>です。"

#: xml/gcut-list.xml:279(title)
msgid "gcut_list_equal_string ()"
msgstr ""

#: xml/gcut-list.xml:281(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_list_equal_string (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *list1</parameter>,\n"
"                        <parameter>const <link linkend=\"GList\"><type>GList</type></link> *list2</parameter>);"
msgstr ""

#: xml/gcut-list.xml:284(para) xml/gcut-list.xml:554(para)
#, fuzzy
msgid ""
"Compares two <link linkend=\"GList\"><type>GList</type></link>, "
"<parameter>list1</parameter> and <parameter>list2</parameter> . "
"<parameter>list1</parameter> and <parameter>list2</parameter> should be "
"<link linkend=\"GList\"><type>GList</type></link> of string."
msgstr ""
"ふたつの<link linkend=\"GList\"><type>GList</type></link>、<parameter>list1</"
"parameter>と<parameter>list2</parameter>を比較します。<parameter>list1</"
"parameter>と<parameter>list2</parameter>は文字列の<link linkend=\"GList"
"\"><type>GList</type></link>でなければいけません。"

#: xml/gcut-list.xml:299(para) xml/gcut-list.xml:302(para)
#: xml/gcut-list.xml:569(para) xml/gcut-list.xml:572(para)
msgid ""
"a <link linkend=\"GList\"><type>GList</type></link> of string to be compared."
msgstr "比較する文字列の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-list.xml:307(para) xml/gcut-list.xml:577(para)
msgid ""
"TRUE if all corresponding string of <parameter>list1</parameter> and "
"<parameter>list2</parameter> are same content string, FALSE otherwise."
msgstr ""
"<parameter>list1</parameter>と<parameter>list2</parameter>のすべての対応する"
"文字列が同じ内容の文字列の場合はTRUE、そうでない場合はFALSE。"

#: xml/gcut-list.xml:313(title)
msgid "gcut_list_inspect_string ()"
msgstr ""

#: xml/gcut-list.xml:315(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_list_inspect_string (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *list</parameter>);"
msgstr ""

#: xml/gcut-list.xml:317(para) xml/gcut-list.xml:588(para)
#, fuzzy
msgid ""
"Inspects <parameter>list</parameter> . <parameter>list</parameter> should be "
"<link linkend=\"GList\"><type>GList</type></link> of string. The returned "
"string should be freed when no longer needed."
msgstr ""
"<parameter>list</parameter>の詳細を返します。<parameter>list</parameter>は文"
"字列の<link linkend=\"GList\"><type>GList</type></link>でなければいけません。"
"返された文字列が必要なくなったときは開放してください。"

#: xml/gcut-list.xml:330(para) xml/gcut-list.xml:601(para)
msgid ""
"a <link linkend=\"GList\"><type>GList</type></link> of string to be "
"inspected."
msgstr "詳細を示す文字列の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-list.xml:339(title)
msgid "gcut_list_inspect_object ()"
msgstr ""

#: xml/gcut-list.xml:341(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_list_inspect_object (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *list</parameter>);"
msgstr ""

#: xml/gcut-list.xml:343(para) xml/gcut-list.xml:615(para)
#, fuzzy
msgid ""
"Inspects <parameter>list</parameter> . <parameter>list</parameter> should be "
"<link linkend=\"GList\"><type>GList</type></link> of <link linkend=\"GObject"
"\"><type>GObject</type></link>. The returned string should be freed when no "
"longer needed."
msgstr ""
"<parameter>list</parameter>の詳細を返します。<parameter>list</parameter>は"
"<link linkend=\"GObject\"><type>GObject</type></link>の<link linkend=\"GList"
"\"><type>GList</type></link>でなければいけません。返された文字列が必要なく"
"なったときは開放してください。"

#: xml/gcut-list.xml:356(para) xml/gcut-list.xml:628(para)
msgid ""
"a <link linkend=\"GList\"><type>GList</type></link> of <link linkend="
"\"GObject\"><type>GObject</type></link> to be inspected."
msgstr ""
"詳細を示す<link linkend=\"GObject\"><type>GObject</type></link>の<link "
"linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-list.xml:365(title)
msgid "gcut_list_inspect_enum ()"
msgstr ""

#: xml/gcut-list.xml:367(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_list_inspect_enum (<parameter><link linkend=\"GType\"><type>GType</type></link> type</parameter>,\n"
"                        <parameter>const <link linkend=\"GList\"><type>GList</type></link> *list</parameter>);"
msgstr ""

#: xml/gcut-list.xml:370(para) xml/gcut-list.xml:642(para)
#, fuzzy
msgid ""
"Inspects <parameter>list</parameter> . <parameter>list</parameter> should be "
"<link linkend=\"GList\"><type>GList</type></link> of enum value of <link "
"linkend=\"GEnum\"><type>GEnum</type></link>. The returned string should be "
"freed when no longer needed."
msgstr ""
"<parameter>list</parameter>の詳細を返します。<parameter>list</parameter>は"
"<link linkend=\"GEnum\"><type>GEnum</type></link>の列挙値の<link linkend="
"\"GList\"><type>GList</type></link>でなければいけません。返された文字列が必要"
"なくなったときは開放してください。"

#: xml/gcut-list.xml:383(para) xml/gcut-list.xml:414(para)
#: xml/gcut-list.xml:658(para) xml/gcut-list.xml:689(para)
#: xml/gcut-assertions.xml:505(para) xml/gcut-assertions.xml:539(para)
msgid "type"
msgstr ""

#: xml/gcut-list.xml:384(para) xml/gcut-list.xml:659(para)
#: xml/gcut-enum.xml:94(para) xml/gcut-enum.xml:130(para)
#: xml/gcut-assertions.xml:506(para) xml/gcut-assertions.xml:824(para)
msgid "a <link linkend=\"GEnum\"><type>GEnum</type></link> type."
msgstr "<link linkend=\"GEnum\"><type>GEnum</type></link>の型。"

#: xml/gcut-list.xml:387(para) xml/gcut-list.xml:656(para)
msgid ""
"a <link linkend=\"GList\"><type>GList</type></link> of enum value to be "
"inspected."
msgstr "詳細を示す列挙値の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-list.xml:396(title)
msgid "gcut_list_inspect_flags ()"
msgstr ""

#: xml/gcut-list.xml:398(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_list_inspect_flags (<parameter><link linkend=\"GType\"><type>GType</type></link> type</parameter>,\n"
"                         <parameter>const <link linkend=\"GList\"><type>GList</type></link> *list</parameter>);"
msgstr ""

#: xml/gcut-list.xml:401(para) xml/gcut-list.xml:673(para)
#, fuzzy
msgid ""
"Inspects <parameter>list</parameter> . <parameter>list</parameter> should be "
"<link linkend=\"GList\"><type>GList</type></link> of flags value of <link "
"linkend=\"GFlags\"><type>GFlags</type></link>. The returned string should be "
"freed when no longer needed."
msgstr ""
"<parameter>list</parameter>の詳細を返します。<parameter>list</parameter>は"
"<link linkend=\"GFlags\"><type>GFlags</type></link>のフラグ値の<link linkend="
"\"GList\"><type>GList</type></link>でなければいけません。返された文字列が必要"
"なくなったときは開放してください。"

#: xml/gcut-list.xml:415(para) xml/gcut-list.xml:690(para)
#: xml/gcut-enum.xml:164(para) xml/gcut-enum.xml:201(para)
#: xml/gcut-enum.xml:233(para) xml/gcut-assertions.xml:540(para)
#: xml/gcut-assertions.xml:870(para)
msgid "a <link linkend=\"GFlags\"><type>GFlags</type></link> type."
msgstr "<link linkend=\"GFlags\"><type>GFlags</type></link>の型。"

#: xml/gcut-list.xml:418(para) xml/gcut-list.xml:687(para)
msgid ""
"a <link linkend=\"GList\"><type>GList</type></link> of flags value to be "
"inspected."
msgstr ""
"詳細を示すフラグ値の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-list.xml:427(title)
msgid "gcut_list_int_equal()"
msgstr ""

#: xml/gcut-list.xml:429(programlisting)
#, no-wrap
msgid "#define             gcut_list_int_equal(list1, list2)"
msgstr ""

#: xml/gcut-list.xml:430(para)
#, fuzzy
msgid ""
"<literal>gcut_list_int_equal</literal> has been deprecated since version "
"1.0.6 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-list.xml:430(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-list-equal-int\"><function>gcut_list_equal_int()</"
"function></link> instead."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/gcut-list.xml:461(title)
msgid "gcut_list_int_inspect()"
msgstr ""

#: xml/gcut-list.xml:463(programlisting)
#, no-wrap
msgid "#define             gcut_list_int_inspect(list)"
msgstr ""

#: xml/gcut-list.xml:464(para)
#, fuzzy
msgid ""
"<literal>gcut_list_int_inspect</literal> has been deprecated since version "
"1.0.6 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/gcut-list.xml:464(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-list-inspect-int"
"\"><function>gcut_list_inspect_int()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/gcut-list.xml:488(title)
msgid "gcut_list_uint_equal()"
msgstr ""

#: xml/gcut-list.xml:490(programlisting)
#, no-wrap
msgid "#define             gcut_list_uint_equal(list1, list2)"
msgstr ""

#: xml/gcut-list.xml:491(para)
#, fuzzy
msgid ""
"<literal>gcut_list_uint_equal</literal> has been deprecated since version "
"1.0.6 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-list.xml:491(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-list-equal-uint\"><function>gcut_list_equal_uint()</"
"function></link> instead."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/gcut-list.xml:522(title)
msgid "gcut_list_uint_inspect()"
msgstr ""

#: xml/gcut-list.xml:524(programlisting)
#, no-wrap
msgid "#define             gcut_list_uint_inspect(list)"
msgstr ""

#: xml/gcut-list.xml:525(para)
#, fuzzy
msgid ""
"<literal>gcut_list_uint_inspect</literal> has been deprecated since version "
"1.0.6 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/gcut-list.xml:525(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-list-inspect-uint"
"\"><function>gcut_list_inspect_uint()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/gcut-list.xml:549(title)
msgid "gcut_list_string_equal()"
msgstr ""

#: xml/gcut-list.xml:551(programlisting)
#, no-wrap
msgid "#define             gcut_list_string_equal(list1, list2)"
msgstr ""

#: xml/gcut-list.xml:552(para)
#, fuzzy
msgid ""
"<literal>gcut_list_string_equal</literal> has been deprecated since version "
"1.0.6 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-list.xml:552(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-list-equal-string"
"\"><function>gcut_list_equal_string()</function></link> instead."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/gcut-list.xml:583(title)
msgid "gcut_list_string_inspect()"
msgstr ""

#: xml/gcut-list.xml:585(programlisting)
#, no-wrap
msgid "#define             gcut_list_string_inspect(list)"
msgstr ""

#: xml/gcut-list.xml:586(para)
#, fuzzy
msgid ""
"<literal>gcut_list_string_inspect</literal> has been deprecated since "
"version 1.0.6 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/gcut-list.xml:586(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-list-inspect-string"
"\"><function>gcut_list_inspect_string()</function></link> instead."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/gcut-list.xml:610(title)
msgid "gcut_list_object_inspect()"
msgstr ""

#: xml/gcut-list.xml:612(programlisting)
#, no-wrap
msgid "#define             gcut_list_object_inspect(list)"
msgstr ""

#: xml/gcut-list.xml:613(para)
#, fuzzy
msgid ""
"<literal>gcut_list_object_inspect</literal> has been deprecated since "
"version 1.0.6 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/gcut-list.xml:613(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-list-inspect-object"
"\"><function>gcut_list_inspect_object()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/gcut-list.xml:637(title)
msgid "gcut_list_enum_inspect()"
msgstr ""

#: xml/gcut-list.xml:639(programlisting)
#, no-wrap
msgid "#define             gcut_list_enum_inspect(list, type)"
msgstr ""

#: xml/gcut-list.xml:640(para)
#, fuzzy
msgid ""
"<literal>gcut_list_enum_inspect</literal> has been deprecated since version "
"1.0.6 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/gcut-list.xml:640(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-list-inspect-enum"
"\"><function>gcut_list_inspect_enum()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/gcut-list.xml:668(title)
msgid "gcut_list_flags_inspect()"
msgstr ""

#: xml/gcut-list.xml:670(programlisting)
#, no-wrap
msgid "#define             gcut_list_flags_inspect(list, type)"
msgstr ""

#: xml/gcut-list.xml:671(para)
#, fuzzy
msgid ""
"<literal>gcut_list_flags_inspect</literal> has been deprecated since version "
"1.0.6 and should not be used in newly-written code."
msgstr ""
"<literal>GCutEggClass</literal>は非推奨です。新しいコードでは使わないでくださ"
"い。"

#: xml/gcut-list.xml:671(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-list-inspect-flags"
"\"><function>gcut_list_inspect_flags()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/gcut-key-file.xml:7(refentrytitle) xml/gcut-key-file.xml:12(refname)
#: xml/api-index-full.xml:349(link) xml/api-index-full.xml:350(link)
msgid "gcut-key-file"
msgstr ""

#: xml/gcut-key-file.xml:24(link) xml/gcut-key-file.xml:44(primary)
#: xml/api-index-full.xml:349(link)
msgid "gcut_key_file_get_enum"
msgstr ""

#: xml/gcut-key-file.xml:26(link) xml/gcut-key-file.xml:56(primary)
#: xml/api-index-full.xml:350(link)
msgid "gcut_key_file_get_flags"
msgstr ""

#: xml/gcut-key-file.xml:43(title)
msgid "gcut_key_file_get_enum ()"
msgstr ""

#: xml/gcut-key-file.xml:45(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gint\"><returnvalue>gint</returnvalue></link>\n"
"gcut_key_file_get_enum (<parameter><link linkend=\"GKeyFile\"><type>GKeyFile</type></link> *key_file</parameter>,\n"
"                        <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *group_name</parameter>,\n"
"                        <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *key</parameter>,\n"
"                        <parameter><link linkend=\"GType\"><type>GType</type></link> enum_type</parameter>,\n"
"                        <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-key-file.xml:55(title)
msgid "gcut_key_file_get_flags ()"
msgstr ""

#: xml/gcut-key-file.xml:57(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_key_file_get_flags (<parameter><link linkend=\"GKeyFile\"><type>GKeyFile</type></link> *key_file</parameter>,\n"
"                         <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *group_name</parameter>,\n"
"                         <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *key</parameter>,\n"
"                         <parameter><link linkend=\"GType\"><type>GType</type></link> flags_type</parameter>,\n"
"                         <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-io.xml:7(refentrytitle) xml/gcut-io.xml:12(refname)
#: xml/api-index-full.xml:348(link)
msgid "gcut-io"
msgstr ""

#: xml/gcut-io.xml:24(link) xml/gcut-io.xml:42(primary)
#: xml/api-index-full.xml:348(link)
msgid "gcut_io_inspect_condition"
msgstr ""

#: xml/gcut-io.xml:41(title)
msgid "gcut_io_inspect_condition ()"
msgstr ""

#: xml/gcut-io.xml:43(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_io_inspect_condition (<parameter><link linkend=\"GIOCondition\"><type>GIOCondition</type></link> condition</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:7(refentrytitle) xml/gcut-inspect.xml:12(refname)
#: xml/api-index-full.xml:334(link) xml/api-index-full.xml:335(link)
#: xml/api-index-full.xml:336(link) xml/api-index-full.xml:337(link)
#: xml/api-index-full.xml:338(link) xml/api-index-full.xml:339(link)
#: xml/api-index-full.xml:340(link) xml/api-index-full.xml:341(link)
#: xml/api-index-full.xml:342(link) xml/api-index-full.xml:343(link)
#: xml/api-index-full.xml:344(link) xml/api-index-full.xml:345(link)
#: xml/api-index-full.xml:346(link) xml/api-index-full.xml:347(link)
#: xml/api-index-1.1.3.xml:17(link) xml/api-index-1.1.3.xml:18(link)
#: xml/api-index-1.1.3.xml:19(link) xml/api-index-1.1.3.xml:20(link)
#: xml/api-index-1.1.3.xml:21(link) xml/api-index-1.1.3.xml:22(link)
#: xml/api-index-1.0.6.xml:52(link) xml/api-index-1.0.6.xml:53(link)
#: xml/api-index-1.0.6.xml:54(link) xml/api-index-1.0.6.xml:55(link)
#: xml/api-index-1.0.6.xml:56(link) xml/api-index-1.0.6.xml:57(link)
#: xml/api-index-1.0.6.xml:58(link) xml/api-index-1.0.6.xml:59(link)
msgid "Object inspection functions"
msgstr "オブジェクト調査関数"

#: xml/gcut-inspect.xml:13(refpurpose)
msgid "Functions to inspect an object for debugging."
msgstr "デバッグ用にオブジェクトの詳細を示す関数です。"

#: xml/gcut-inspect.xml:25(link) xml/gcut-inspect.xml:70(primary)
#: xml/api-index-full.xml:336(link) xml/api-index-1.0.6.xml:52(link)
msgid "gcut_inspect_direct"
msgstr ""

#: xml/gcut-inspect.xml:27(link) xml/gcut-inspect.xml:103(primary)
#: xml/api-index-full.xml:340(link) xml/api-index-1.0.6.xml:55(link)
msgid "gcut_inspect_int"
msgstr ""

#: xml/gcut-inspect.xml:29(link) xml/gcut-inspect.xml:137(primary)
#: xml/api-index-full.xml:346(link) xml/api-index-1.0.6.xml:59(link)
msgid "gcut_inspect_uint"
msgstr ""

#: xml/gcut-inspect.xml:31(link) xml/gcut-inspect.xml:171(primary)
#: xml/api-index-full.xml:341(link) xml/api-index-1.1.3.xml:20(link)
msgid "gcut_inspect_int64"
msgstr ""

#: xml/gcut-inspect.xml:33(link) xml/gcut-inspect.xml:205(primary)
#: xml/api-index-full.xml:347(link) xml/api-index-1.1.3.xml:22(link)
msgid "gcut_inspect_uint64"
msgstr ""

#: xml/gcut-inspect.xml:35(link) xml/gcut-inspect.xml:239(primary)
#: xml/api-index-full.xml:343(link) xml/api-index-1.1.3.xml:21(link)
msgid "gcut_inspect_size"
msgstr ""

#: xml/gcut-inspect.xml:37(link) xml/gcut-inspect.xml:273(primary)
#: xml/api-index-full.xml:335(link) xml/api-index-1.1.3.xml:18(link)
msgid "gcut_inspect_char"
msgstr ""

#: xml/gcut-inspect.xml:39(link) xml/gcut-inspect.xml:308(primary)
#: xml/api-index-full.xml:344(link) xml/api-index-1.0.6.xml:57(link)
msgid "gcut_inspect_string"
msgstr ""

#: xml/gcut-inspect.xml:41(link) xml/gcut-inspect.xml:341(primary)
#: xml/api-index-full.xml:345(link) xml/api-index-1.0.6.xml:58(link)
msgid "gcut_inspect_type"
msgstr ""

#: xml/gcut-inspect.xml:43(link) xml/gcut-inspect.xml:374(primary)
#: xml/api-index-full.xml:339(link) xml/api-index-1.0.6.xml:54(link)
msgid "gcut_inspect_flags"
msgstr ""

#: xml/gcut-inspect.xml:45(link) xml/gcut-inspect.xml:413(primary)
#: xml/api-index-full.xml:338(link) xml/api-index-1.0.6.xml:53(link)
msgid "gcut_inspect_enum"
msgstr ""

#: xml/gcut-inspect.xml:47(link) xml/gcut-inspect.xml:452(primary)
#: xml/api-index-full.xml:342(link) xml/api-index-1.0.6.xml:56(link)
msgid "gcut_inspect_pointer"
msgstr ""

#: xml/gcut-inspect.xml:49(link) xml/gcut-inspect.xml:486(primary)
#: xml/api-index-full.xml:334(link) xml/api-index-1.1.3.xml:17(link)
msgid "gcut_inspect_boolean"
msgstr ""

#: xml/gcut-inspect.xml:51(link) xml/gcut-inspect.xml:524(primary)
#: xml/api-index-full.xml:337(link) xml/api-index-1.1.3.xml:19(link)
msgid "gcut_inspect_double"
msgstr ""

#: xml/gcut-inspect.xml:61(para)
msgid ""
"In test result, we need to know detail of inspected objects for debugging. "
"Functions of this section help us to inspect interested objects."
msgstr ""
"デバッグするために、テスト結果ではオブジェクトの詳細を示す必要があります。こ"
"のセクションの関数はオブジェクトの詳細を示す場合に役立ちます。"

#: xml/gcut-inspect.xml:69(title)
msgid "gcut_inspect_direct ()"
msgstr ""

#: xml/gcut-inspect.xml:71(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_direct (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                     <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                     <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:75(para) xml/gcut-inspect.xml:142(para)
#: xml/gcut-inspect.xml:244(para)
msgid "Shows <parameter>data</parameter> as unsigned integer."
msgstr "符号なし整数として<parameter>data</parameter>の詳細を示します。"

#: xml/gcut-inspect.xml:91(para) xml/gcut-inspect.xml:125(para)
#: xml/gcut-inspect.xml:159(para) xml/gcut-inspect.xml:193(para)
#: xml/gcut-inspect.xml:227(para) xml/gcut-inspect.xml:261(para)
#: xml/gcut-inspect.xml:296(para) xml/gcut-inspect.xml:329(para)
#: xml/gcut-inspect.xml:362(para) xml/gcut-inspect.xml:401(para)
#: xml/gcut-inspect.xml:440(para) xml/gcut-inspect.xml:474(para)
#: xml/gcut-inspect.xml:512(para) xml/gcut-inspect.xml:546(para)
msgid "the output string."
msgstr "出力の文字列。"

#: xml/gcut-inspect.xml:94(para) xml/gcut-inspect.xml:128(para)
#: xml/gcut-inspect.xml:162(para) xml/gcut-inspect.xml:196(para)
#: xml/gcut-inspect.xml:230(para) xml/gcut-inspect.xml:264(para)
#: xml/gcut-inspect.xml:299(para) xml/gcut-inspect.xml:332(para)
#: xml/gcut-inspect.xml:365(para) xml/gcut-inspect.xml:404(para)
#: xml/gcut-inspect.xml:443(para) xml/gcut-inspect.xml:477(para)
#: xml/gcut-inspect.xml:515(para) xml/gcut-inspect.xml:549(para)
msgid "the interested target."
msgstr "関心のある対象。"

#: xml/gcut-inspect.xml:97(para) xml/gcut-inspect.xml:131(para)
#: xml/gcut-inspect.xml:165(para) xml/gcut-inspect.xml:199(para)
#: xml/gcut-inspect.xml:233(para) xml/gcut-inspect.xml:267(para)
#: xml/gcut-inspect.xml:302(para) xml/gcut-inspect.xml:335(para)
#: xml/gcut-inspect.xml:368(para) xml/gcut-inspect.xml:480(para)
#: xml/gcut-inspect.xml:518(para) xml/gcut-inspect.xml:552(para)
msgid "the data passed by user. (ignored)"
msgstr "ユーザが渡したデータ。（無視されます）"

#: xml/gcut-inspect.xml:102(title)
msgid "gcut_inspect_int ()"
msgstr ""

#: xml/gcut-inspect.xml:104(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_int (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                  <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                  <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:108(para)
msgid "Shows <parameter>data</parameter> as integer."
msgstr "整数として<parameter>data</parameter>の詳細を示します。"

#: xml/gcut-inspect.xml:136(title)
msgid "gcut_inspect_uint ()"
msgstr ""

#: xml/gcut-inspect.xml:138(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_uint (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                   <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                   <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:170(title)
msgid "gcut_inspect_int64 ()"
msgstr ""

#: xml/gcut-inspect.xml:172(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_int64 (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                    <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                    <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:176(para)
msgid "Shows <parameter>data</parameter> as 64-bit integer."
msgstr "64bit整数として<parameter>data</parameter>の詳細を示します。"

#: xml/gcut-inspect.xml:202(para) xml/gcut-inspect.xml:236(para)
#: xml/gcut-inspect.xml:270(para) xml/gcut-inspect.xml:305(para)
#: xml/gcut-inspect.xml:521(para) xml/gcut-inspect.xml:555(para)
#: xml/gcut-data.xml:373(para) xml/gcut-data.xml:485(para)
#: xml/gcut-data.xml:512(para) xml/gcut-data.xml:538(para)
#: xml/gcut-data.xml:711(para) xml/gcut-data.xml:740(para)
#: xml/cut-test-utils.xml:400(para) xml/cut-assertions.xml:1818(para)
#: xml/cut-assertions.xml:1850(para)
msgid "Since: <link linkend=\"api-index-1.1.3\">1.1.3</link>"
msgstr ""

#: xml/gcut-inspect.xml:204(title)
msgid "gcut_inspect_uint64 ()"
msgstr ""

#: xml/gcut-inspect.xml:206(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_uint64 (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                     <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                     <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:210(para)
msgid "Shows <parameter>data</parameter> as 64-bit unsigned integer."
msgstr "64bit符号なし整数として<parameter>data</parameter>の詳細を示します。"

#: xml/gcut-inspect.xml:238(title)
msgid "gcut_inspect_size ()"
msgstr ""

#: xml/gcut-inspect.xml:240(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_size (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                   <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                   <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:272(title)
msgid "gcut_inspect_char ()"
msgstr ""

#: xml/gcut-inspect.xml:274(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_char (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                   <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                   <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:278(para)
msgid "Shows <parameter>data</parameter> as character."
msgstr "文字として<parameter>data</parameter>の詳細を示します。"

#: xml/gcut-inspect.xml:307(title)
msgid "gcut_inspect_string ()"
msgstr ""

#: xml/gcut-inspect.xml:309(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_string (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                     <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                     <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:313(para)
msgid ""
"Shows <parameter>data</parameter> as string. It also accepts <link linkend="
"\"NULL:CAPS\"><literal>NULL</literal></link>."
msgstr ""
"文字列として<parameter>data</parameter>の詳細を示します。<link linkend="
"\"NULL:CAPS\"><literal>NULL</literal></link>でも構いません。"

#: xml/gcut-inspect.xml:340(title)
msgid "gcut_inspect_type ()"
msgstr ""

#: xml/gcut-inspect.xml:342(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_type (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                   <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                   <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:346(para)
msgid ""
"Shows <parameter>data</parameter> as <link linkend=\"GType\"><literal>GType</"
"literal></link>."
msgstr ""
"<link linkend=\"GType\"><literal>GType</literal></link>として"
"<parameter>data</parameter>の詳細を示します。"

#: xml/gcut-inspect.xml:373(title)
msgid "gcut_inspect_flags ()"
msgstr ""

#: xml/gcut-inspect.xml:375(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_flags (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                    <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                    <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:379(para)
msgid "Shows <parameter>data</parameter> as value a GFlags type."
msgstr "GFlagsの型の値として<parameter>data</parameter>の詳細を示します。"

#: xml/gcut-inspect.xml:407(para)
msgid "the pointer of GFlags type."
msgstr "GFlagsの型のポインタ。"

#: xml/gcut-inspect.xml:412(title)
msgid "gcut_inspect_enum ()"
msgstr ""

#: xml/gcut-inspect.xml:414(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_enum (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                   <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                   <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:418(para)
msgid "Shows <parameter>data</parameter> as value of a GEnum type."
msgstr "GEnumの型の値として<parameter>data</parameter>の詳細を示します。"

#: xml/gcut-inspect.xml:446(para)
msgid "the pointer of GEnum type."
msgstr "GEnumの型のポインタ。"

#: xml/gcut-inspect.xml:451(title)
msgid "gcut_inspect_pointer ()"
msgstr ""

#: xml/gcut-inspect.xml:453(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_pointer (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                      <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                      <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:457(para)
msgid "Shows <parameter>data</parameter> as a pointer."
msgstr "ポインタとして<parameter>data</parameter>の詳細を示します。"

#: xml/gcut-inspect.xml:485(title)
msgid "gcut_inspect_boolean ()"
msgstr ""

#: xml/gcut-inspect.xml:487(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_boolean (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                      <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                      <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:491(para)
msgid "Shows <parameter>data</parameter> as boolean."
msgstr "真偽値として<parameter>data</parameter>の詳細を示します。"

#: xml/gcut-inspect.xml:523(title)
msgid "gcut_inspect_double ()"
msgstr ""

#: xml/gcut-inspect.xml:525(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_inspect_double (<parameter><link linkend=\"GString\"><type>GString</type></link> *string</parameter>,\n"
"                     <parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                     <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-inspect.xml:529(para)
msgid "Shows <parameter>data</parameter> as double floating point number."
msgstr "倍精度浮動小数点数として<parameter>data</parameter>の詳細を示します。"

#: xml/gcut-hash-table.xml:7(refentrytitle) xml/gcut-hash-table.xml:12(refname)
#: xml/api-index-full.xml:325(link) xml/api-index-full.xml:326(link)
#: xml/api-index-full.xml:327(link) xml/api-index-full.xml:328(link)
#: xml/api-index-full.xml:329(link) xml/api-index-full.xml:330(link)
#: xml/api-index-1.0.9.xml:13(link) xml/api-index-1.0.8.xml:7(link)
#: xml/api-index-1.0.5.xml:31(link) xml/api-index-1.0.5.xml:32(link)
#: xml/api-index-1.0.5.xml:33(link) xml/api-index-1.0.5.xml:34(link)
msgid "Assertion Utilities for GHashTable"
msgstr "GHashTable用の検証ユーティリティ"

#: xml/gcut-hash-table.xml:13(refpurpose)
msgid ""
"Utilities to write assertions related to <link linkend=\"GHashTable"
"\"><placeholder-1/></link> more easily."
msgstr ""
"<link linkend=\"GHashTable\"><placeholder-1/></link>に関する検証をもっと簡単"
"に書くためのユーティリティ。"

#: xml/gcut-hash-table.xml:25(link) xml/gcut-hash-table.xml:55(primary)
#: xml/api-index-full.xml:325(link) xml/api-index-1.0.5.xml:31(link)
msgid "gcut_hash_table_equal"
msgstr ""

#: xml/gcut-hash-table.xml:27(link) xml/gcut-hash-table.xml:102(primary)
#: xml/api-index-full.xml:326(link) xml/api-index-1.0.5.xml:32(link)
msgid "gcut_hash_table_inspect"
msgstr ""

#: xml/gcut-hash-table.xml:29(link) xml/gcut-hash-table.xml:150(primary)
#: xml/api-index-full.xml:327(link) xml/api-index-1.0.9.xml:13(link)
msgid "gcut_hash_table_inspect_sorted"
msgstr ""

#: xml/gcut-hash-table.xml:31(link) xml/gcut-hash-table.xml:208(primary)
#: xml/api-index-full.xml:328(link) xml/api-index-1.0.5.xml:33(link)
msgid "gcut_hash_table_string_equal"
msgstr ""

#: xml/gcut-hash-table.xml:33(link) xml/gcut-hash-table.xml:243(primary)
#: xml/api-index-full.xml:330(link) xml/api-index-1.0.5.xml:34(link)
msgid "gcut_hash_table_string_string_inspect"
msgstr ""

#: xml/gcut-hash-table.xml:35(link) xml/gcut-hash-table.xml:270(primary)
#: xml/api-index-full.xml:329(link) xml/api-index-1.0.8.xml:7(link)
msgid "gcut_hash_table_string_string_copy"
msgstr ""

#: xml/gcut-hash-table.xml:47(para)
msgid ""
"The utilities help you to write assertions that are related to <link linkend="
"\"GHashTable\"><type>GHashTable</type></link>."
msgstr ""
"このユーティリティは<link linkend=\"GHashTable\"><type>GHashTable</type></"
"link>に関する検証の作成を補助します。"

#: xml/gcut-hash-table.xml:54(title)
msgid "gcut_hash_table_equal ()"
msgstr ""

#: xml/gcut-hash-table.xml:56(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_hash_table_equal (<parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *hash1</parameter>,\n"
"                       <parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *hash2</parameter>,\n"
"                       <parameter><link linkend=\"GEqualFunc\"><type>GEqualFunc</type></link> equal_func</parameter>);"
msgstr ""

#: xml/gcut-hash-table.xml:60(para)
#, fuzzy
msgid ""
"Compares two <link linkend=\"GHashTable\"><type>GHashTable</type></link>, "
"<parameter>hash1</parameter> and <parameter>hash2</parameter> . "
"<parameter>equal_func</parameter> is called for each values of the same key "
"of <parameter>hash1</parameter> and <parameter>hash2</parameter> ."
msgstr ""
"ふたつの<link linkend=\"GHashTable\"><type>GHashTable</type></link>、"
"<parameter>hash1</parameter>と<parameter>hash2</parameter>を比較します。"
"<parameter>equal_func</parameter>は<parameter>hash1</parameter>と"
"<parameter>hash2</parameter>の同じキーに対応する値それぞれについて呼ばれま"
"す。"

#: xml/gcut-hash-table.xml:81(para) xml/gcut-hash-table.xml:227(para)
msgid "hash1"
msgstr ""

#: xml/gcut-hash-table.xml:82(para) xml/gcut-hash-table.xml:85(para)
#: xml/gcut-hash-table.xml:228(para) xml/gcut-hash-table.xml:231(para)
msgid ""
"a <link linkend=\"GHashTable\"><type>GHashTable</type></link> to be compared."
msgstr "比較する<link linkend=\"GHashTable\"><type>GHashTable</type></link>。"

#: xml/gcut-hash-table.xml:84(para) xml/gcut-hash-table.xml:230(para)
msgid "hash2"
msgstr ""

#: xml/gcut-hash-table.xml:93(para)
#, fuzzy
msgid ""
"TRUE if all same key's values of <parameter>hash1</parameter> and "
"<parameter>hash2</parameter> are reported TRUE by <parameter>equal_func</"
"parameter> , FALSE otherwise."
msgstr ""
"同じキーに対応するすべての<parameter>hash1</parameter>と<parameter>hash2</"
"parameter>の値が<parameter>equal_func</parameter>でTRUEとなったらTRUE、そうで"
"ない場合はFALSE。"

#: xml/gcut-hash-table.xml:101(title)
msgid "gcut_hash_table_inspect ()"
msgstr ""

#: xml/gcut-hash-table.xml:103(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_hash_table_inspect (<parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *hash</parameter>,\n"
"                         <parameter><link linkend=\"GCutInspectFunction\"><type>GCutInspectFunction</type></link> key_inspect_func</parameter>,\n"
"                         <parameter><link linkend=\"GCutInspectFunction\"><type>GCutInspectFunction</type></link> value_inspect_func</parameter>,\n"
"                         <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-hash-table.xml:108(para)
#, fuzzy
msgid ""
"Inspects <parameter>hash</parameter> . Each key of <parameter>hash</"
"parameter> is inspected by <parameter>key_inspect_func</parameter> and each "
"value of <parameter>hash</parameter> is inspected by "
"<parameter>value_inspect_func</parameter> . The returned string should be "
"freed when no longer needed."
msgstr ""
"<parameter>hash</parameter>の詳細を返します。<parameter>hash</parameter>の各"
"キーは<parameter>key_inspect_func</parameter>で詳細化し、<parameter>hash</"
"parameter>の各値は<parameter>value_inspect_func</parameter>で詳細化します。返"
"された文字列が必要なくなったときは開放してください。"

#: xml/gcut-hash-table.xml:130(para) xml/gcut-hash-table.xml:185(para)
#: xml/gcut-hash-table.xml:259(para) xml/gcut-hash-table.xml:287(para)
msgid "hash"
msgstr ""

#: xml/gcut-hash-table.xml:131(para) xml/gcut-hash-table.xml:260(para)
msgid ""
"a <link linkend=\"GHashTable\"><type>GHashTable</type></link> to be "
"inspected."
msgstr ""
"詳細を示す<link linkend=\"GHashTable\"><type>GHashTable</type></link>。"

#: xml/gcut-hash-table.xml:133(para) xml/gcut-hash-table.xml:188(para)
msgid "key_inspect_func"
msgstr ""

#: xml/gcut-hash-table.xml:134(para) xml/gcut-hash-table.xml:189(para)
msgid "a function that inspects each key."
msgstr "各キーの詳細を示す関数。"

#: xml/gcut-hash-table.xml:136(para) xml/gcut-hash-table.xml:191(para)
msgid "value_inspect_func"
msgstr ""

#: xml/gcut-hash-table.xml:145(para) xml/gcut-hash-table.xml:265(para)
msgid "inspected <parameter>hash</parameter> as a string."
msgstr "<parameter>hash</parameter>の詳細を示した文字列。"

#: xml/gcut-hash-table.xml:149(title)
msgid "gcut_hash_table_inspect_sorted ()"
msgstr ""

#: xml/gcut-hash-table.xml:151(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_hash_table_inspect_sorted (<parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *hash</parameter>,\n"
"                                <parameter><link linkend=\"GCutInspectFunction\"><type>GCutInspectFunction</type></link> key_inspect_func</parameter>,\n"
"                                <parameter><link linkend=\"GCutInspectFunction\"><type>GCutInspectFunction</type></link> value_inspect_func</parameter>,\n"
"                                <parameter><link linkend=\"GCompareFunc\"><type>GCompareFunc</type></link> key_compare_func</parameter>,\n"
"                                <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/gcut-hash-table.xml:157(para)
#, fuzzy
msgid ""
"Sorts <parameter>hash</parameter> as key by <parameter>key_compare_func</"
"parameter> and inspects it. Each key of <parameter>hash</parameter> is "
"inspected by <parameter>key_inspect_func</parameter> and each value of "
"<parameter>hash</parameter> is inspected by <parameter>value_inspect_func</"
"parameter> . The returned string should be freed when no longer needed."
msgstr ""
"<parameter>key_compare_func</parameter>を使ってキーを基準にして"
"<parameter>hash</parameter>を並び替えて、その詳細を返します。"
"<parameter>hash</parameter>の各キーは<parameter>key_inspect_func</parameter>"
"で詳細化し、<parameter>hash</parameter>の各値は"
"<parameter>value_inspect_func</parameter>で詳細化します。返された文字列が必要"
"なくなったときは開放してください。"

#: xml/gcut-hash-table.xml:168(para)
msgid ""
"If <parameter>key_compare_func</parameter> is <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>, <parameter>hash</parameter> isn't sorted. "
"It is the same behavior as <link linkend=\"gcut-hash-table-inspect"
"\"><function>gcut_hash_table_inspect()</function></link>."
msgstr ""
"<parameter>key_compare_func</parameter>が<link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>なら<parameter>hash</parameter>を並び替えま"
"せん。これは<link linkend=\"gcut-hash-table-inspect"
"\"><function>gcut_hash_table_inspect()</function></link>と同じ動作です。"

#: xml/gcut-hash-table.xml:186(para)
msgid ""
"a <link linkend=\"GHashTable\"><type>GHashTable</type></link> to be "
"inspected and sorted."
msgstr ""
"並び替えて詳細を示す<link linkend=\"GHashTable\"><type>GHashTable</type></"
"link>。"

#: xml/gcut-hash-table.xml:194(para)
msgid "key_compare_func"
msgstr ""

#: xml/gcut-hash-table.xml:195(para)
msgid "a function that compares each key."
msgstr "各キーを比較する関数。"

#: xml/gcut-hash-table.xml:203(para)
msgid "inspected and sorted <parameter>hash</parameter> as a string."
msgstr "<parameter>hash</parameter>を並び替えて詳細を示した文字列。"

#: xml/gcut-hash-table.xml:205(para) xml/cut-helper.xml:457(para)
#: xml/cut-helper.xml:479(para) xml/cppcutter.xml:143(para)
#: xml/cppcutter.xml:162(para) xml/cppcutter.xml:171(para)
#: xml/cppcut-assertions.xml:78(para)
msgid "Since: <link linkend=\"api-index-1.0.9\">1.0.9</link>"
msgstr ""

#: xml/gcut-hash-table.xml:207(title)
msgid "gcut_hash_table_string_equal ()"
msgstr ""

#: xml/gcut-hash-table.xml:209(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_hash_table_string_equal (<parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *hash1</parameter>,\n"
"                              <parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *hash2</parameter>);"
msgstr ""

#: xml/gcut-hash-table.xml:212(para)
#, fuzzy
msgid ""
"Compares two <link linkend=\"GHashTable\"><type>GHashTable</type></link>, "
"<parameter>hash1</parameter> and <parameter>hash2</parameter> . "
"<parameter>hash1</parameter> and <parameter>hash2</parameter> should have "
"string key and string value."
msgstr ""
"ふたつの<link linkend=\"GHashTable\"><type>GHashTable</type></link>、"
"<parameter>hash1</parameter>と<parameter>hash2</parameter>を比較します。"
"<parameter>hash1</parameter>と<parameter>hash2</parameter>は文字列のキーと文"
"字列の値を持っていなければいけません。"

#: xml/gcut-hash-table.xml:236(para)
msgid ""
"TRUE if all same key's values of <parameter>hash1</parameter> and "
"<parameter>hash2</parameter> are same string content, FALSE otherwise."
msgstr ""
"<parameter>hash1</parameter>と<parameter>hash2</parameter>の同じキーの値それ"
"ぞれすべてが同じ内容の文字列の場合TRUE、そうでない場合はFALSE。"

#: xml/gcut-hash-table.xml:242(title)
msgid "gcut_hash_table_string_string_inspect ()"
msgstr ""

#: xml/gcut-hash-table.xml:244(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_hash_table_string_string_inspect (<parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *hash</parameter>);"
msgstr ""

#: xml/gcut-hash-table.xml:246(para)
#, fuzzy
msgid ""
"Inspects <parameter>hash</parameter> . <parameter>hash</parameter> should "
"have string key and string value. The returned string should be freed when "
"no longer needed."
msgstr ""
"<parameter>hash</parameter>の詳細を返します。<parameter>hash</parameter>は文"
"字列のキーと文字列の値を持っていなければいけません。返された文字列が必要なく"
"なったときは開放してください。"

#: xml/gcut-hash-table.xml:269(title)
msgid "gcut_hash_table_string_string_copy ()"
msgstr ""

#: xml/gcut-hash-table.xml:271(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GHashTable\"><returnvalue>GHashTable</returnvalue></link> *\n"
"gcut_hash_table_string_string_copy (<parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *hash</parameter>);"
msgstr ""

#: xml/gcut-hash-table.xml:273(para)
#, fuzzy
msgid ""
"Copy <parameter>hash</parameter> . <parameter>hash</parameter> should have "
"string key and string value. The returned <parameter>hash</parameter> should "
"be freed by <link linkend=\"g-hash-table-unref"
"\"><function>g_hash_table_unref()</function></link>."
msgstr ""
"<parameter>hash</parameter>を複製します。<parameter>hash</parameter>は文字列"
"のキーと文字列の値を持っていなければいけません。返された<parameter>hash</"
"parameter>は<link linkend=\"g-hash-table-unref"
"\"><function>g_hash_table_unref()</function></link>で開放しなければいけませ"
"ん。"

#: xml/gcut-hash-table.xml:288(para)
msgid ""
"a <link linkend=\"GHashTable\"><type>GHashTable</type></link> to be copied."
msgstr "複製する<link linkend=\"GHashTable\"><type>GHashTable</type></link>。"

#: xml/gcut-hash-table.xml:293(para)
msgid ""
"copied <link linkend=\"GHashTable\"><type>GHashTable</type></link>. It "
"should be freed when no longer needed."
msgstr ""
"複製された<link linkend=\"GHashTable\"><type>GHashTable</type></link>。必要が"
"なくなったら開放しなければいけません。"

#: xml/gcut-glib-event-loop.xml:7(refentrytitle)
#: xml/gcut-glib-event-loop.xml:12(refname)
msgid "GLib event loop"
msgstr "GLib用イベントループ"

#: xml/gcut-glib-event-loop.xml:13(refpurpose)
msgid "Event loop API for GLib main context and loop."
msgstr "GLibのGMainContextとGMainLoop用のイベントループAPI。"

#: xml/gcut-glib-event-loop.xml:25(link)
#: xml/gcut-glib-event-loop.xml:43(primary) xml/api-index-full.xml:324(link)
#: xml/api-index-1.1.6.xml:22(link)
msgid "gcut_glib_event_loop_new"
msgstr ""

#: xml/gcut-glib-event-loop.xml:35(para)
msgid ""
"<link linkend=\"GCutGLibEventLoop\"><type>GCutGLibEventLoop</type></link> is "
"an <link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> "
"implementation for GLib's main context and loop."
msgstr ""
"<link linkend=\"GCutGLibEventLoop\"><type>GCutGLibEventLoop</type></link>は"
"GLibのGMainContextとGMainLoop用の<link linkend=\"GCutEventLoop"
"\"><type>GCutEventLoop</type></link>実装です。"

#: xml/gcut-glib-event-loop.xml:42(title)
msgid "gcut_glib_event_loop_new ()"
msgstr ""

#: xml/gcut-glib-event-loop.xml:44(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"GCutEventLoop\"><returnvalue>GCutEventLoop</returnvalue></link> *\n"
"gcut_glib_event_loop_new (<parameter><link linkend=\"GMainContext\"><type>GMainContext</type></link> *context</parameter>);"
msgstr "<link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link>はイベントループをカプセル化します。イベントループは<link linkend=\"GCutProcess\"><type>GCutProcess</type></link>で使われています。GCutProcessはデフォルトではGLibのデフォルトGMainContextを使います。"

#: xml/gcut-glib-event-loop.xml:46(para)
#, fuzzy
msgid ""
"Creates a new <link linkend=\"GCutEeventLoop\"><type>GCutEeventLoop</type></"
"link> for <parameter>context</parameter> . If <parameter>context</parameter> "
"is <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>, the default "
"GLib's main context is used."
msgstr ""
"<parameter>context</parameter>用の新しい<link linkend=\"GCutEeventLoop"
"\"><type>GCutEeventLoop</type></link>を作ります。<parameter>context</"
"parameter>が<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>なら"
"GLibのデフォルトGMainContextが使われます。"

#: xml/gcut-glib-event-loop.xml:59(para)
msgid ""
"a <link linkend=\"GMainContext\"><type>GMainContext</type></link> or <link "
"linkend=\"NULL:CAPS\"><literal>NULL</literal></link>"
msgstr ""
"<link linkend=\"GMainContext\"><type>GMainContext</type></link>または<link "
"linkend=\"NULL:CAPS\"><literal>NULL</literal></link>。"

#: xml/gcut-glib-event-loop.xml:64(para)
msgid ""
"a new <link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link>."
msgstr ""
"新しい<link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link>。"

#: xml/gcut-event-loop.xml:7(refentrytitle) xml/gcut-event-loop.xml:12(refname)
msgid "Abstracted event loop"
msgstr "抽象化されたイベントループ"

#: xml/gcut-event-loop.xml:13(refpurpose)
msgid "Abstracted event loop API for customizing event loop in GCutter."
msgstr ""
"GCutterで使うイベントループをカスタマイズするための抽象化されたイベントループ"
"API。"

#: xml/gcut-event-loop.xml:25(link) xml/gcut-event-loop.xml:90(primary)
#: xml/api-index-full.xml:312(link)
msgid "gcut_event_loop_error_quark"
msgstr ""

#: xml/gcut-event-loop.xml:27(link) xml/gcut-event-loop.xml:98(primary)
#: xml/api-index-full.xml:316(link) xml/api-index-1.1.6.xml:17(link)
msgid "gcut_event_loop_run"
msgstr ""

#: xml/gcut-event-loop.xml:29(link) xml/gcut-event-loop.xml:118(primary)
#: xml/api-index-full.xml:313(link) xml/api-index-1.1.6.xml:14(link)
msgid "gcut_event_loop_iterate"
msgstr ""

#: xml/gcut-event-loop.xml:31(link) xml/gcut-event-loop.xml:149(primary)
#: xml/api-index-full.xml:314(link) xml/api-index-1.1.6.xml:15(link)
msgid "gcut_event_loop_quit"
msgstr ""

#: xml/gcut-event-loop.xml:33(link) xml/gcut-event-loop.xml:169(primary)
#: xml/api-index-full.xml:319(link) xml/api-index-1.1.6.xml:20(link)
msgid "gcut_event_loop_watch_io"
msgstr ""

#: xml/gcut-event-loop.xml:35(link) xml/gcut-event-loop.xml:215(primary)
#: xml/api-index-full.xml:317(link) xml/api-index-1.1.6.xml:18(link)
msgid "gcut_event_loop_watch_child"
msgstr ""

#: xml/gcut-event-loop.xml:37(link) xml/gcut-event-loop.xml:254(primary)
#: xml/api-index-full.xml:318(link) xml/api-index-1.1.6.xml:19(link)
msgid "gcut_event_loop_watch_child_full"
msgstr ""

#: xml/gcut-event-loop.xml:39(link) xml/gcut-event-loop.xml:302(primary)
#: xml/api-index-full.xml:309(link) xml/api-index-1.1.6.xml:12(link)
msgid "gcut_event_loop_add_timeout"
msgstr ""

#: xml/gcut-event-loop.xml:41(link) xml/gcut-event-loop.xml:340(primary)
#: xml/api-index-full.xml:310(link) xml/api-index-1.1.6.xml:13(link)
msgid "gcut_event_loop_add_timeout_full"
msgstr ""

#: xml/gcut-event-loop.xml:43(link) xml/gcut-event-loop.xml:387(primary)
#: xml/api-index-full.xml:307(link) xml/api-index-1.1.6.xml:10(link)
msgid "gcut_event_loop_add_idle"
msgstr ""

#: xml/gcut-event-loop.xml:45(link) xml/gcut-event-loop.xml:420(primary)
#: xml/api-index-full.xml:308(link) xml/api-index-1.1.6.xml:11(link)
msgid "gcut_event_loop_add_idle_full"
msgstr ""

#: xml/gcut-event-loop.xml:47(link) xml/gcut-event-loop.xml:462(primary)
#: xml/api-index-full.xml:315(link) xml/api-index-1.1.6.xml:16(link)
msgid "gcut_event_loop_remove"
msgstr ""

#: xml/gcut-event-loop.xml:60(link) xml/gcut-event-loop.xml:492(title)
#: xml/gcut-event-loop.xml:493(primary) xml/api-index-full.xml:311(link)
msgid "GCUT_EVENT_LOOP_ERROR"
msgstr ""

#: xml/gcut-event-loop.xml:68(screen)
#, no-wrap
msgid ""
"    <placeholder-1/>\n"
"    <placeholder-2/> GCutEventLoop\n"
msgstr ""

#: xml/gcut-event-loop.xml:76(para)
msgid ""
"<link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> "
"encapsulates event loop. For example, event loop is used in <link linkend="
"\"GCutProcess\"><type>GCutProcess</type></link>. It uses the GLib's default "
"main context for it."
msgstr ""
"<link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link>はイベント"
"ループをカプセル化します。イベントループは<link linkend=\"GCutProcess"
"\"><type>GCutProcess</type></link>で使われています。GCutProcessはデフォルトで"
"はGLibのデフォルトGMainContextを使います。"

#: xml/gcut-event-loop.xml:79(para)
msgid ""
"Normally, a custom <link linkend=\"GCutEventLoop\"><type>GCutEventLoop</"
"type></link> isn't required. It is needed some special case. For example, "
"using libev as event loop backend instead of GLib's main loop."
msgstr ""
"ふつうはカスタム<link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></"
"link>は必要ありません。必要になるのは特別な場合だけです。例えば、イベントルー"
"プのバックエンドにGLibのGMainLoopではなく、libevのイベントループに使っている"
"場合です。"

#: xml/gcut-event-loop.xml:82(para)
msgid ""
"GCutter provides <link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></"
"link> for GLib's main context and main loop, <link linkend="
"\"GCutGLibEventLoop\"><type>GCutGLibEventLoop</type></link>."
msgstr ""
"GCutterはGLibのGMainContextとGMainLoop用の<link linkend=\"GCutEventLoop"
"\"><type>GCutEventLoop</type></link>である<link linkend=\"GCutGLibEventLoop"
"\"><type>GCutGLibEventLoop</type></link>を提供します。"

#: xml/gcut-event-loop.xml:89(title)
msgid "gcut_event_loop_error_quark ()"
msgstr ""

#: xml/gcut-event-loop.xml:91(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GQuark\"><returnvalue>GQuark</returnvalue></link>\n"
"gcut_event_loop_error_quark (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/gcut-event-loop.xml:97(title)
msgid "gcut_event_loop_run ()"
msgstr ""

#: xml/gcut-event-loop.xml:99(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_event_loop_run (<parameter><link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> *loop</parameter>);"
msgstr "<link linkend=\"GCutGLibEventLoop\"><type>GCutGLibEventLoop</type></link>はGLibのGMainContextとGMainLoop用の<link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link>実装です。"

#: xml/gcut-event-loop.xml:101(para)
msgid ""
"Runs the given event loop until <link linkend=\"gcut-event-loop-quit"
"\"><function>gcut_event_loop_quit()</function></link> is called on the loop."
msgstr ""
"<link linkend=\"gcut-event-loop-quit\"><function>gcut_event_loop_quit()</"
"function></link>が呼ばれるまでイベントループを回します。"

#: xml/gcut-event-loop.xml:117(title)
msgid "gcut_event_loop_iterate ()"
msgstr ""

#: xml/gcut-event-loop.xml:119(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_event_loop_iterate (<parameter><link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> *loop</parameter>,\n"
"                         <parameter><link linkend=\"gboolean\"><type>gboolean</type></link> may_block</parameter>);"
msgstr ""

#: xml/gcut-event-loop.xml:122(para)
msgid ""
"Runs a single iteration for the given event loop. If no events are ready and "
"<parameter>may_block</parameter> is <link linkend=\"TRUE:CAPS"
"\"><literal>TRUE</literal></link>, waiting for a event become ready. "
"Otherwise, if <parameter>may_block</parameter> is <link linkend=\"FALSE:CAPS"
"\"><literal>FALSE</literal></link>, events are not waited to become ready."
msgstr ""
"イベントループを1回だけ回します。もし、イベントがなく<parameter>may_block</"
"parameter>が<link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></link>なら、"
"イベントがくるまで待ちつづけます。<parameter>may_block</parameter>が<link "
"linkend=\"FALSE:CAPS\"><literal>FALSE</literal></link>なら、イベントがくるの"
"を待ちません。"

#: xml/gcut-event-loop.xml:139(para)
msgid "may_block"
msgstr ""

#: xml/gcut-event-loop.xml:140(para)
msgid "whether the call may block."
msgstr "呼び出しがブロックするかどうか。"

#: xml/gcut-event-loop.xml:145(para)
msgid ""
"<link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></link> if a event was "
"dispatched."
msgstr ""
"イベントを処理したら<link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></"
"link>。"

#: xml/gcut-event-loop.xml:148(title)
msgid "gcut_event_loop_quit ()"
msgstr ""

#: xml/gcut-event-loop.xml:150(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_event_loop_quit (<parameter><link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> *loop</parameter>);"
msgstr "<link linkend=\"GCutGLibEventLoop\"><type>GCutGLibEventLoop</type></link>はGLibのGMainContextとGMainLoop用の<link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link>実装です。"

#: xml/gcut-event-loop.xml:152(para)
msgid "Stops the <parameter>loop</parameter> from running."
msgstr "実行中の<parameter>loop</parameter>を止めます。"

#: xml/gcut-event-loop.xml:168(title)
msgid "gcut_event_loop_watch_io ()"
msgstr ""

#: xml/gcut-event-loop.xml:170(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_event_loop_watch_io (<parameter><link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> *loop</parameter>,\n"
"                          <parameter><link linkend=\"GIOChannel\"><type>GIOChannel</type></link> *channel</parameter>,\n"
"                          <parameter><link linkend=\"GIOCondition\"><type>GIOCondition</type></link> condition</parameter>,\n"
"                          <parameter><link linkend=\"GIOFunc\"><type>GIOFunc</type></link> function</parameter>,\n"
"                          <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> data</parameter>);"
msgstr ""

#: xml/gcut-event-loop.xml:176(para)
#, fuzzy
msgid ""
"Adds the <parameter>channel</parameter> into <parameter>loop</parameter> "
"with the default priority. <parameter>function</parameter> is called when "
"<parameter>condition</parameter> is met for the given <parameter>channel</"
"parameter> ."
msgstr ""
"<parameter>channel</parameter>をデフォルトの優先度で<parameter>loop</"
"parameter>に追加します。<parameter>channel</parameter>に"
"<parameter>condition</parameter>イベントが発生したら<parameter>function</"
"parameter>が呼ばれます。"

#: xml/gcut-event-loop.xml:195(para)
msgid "channel"
msgstr ""

#: xml/gcut-event-loop.xml:196(para)
msgid "a <link linkend=\"GIOChannel\"><type>GIOChannel</type></link>"
msgstr "<link linkend=\"GIOChannel\"><type>GIOChannel</type></link>。"

#: xml/gcut-event-loop.xml:198(para)
#, fuzzy
msgid "condition"
msgstr "説明"

#: xml/gcut-event-loop.xml:199(para)
msgid "conditions to watch for"
msgstr "監視する状態。"

#: xml/gcut-event-loop.xml:201(para) xml/gcut-event-loop.xml:240(para)
#: xml/gcut-event-loop.xml:285(para) xml/gcut-event-loop.xml:326(para)
#: xml/gcut-event-loop.xml:370(para) xml/gcut-event-loop.xml:406(para)
#: xml/gcut-event-loop.xml:445(para) xml/cut-assertions.xml:2433(para)
#, fuzzy
msgid "function"
msgstr "呼び出される関数"

#: xml/gcut-event-loop.xml:202(para) xml/gcut-event-loop.xml:241(para)
#: xml/gcut-event-loop.xml:286(para) xml/gcut-event-loop.xml:327(para)
#: xml/gcut-event-loop.xml:371(para) xml/gcut-event-loop.xml:407(para)
#: xml/gcut-event-loop.xml:446(para)
msgid "function to call"
msgstr "呼び出される関数"

#: xml/gcut-event-loop.xml:205(para) xml/gcut-event-loop.xml:244(para)
#: xml/gcut-event-loop.xml:289(para) xml/gcut-event-loop.xml:330(para)
#: xml/gcut-event-loop.xml:374(para) xml/gcut-event-loop.xml:410(para)
#: xml/gcut-event-loop.xml:449(para)
msgid "data to pass to <parameter>function</parameter>"
msgstr "<parameter>function</parameter>に渡されるデータ"

#: xml/gcut-event-loop.xml:211(para) xml/gcut-event-loop.xml:250(para)
#: xml/gcut-event-loop.xml:298(para) xml/gcut-event-loop.xml:336(para)
#: xml/gcut-event-loop.xml:383(para) xml/gcut-event-loop.xml:416(para)
#: xml/gcut-event-loop.xml:458(para)
msgid "the event ID."
msgstr "イベントID。"

#: xml/gcut-event-loop.xml:214(title)
msgid "gcut_event_loop_watch_child ()"
msgstr ""

#: xml/gcut-event-loop.xml:216(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_event_loop_watch_child (<parameter><link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> *loop</parameter>,\n"
"                             <parameter><link linkend=\"GPid\"><type>GPid</type></link> pid</parameter>,\n"
"                             <parameter><link linkend=\"GChildWatchFunc\"><type>GChildWatchFunc</type></link> function</parameter>,\n"
"                             <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> data</parameter>);"
msgstr ""

#: xml/gcut-event-loop.xml:221(para)
msgid ""
"Adds the <parameter>function</parameter> to be called when the child "
"indicated by <parameter>pid</parameter> exits into <parameter>loop</"
"parameter> with the default priority."
msgstr ""
"<parameter>pid</parameter>の子プロセスが終了した時に呼ばれる"
"<parameter>function</parameter>をデフォルトの優先度で<parameter>loop</"
"parameter>に追加します。"

#: xml/gcut-event-loop.xml:237(para) xml/gcut-event-loop.xml:282(para)
#: xml/cut-experimental.xml:93(para) xml/cut-experimental.xml:130(para)
#: xml/cut-experimental.xml:168(para)
msgid "pid"
msgstr ""

#: xml/gcut-event-loop.xml:238(para) xml/gcut-event-loop.xml:283(para)
msgid "process ID to watch"
msgstr "監視するプロセスのID"

#: xml/gcut-event-loop.xml:253(title)
msgid "gcut_event_loop_watch_child_full ()"
msgstr ""

#: xml/gcut-event-loop.xml:255(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_event_loop_watch_child_full (<parameter><link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> *loop</parameter>,\n"
"                                  <parameter><link linkend=\"gint\"><type>gint</type></link> priority</parameter>,\n"
"                                  <parameter><link linkend=\"GPid\"><type>GPid</type></link> pid</parameter>,\n"
"                                  <parameter><link linkend=\"GChildWatchFunc\"><type>GChildWatchFunc</type></link> function</parameter>,\n"
"                                  <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> data</parameter>,\n"
"                                  <parameter><link linkend=\"GDestroyNotify\"><type>GDestroyNotify</type></link> notify</parameter>);"
msgstr ""

#: xml/gcut-event-loop.xml:262(para)
#, fuzzy
msgid ""
"Adds the <parameter>function</parameter> to be called when the child "
"indicated by <parameter>pid</parameter> exits into <parameter>loop</"
"parameter> with the <parameter>priority</parameter> ."
msgstr ""
"<parameter>pid</parameter>の子プロセスが終了した時に呼ばれる"
"<parameter>function</parameter>をデフォルトの優先度で<parameter>loop</"
"parameter>に追加します。"

#: xml/gcut-event-loop.xml:279(para) xml/gcut-event-loop.xml:363(para)
#: xml/gcut-event-loop.xml:442(para)
msgid "priority"
msgstr ""

#: xml/gcut-event-loop.xml:280(para) xml/gcut-event-loop.xml:364(para)
#: xml/gcut-event-loop.xml:443(para)
msgid "the priority of the event."
msgstr "このイベントの優先度。"

#: xml/gcut-event-loop.xml:292(para) xml/gcut-event-loop.xml:377(para)
#: xml/gcut-event-loop.xml:452(para)
msgid "notify"
msgstr ""

#: xml/gcut-event-loop.xml:293(para) xml/gcut-event-loop.xml:378(para)
#: xml/gcut-event-loop.xml:453(para)
msgid ""
"function to call when the event is removed, or <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>"
msgstr ""
"このイベントが削除された時に呼ばれる関数または<link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>。"

#: xml/gcut-event-loop.xml:301(title)
msgid "gcut_event_loop_add_timeout ()"
msgstr ""

#: xml/gcut-event-loop.xml:303(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_event_loop_add_timeout (<parameter><link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> *loop</parameter>,\n"
"                             <parameter><link linkend=\"gdouble\"><type>gdouble</type></link> interval_in_seconds</parameter>,\n"
"                             <parameter><link linkend=\"GSourceFunc\"><type>GSourceFunc</type></link> function</parameter>,\n"
"                             <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> data</parameter>);"
msgstr ""

#: xml/gcut-event-loop.xml:308(para)
msgid ""
"Adds the <parameter>function</parameter> to be called at regular intervals, "
"with the default priority."
msgstr ""
"一定間隔で呼び出される<parameter>function</parameter>をデフォルト優先度で追加"
"します。"

#: xml/gcut-event-loop.xml:322(para) xml/gcut-event-loop.xml:366(para)
msgid "interval_in_seconds"
msgstr ""

#: xml/gcut-event-loop.xml:323(para) xml/gcut-event-loop.xml:367(para)
#, fuzzy
msgid ""
"the time between calls to the <parameter>function</parameter> , in seconds."
msgstr "<parameter>function</parameter>を呼び出す感覚。単位は秒。"

#: xml/gcut-event-loop.xml:339(title)
msgid "gcut_event_loop_add_timeout_full ()"
msgstr ""

#: xml/gcut-event-loop.xml:341(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_event_loop_add_timeout_full (<parameter><link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> *loop</parameter>,\n"
"                                  <parameter><link linkend=\"gint\"><type>gint</type></link> priority</parameter>,\n"
"                                  <parameter><link linkend=\"gdouble\"><type>gdouble</type></link> interval_in_seconds</parameter>,\n"
"                                  <parameter><link linkend=\"GSourceFunc\"><type>GSourceFunc</type></link> function</parameter>,\n"
"                                  <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> data</parameter>,\n"
"                                  <parameter><link linkend=\"GDestroyNotify\"><type>GDestroyNotify</type></link> notify</parameter>);"
msgstr ""

#: xml/gcut-event-loop.xml:348(para)
#, fuzzy
msgid ""
"Adds the <parameter>function</parameter> to be called at regular intervals, "
"with the <parameter>priority</parameter> ."
msgstr ""
"定期的に呼び出される関数を優先度<parameter>priority</parameter>で追加します。"

#: xml/gcut-event-loop.xml:386(title)
msgid "gcut_event_loop_add_idle ()"
msgstr ""

#: xml/gcut-event-loop.xml:388(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_event_loop_add_idle (<parameter><link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> *loop</parameter>,\n"
"                          <parameter><link linkend=\"GSourceFunc\"><type>GSourceFunc</type></link> function</parameter>,\n"
"                          <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> data</parameter>);"
msgstr ""

#: xml/gcut-event-loop.xml:392(para)
msgid ""
"Adds the <parameter>function</parameter> to be called whenever there are no "
"higher priority events pending with the default priority."
msgstr ""
"デフォルト優先度より高い優先度がない場合に呼び出される関数"
"<parameter>function</parameter>を追加します。"

#: xml/gcut-event-loop.xml:419(title)
msgid "gcut_event_loop_add_idle_full ()"
msgstr ""

#: xml/gcut-event-loop.xml:421(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_event_loop_add_idle_full (<parameter><link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> *loop</parameter>,\n"
"                               <parameter><link linkend=\"gint\"><type>gint</type></link> priority</parameter>,\n"
"                               <parameter><link linkend=\"GSourceFunc\"><type>GSourceFunc</type></link> function</parameter>,\n"
"                               <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> data</parameter>,\n"
"                               <parameter><link linkend=\"GDestroyNotify\"><type>GDestroyNotify</type></link> notify</parameter>);"
msgstr ""

#: xml/gcut-event-loop.xml:427(para)
#, fuzzy
msgid ""
"Adds the <parameter>function</parameter> to be called whenever there are no "
"higher priority events pending with the <parameter>priority</parameter> ."
msgstr ""
"優先度<parameter>priority</parameter>より高い優先度のイベントがない場合に呼び"
"出される関数<parameter>function</parameter>を追加します。"

#: xml/gcut-event-loop.xml:461(title)
msgid "gcut_event_loop_remove ()"
msgstr ""

#: xml/gcut-event-loop.xml:463(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_event_loop_remove (<parameter><link linkend=\"GCutEventLoop\"><type>GCutEventLoop</type></link> *loop</parameter>,\n"
"                        <parameter><link linkend=\"guint\"><type>guint</type></link> tag</parameter>);"
msgstr ""

#: xml/gcut-event-loop.xml:466(para)
#, fuzzy
msgid "Removes the event with the given ID, <parameter>tag</parameter> ."
msgstr "IDが<parameter>tag</parameter>のイベントを削除します。"

#: xml/gcut-event-loop.xml:479(para)
msgid "tag"
msgstr ""

#: xml/gcut-event-loop.xml:480(para)
msgid "the ID of the source to remove"
msgstr "削除するソースのID。"

#: xml/gcut-event-loop.xml:485(para)
msgid ""
"<link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></link> if the source was "
"found and removed."
msgstr ""
"ソースが見つかって削除されたら<link linkend=\"TRUE:CAPS\"><literal>TRUE</"
"literal></link>。"

#: xml/gcut-event-loop.xml:494(programlisting)
#, no-wrap
msgid "#define GCUT_EVENT_LOOP_ERROR           (gcut_event_loop_error_quark())\n"
msgstr ""

#: xml/gcut-error.xml:7(refentrytitle) xml/gcut-error.xml:12(refname)
#: xml/api-index-full.xml:305(link) xml/api-index-full.xml:306(link)
#: xml/api-index-1.0.5.xml:28(link) xml/api-index-1.0.5.xml:29(link)
msgid "Assertion Utilities for GError"
msgstr "GError用の検証ユーティリティ"

#: xml/gcut-error.xml:13(refpurpose)
msgid ""
"Utilities to write assertions related to <link linkend=\"GError"
"\"><placeholder-1/></link> more easily."
msgstr ""
"<link linkend=\"GError\"><placeholder-1/></link>に関する検証をもっと簡単に書"
"くためのユーティリティ。"

#: xml/gcut-error.xml:25(link) xml/gcut-error.xml:47(primary)
#: xml/api-index-full.xml:305(link) xml/api-index-1.0.5.xml:28(link)
msgid "gcut_error_equal"
msgstr ""

#: xml/gcut-error.xml:27(link) xml/gcut-error.xml:78(primary)
#: xml/api-index-full.xml:306(link) xml/api-index-1.0.5.xml:29(link)
msgid "gcut_error_inspect"
msgstr ""

#: xml/gcut-error.xml:39(para)
msgid ""
"The utilities help you to write assertions that are related to <link linkend="
"\"GError\"><type>GError</type></link>."
msgstr ""
"このユーティリティは<link linkend=\"GError\"><type>GError</type></link>に関す"
"る検証の作成を補助します。"

#: xml/gcut-error.xml:46(title)
msgid "gcut_error_equal ()"
msgstr ""

#: xml/gcut-error.xml:48(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_error_equal (<parameter>const <link linkend=\"GError\"><type>GError</type></link> *error1</parameter>,\n"
"                  <parameter>const <link linkend=\"GError\"><type>GError</type></link> *error2</parameter>);"
msgstr ""

#: xml/gcut-error.xml:51(para)
#, fuzzy
msgid ""
"Compares two <link linkend=\"GError\"><type>GError</type></link>, "
"<parameter>error1</parameter> and <parameter>error2</parameter> ."
msgstr ""
"ふたつの<link linkend=\"GError\"><type>GError</type></link>、"
"<parameter>error1</parameter>と<parameter>error2</parameter>を比較します。"

#: xml/gcut-error.xml:62(para)
#, fuzzy
msgid "error1"
msgstr "入出力エラー。"

#: xml/gcut-error.xml:63(para) xml/gcut-error.xml:66(para)
msgid "a <link linkend=\"GError\"><type>GError</type></link> to be compared."
msgstr "比較する<link linkend=\"GError\"><type>GError</type></link>の値。"

#: xml/gcut-error.xml:65(para)
#, fuzzy
msgid "error2"
msgstr "入出力エラー。"

#: xml/gcut-error.xml:71(para)
msgid ""
"<link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></link> if both of "
"<parameter>error1</parameter> and <parameter>error2</parameter> have the "
"same domain, code and message, <link linkend=\"FALSE:CAPS\"><literal>FALSE</"
"literal></link> otherwise."
msgstr ""
"<parameter>error1</parameter>と<parameter>error2</parameter>が同じドメイン、"
"コード、メッセージなら<link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></"
"link>、そうでなれば<link linkend=\"FALSE:CAPS\"><literal>FALSE</literal></"
"link>。"

#: xml/gcut-error.xml:77(title)
msgid "gcut_error_inspect ()"
msgstr ""

#: xml/gcut-error.xml:79(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_error_inspect (<parameter>const <link linkend=\"GError\"><type>GError</type></link> *error</parameter>);"
msgstr ""

#: xml/gcut-error.xml:81(para)
#, fuzzy
msgid ""
"Inspects <parameter>error</parameter> . The returned string should be freed "
"when no longer needed."
msgstr ""
"<parameter>error</parameter>の詳細を返します。返された文字列が必要なくなった"
"ときは開放してください。"

#: xml/gcut-error.xml:93(para)
msgid "a <link linkend=\"GError\"><type>GError</type></link> value."
msgstr "<link linkend=\"GError\"><type>GError</type></link>の値。"

#: xml/gcut-error.xml:98(para)
msgid "inspected <parameter>error</parameter> as a string."
msgstr "<parameter>error</parameter>の詳細を示した文字列。"

#: xml/gcut-enum.xml:7(refentrytitle) xml/gcut-enum.xml:12(refname)
#: xml/api-index-full.xml:187(link) xml/api-index-full.xml:301(link)
#: xml/api-index-full.xml:302(link) xml/api-index-full.xml:303(link)
#: xml/api-index-full.xml:304(link) xml/api-index-full.xml:320(link)
#: xml/api-index-full.xml:321(link) xml/api-index-full.xml:322(link)
#: xml/api-index-1.0.6.xml:15(link) xml/api-index-1.0.6.xml:48(link)
#: xml/api-index-1.0.6.xml:49(link) xml/api-index-1.0.6.xml:50(link)
#: xml/api-index-1.0.6.xml:51(link) xml/api-index-1.0.5.xml:27(link)
#: xml/api-index-1.0.5.xml:30(link)
msgid "Assertion Utilities for GEnum and GFlags"
msgstr "GEnumとGFlags用の検証ユーティリティ"

#: xml/gcut-enum.xml:14(type)
msgid "GEnum"
msgstr ""

#: xml/gcut-enum.xml:14(type)
msgid "GFlags"
msgstr ""

#: xml/gcut-enum.xml:13(refpurpose)
msgid ""
"Utilities to write assertions related to <link linkend=\"GEnum"
"\"><placeholder-1/></link> or <link linkend=\"GFlags\"><placeholder-2/></"
"link> more easily."
msgstr ""
"<link linkend=\"GEnum\"><placeholder-1/></link>または<link linkend=\"GFlags"
"\"><placeholder-2/></link>に関する検証をもっと簡単に書くためのユーティリ"
"ティ。"

#: xml/gcut-enum.xml:25(link) xml/gcut-enum.xml:69(primary)
#: xml/api-index-full.xml:302(link)
msgid "gcut_enum_error_quark"
msgstr ""

#: xml/gcut-enum.xml:27(link) xml/gcut-enum.xml:77(primary)
#: xml/api-index-full.xml:303(link) xml/api-index-1.0.5.xml:27(link)
msgid "gcut_enum_inspect"
msgstr ""

#: xml/gcut-enum.xml:29(link) xml/gcut-enum.xml:107(primary)
#: xml/api-index-full.xml:304(link) xml/api-index-1.0.6.xml:49(link)
msgid "gcut_enum_parse"
msgstr ""

#: xml/gcut-enum.xml:31(link) xml/gcut-enum.xml:147(primary)
#: xml/api-index-full.xml:321(link) xml/api-index-1.0.5.xml:30(link)
msgid "gcut_flags_inspect"
msgstr ""

#: xml/gcut-enum.xml:33(link) xml/gcut-enum.xml:177(primary)
#: xml/api-index-full.xml:322(link) xml/api-index-1.0.6.xml:51(link)
msgid "gcut_flags_parse"
msgstr ""

#: xml/gcut-enum.xml:35(link) xml/gcut-enum.xml:218(primary)
#: xml/api-index-full.xml:320(link) xml/api-index-1.0.6.xml:50(link)
msgid "gcut_flags_get_all"
msgstr ""

#: xml/gcut-enum.xml:48(link) xml/gcut-enum.xml:249(title)
#: xml/gcut-enum.xml:250(primary) xml/api-index-full.xml:301(link)
#: xml/api-index-1.0.6.xml:48(link)
msgid "GCUT_ENUM_ERROR"
msgstr ""

#: xml/gcut-enum.xml:49(link) xml/gcut-enum.xml:258(primary)
#: xml/api-index-full.xml:187(link) xml/api-index-1.0.6.xml:15(link)
msgid "GCutEnumError"
msgstr ""

#: xml/gcut-enum.xml:61(para)
msgid ""
"The utilities help you to write assertions that are related to <link linkend="
"\"GEnum\"><type>GEnum</type></link> or <link linkend=\"GFlags"
"\"><type>GFlags</type></link>."
msgstr ""
"このユーティリティは<link linkend=\"GEnum\"><type>GEnum</type></link>または"
"<link linkend=\"GFlags\"><type>GFlags</type></link>に関する検証の作成を補助し"
"ます。"

#: xml/gcut-enum.xml:68(title)
msgid "gcut_enum_error_quark ()"
msgstr ""

#: xml/gcut-enum.xml:70(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GQuark\"><returnvalue>GQuark</returnvalue></link>\n"
"gcut_enum_error_quark (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/gcut-enum.xml:76(title)
msgid "gcut_enum_inspect ()"
msgstr ""

#: xml/gcut-enum.xml:78(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_enum_inspect (<parameter><link linkend=\"GType\"><type>GType</type></link> enum_type</parameter>,\n"
"                   <parameter><link linkend=\"gint\"><type>gint</type></link> enum_value</parameter>);"
msgstr ""

#: xml/gcut-enum.xml:81(para)
#, fuzzy
msgid ""
"Inspects <parameter>enum_type</parameter> value, <parameter>enum_value</"
"parameter> . The returned string should be freed when no longer needed."
msgstr ""
"<parameter>enum_type</parameter>の値<parameter>enum_value</parameter>の詳細を"
"返します。返された文字列が必要なくなったときは開放してください。"

#: xml/gcut-enum.xml:93(para) xml/gcut-enum.xml:129(para)
#: xml/gcut-assertions.xml:823(para)
#, fuzzy
msgid "enum_type"
msgstr "GEnumの型"

#: xml/gcut-enum.xml:96(para) xml/gcut-enum.xml:132(para)
msgid "enum_value"
msgstr ""

#: xml/gcut-enum.xml:97(para)
msgid ""
"a <link linkend=\"GEnum\"><type>GEnum</type></link> value to be inspected."
msgstr "詳細を示す<link linkend=\"GEnum\"><type>GEnum</type></link>の値。"

#: xml/gcut-enum.xml:102(para)
msgid "inspected <parameter>enum_value</parameter> as a string."
msgstr "<parameter>enum_value</parameter>の詳細を示した文字列。"

#: xml/gcut-enum.xml:106(title)
msgid "gcut_enum_parse ()"
msgstr ""

#: xml/gcut-enum.xml:108(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gint\"><returnvalue>gint</returnvalue></link>\n"
"gcut_enum_parse (<parameter><link linkend=\"GType\"><type>GType</type></link> enum_type</parameter>,\n"
"                 <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *enum_value</parameter>,\n"
"                 <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-enum.xml:112(para)
#, fuzzy
msgid ""
"Parses <parameter>enum_value</parameter> and returns a enum value of "
"<parameter>enum_type</parameter> . <parameter>enum_value</parameter> should "
"be enum name or nick name. If <parameter>enum_value</parameter> isn't match "
"then <parameter>error</parameter> is set to a <link linkend=\"GCutEnumError"
"\"><type>GCutEnumError</type></link>."
msgstr ""
"<parameter>enum_value</parameter>をパースし、<parameter>enum_type</parameter>"
"型の列挙値を返します。<parameter>enum_value</parameter>は列挙名またはニック"
"ネームでなければいけません。<parameter>enum_value</parameter>がマッチしない場"
"合は<parameter>error</parameter>に<link linkend=\"GCutEnumError"
"\"><type>GCutEnumError</type></link>エラーが設定されます。"

#: xml/gcut-enum.xml:133(para) xml/gcut-enum.xml:204(para)
msgid "a string to be parsed."
msgstr "パースされる文字列。"

#: xml/gcut-enum.xml:141(para)
#, fuzzy
msgid ""
"enum value of <parameter>enum_type</parameter> corresponded to "
"<parameter>enum_value</parameter> ."
msgstr ""
"<parameter>enum_value</parameter>に対応する<parameter>enum_type</parameter>の"
"値。"

#: xml/gcut-enum.xml:146(title)
msgid "gcut_flags_inspect ()"
msgstr ""

#: xml/gcut-enum.xml:148(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_flags_inspect (<parameter><link linkend=\"GType\"><type>GType</type></link> flags_type</parameter>,\n"
"                    <parameter><link linkend=\"guint\"><type>guint</type></link> flags_value</parameter>);"
msgstr ""

#: xml/gcut-enum.xml:151(para)
#, fuzzy
msgid ""
"Inspects <parameter>flags_type</parameter> value, <parameter>flags_value</"
"parameter> . The returned string should be freed when no longer needed."
msgstr ""
"<parameter>flags_type</parameter>の値<parameter>flags_value</parameter>の詳細"
"を返します。返された文字列が必要なくなったときは開放してください。"

#: xml/gcut-enum.xml:163(para) xml/gcut-enum.xml:200(para)
#: xml/gcut-enum.xml:232(para) xml/gcut-assertions.xml:869(para)
#, fuzzy
msgid "flags_type"
msgstr "GFlagsの型"

#: xml/gcut-enum.xml:166(para) xml/gcut-enum.xml:203(para)
msgid "flags_value"
msgstr ""

#: xml/gcut-enum.xml:167(para)
msgid ""
"a <link linkend=\"GFlags\"><type>GFlags</type></link> value to be inspected."
msgstr "詳細を示す<link linkend=\"GFlags\"><type>GFlags</type></link>の値。"

#: xml/gcut-enum.xml:172(para)
msgid "inspected <parameter>flags_value</parameter> as a string."
msgstr "<parameter>flags_value</parameter>の詳細を示した文字列。"

#: xml/gcut-enum.xml:176(title)
msgid "gcut_flags_parse ()"
msgstr ""

#: xml/gcut-enum.xml:178(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_flags_parse (<parameter><link linkend=\"GType\"><type>GType</type></link> flags_type</parameter>,\n"
"                  <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *flags_value</parameter>,\n"
"                  <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-enum.xml:182(para)
#, fuzzy
msgid ""
"Parses <parameter>flags_value</parameter> and returns a flags value of "
"<parameter>flags_type</parameter> . <parameter>flags_value</parameter> "
"should be formated as \"nick-or-name1|nick-or-name2|...|nick-or-nameN\". If "
"<parameter>flags_value</parameter> includes unknown flag then "
"<parameter>error</parameter> is set to a <link linkend=\"GCutEnumError"
"\"><type>GCutEnumError</type></link>."
msgstr ""
"<parameter>flags_value</parameter>をパースし、<parameter>flags_type</"
"parameter>型のフラグ値を返します。<parameter>flags_value</parameter>は\"ニッ"
"クネームまたは名前1|ニックネームまたは名前2|...|ニックネームまたは名前N\"とい"
"う書式でなければいけません。<parameter>flags_value</parameter>が未知のフラグ"
"を含んでいる場合は、<parameter>error</parameter>に<link linkend="
"\"GCutEnumError\"><type>GCutEnumError</type></link>エラーが設定されます。"

#: xml/gcut-enum.xml:212(para)
#, fuzzy
msgid ""
"flags value of <parameter>flags_type</parameter> corresponded to "
"<parameter>flags_value</parameter> ."
msgstr ""
"<parameter>flags_value</parameter>に対応する<parameter>flags_type</parameter>"
"の値。"

#: xml/gcut-enum.xml:217(title)
msgid "gcut_flags_get_all ()"
msgstr ""

#: xml/gcut-enum.xml:219(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_flags_get_all (<parameter><link linkend=\"GType\"><type>GType</type></link> flags_type</parameter>,\n"
"                    <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-enum.xml:222(para)
msgid "Gets a flags value that includes all available flag values."
msgstr "すべてのフラグ値が有効なフラグ値を返します。"

#: xml/gcut-enum.xml:241(para)
msgid "a flags value that includes all available flag values."
msgstr "すべてのフラグ値が有効なフラグ値。"

#: xml/gcut-enum.xml:251(programlisting)
#, no-wrap
msgid "#define GCUT_ENUM_ERROR (gcut_enum_error_quark())\n"
msgstr ""

#: xml/gcut-enum.xml:253(para)
msgid ""
"Error domain for enum related operations. Errors in this domain will be from "
"the <link linkend=\"GCutEnumError\"><type>GCutEnumError</type></link> "
"enumeration."
msgstr ""
"列挙型関連操作用のエラードメインです。このドメインのエラーは<link linkend="
"\"GCutEnumError\"><type>GCutEnumError</type></link>列挙型のどれかです。"

#: xml/gcut-enum.xml:257(title)
msgid "enum GCutEnumError"
msgstr ""

#: xml/gcut-enum.xml:259(para)
msgid "Error codes returned by enum related operation."
msgstr "列挙型関連操作で返されるエラーコード。"

#: xml/gcut-enum.xml:268(para)
msgid "GCUT_ENUM_ERROR_INVALID_TYPE"
msgstr ""

#: xml/gcut-enum.xml:269(para)
msgid "Invalid type."
msgstr "不正な型。"

#: xml/gcut-enum.xml:273(para)
msgid "GCUT_ENUM_ERROR_INVALID_VALUE"
msgstr ""

#: xml/gcut-enum.xml:274(para)
msgid "Invalid value."
msgstr "不正な値。"

#: xml/gcut-egg.xml:7(refentrytitle) xml/gcut-egg.xml:12(refname)
msgid "External command (deprecated)"
msgstr "外部コマンド（非推奨）"

#: xml/gcut-egg.xml:13(refpurpose)
msgid "Convenience API for using external command. (deprecated)"
msgstr "外部コマンドを使うための便利API（非推奨）"

#: xml/gcut-egg.xml:25(link) xml/gcut-egg.xml:194(primary)
#: xml/api-index-full.xml:281(link) xml/api-index-deprecated.xml:31(link)
msgid "gcut_egg_error_quark"
msgstr ""

#: xml/gcut-egg.xml:26(returnvalue) xml/gcut-egg.xml:28(returnvalue)
#: xml/gcut-egg.xml:30(returnvalue) xml/gcut-egg.xml:32(returnvalue)
#: xml/gcut-egg.xml:34(returnvalue) xml/api-index-full.xml:181(link)
#: xml/api-index-full.xml:182(link) xml/api-index-full.xml:183(link)
#: xml/api-index-full.xml:184(link) xml/api-index-full.xml:185(link)
#: xml/api-index-full.xml:186(link) xml/api-index-full.xml:279(link)
#: xml/api-index-full.xml:280(link) xml/api-index-full.xml:281(link)
#: xml/api-index-full.xml:282(link) xml/api-index-full.xml:283(link)
#: xml/api-index-full.xml:284(link) xml/api-index-full.xml:285(link)
#: xml/api-index-full.xml:286(link) xml/api-index-full.xml:287(link)
#: xml/api-index-full.xml:288(link) xml/api-index-full.xml:289(link)
#: xml/api-index-full.xml:290(link) xml/api-index-full.xml:291(link)
#: xml/api-index-full.xml:292(link) xml/api-index-full.xml:293(link)
#: xml/api-index-full.xml:294(link) xml/api-index-full.xml:295(link)
#: xml/api-index-full.xml:296(link) xml/api-index-full.xml:297(link)
#: xml/api-index-full.xml:298(link) xml/api-index-full.xml:299(link)
#: xml/api-index-full.xml:300(link) xml/api-index-deprecated.xml:28(link)
#: xml/api-index-deprecated.xml:29(link) xml/api-index-deprecated.xml:30(link)
#: xml/api-index-deprecated.xml:31(link) xml/api-index-deprecated.xml:32(link)
#: xml/api-index-deprecated.xml:33(link) xml/api-index-deprecated.xml:34(link)
#: xml/api-index-deprecated.xml:35(link) xml/api-index-deprecated.xml:36(link)
#: xml/api-index-deprecated.xml:37(link) xml/api-index-deprecated.xml:38(link)
#: xml/api-index-deprecated.xml:39(link) xml/api-index-deprecated.xml:40(link)
#: xml/api-index-deprecated.xml:41(link) xml/api-index-deprecated.xml:42(link)
#: xml/api-index-deprecated.xml:43(link) xml/api-index-deprecated.xml:44(link)
#: xml/api-index-deprecated.xml:45(link) xml/api-index-deprecated.xml:46(link)
#: xml/api-index-deprecated.xml:47(link) xml/api-index-deprecated.xml:48(link)
#: xml/api-index-deprecated.xml:49(link) xml/api-index-deprecated.xml:50(link)
#: xml/api-index-1.0.6.xml:10(link) xml/api-index-1.0.6.xml:11(link)
#: xml/api-index-1.0.6.xml:12(link) xml/api-index-1.0.6.xml:13(link)
#: xml/api-index-1.0.6.xml:14(link) xml/api-index-1.0.6.xml:28(link)
#: xml/api-index-1.0.6.xml:29(link) xml/api-index-1.0.6.xml:30(link)
#: xml/api-index-1.0.6.xml:31(link) xml/api-index-1.0.6.xml:32(link)
#: xml/api-index-1.0.6.xml:33(link) xml/api-index-1.0.6.xml:34(link)
#: xml/api-index-1.0.6.xml:35(link) xml/api-index-1.0.6.xml:36(link)
#: xml/api-index-1.0.6.xml:37(link) xml/api-index-1.0.6.xml:38(link)
#: xml/api-index-1.0.6.xml:39(link) xml/api-index-1.0.6.xml:40(link)
#: xml/api-index-1.0.6.xml:41(link) xml/api-index-1.0.6.xml:42(link)
#: xml/api-index-1.0.6.xml:43(link) xml/api-index-1.0.6.xml:44(link)
#: xml/api-index-1.0.6.xml:45(link) xml/api-index-1.0.6.xml:46(link)
#: xml/api-index-1.0.6.xml:47(link)
msgid "GCutEgg"
msgstr ""

#: xml/gcut-egg.xml:26(entry) xml/gcut-egg.xml:28(entry)
#: xml/gcut-egg.xml:30(entry) xml/gcut-egg.xml:32(entry)
#: xml/gcut-egg.xml:34(entry)
#, fuzzy
msgid "<link linkend=\"GCutEgg\"><placeholder-1/></link> *"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/gcut-egg.xml:27(link) xml/gcut-egg.xml:203(primary)
#: xml/api-index-full.xml:291(link) xml/api-index-deprecated.xml:41(link)
#: xml/api-index-1.0.6.xml:38(link)
msgid "gcut_egg_new"
msgstr ""

#: xml/gcut-egg.xml:29(link) xml/gcut-egg.xml:233(primary)
#: xml/api-index-full.xml:295(link) xml/api-index-deprecated.xml:45(link)
#: xml/api-index-1.0.6.xml:42(link)
msgid "gcut_egg_new_va_list"
msgstr ""

#: xml/gcut-egg.xml:31(link) xml/gcut-egg.xml:263(primary)
#: xml/api-index-full.xml:292(link) xml/api-index-deprecated.xml:42(link)
#: xml/api-index-1.0.6.xml:39(link)
msgid "gcut_egg_new_argv"
msgstr ""

#: xml/gcut-egg.xml:33(link) xml/gcut-egg.xml:294(primary)
#: xml/api-index-full.xml:294(link) xml/api-index-deprecated.xml:44(link)
#: xml/api-index-1.0.6.xml:41(link)
msgid "gcut_egg_new_strings"
msgstr ""

#: xml/gcut-egg.xml:35(link) xml/gcut-egg.xml:320(primary)
#: xml/api-index-full.xml:293(link) xml/api-index-deprecated.xml:43(link)
#: xml/api-index-1.0.6.xml:40(link)
msgid "gcut_egg_new_array"
msgstr ""

#: xml/gcut-egg.xml:37(link) xml/gcut-egg.xml:346(primary)
#: xml/api-index-full.xml:297(link) xml/api-index-deprecated.xml:47(link)
#: xml/api-index-1.0.6.xml:44(link)
msgid "gcut_egg_set_flags"
msgstr ""

#: xml/gcut-egg.xml:39(link) xml/gcut-egg.xml:372(primary)
#: xml/api-index-full.xml:284(link) xml/api-index-deprecated.xml:34(link)
#: xml/api-index-1.0.6.xml:31(link)
msgid "gcut_egg_get_flags"
msgstr ""

#: xml/gcut-egg.xml:41(link) xml/gcut-egg.xml:397(primary)
#: xml/api-index-full.xml:296(link) xml/api-index-deprecated.xml:46(link)
#: xml/api-index-1.0.6.xml:43(link)
msgid "gcut_egg_set_env"
msgstr ""

#: xml/gcut-egg.xml:43(link) xml/gcut-egg.xml:428(primary)
#: xml/api-index-full.xml:282(link) xml/api-index-deprecated.xml:32(link)
#: xml/api-index-1.0.6.xml:29(link)
msgid "gcut_egg_get_env"
msgstr ""

#: xml/gcut-egg.xml:45(link) xml/gcut-egg.xml:455(primary)
#: xml/api-index-full.xml:289(link) xml/api-index-deprecated.xml:39(link)
#: xml/api-index-1.0.6.xml:36(link)
msgid "gcut_egg_hatch"
msgstr ""

#: xml/gcut-egg.xml:47(link) xml/gcut-egg.xml:483(primary)
#: xml/api-index-full.xml:279(link) xml/api-index-deprecated.xml:29(link)
#: xml/api-index-1.0.6.xml:28(link)
msgid "gcut_egg_close"
msgstr ""

#: xml/gcut-egg.xml:49(link) xml/gcut-egg.xml:505(primary)
#: xml/api-index-full.xml:300(link) xml/api-index-deprecated.xml:50(link)
#: xml/api-index-1.0.6.xml:47(link)
msgid "gcut_egg_write"
msgstr ""

#: xml/gcut-egg.xml:51(link) xml/gcut-egg.xml:543(primary)
#: xml/api-index-full.xml:288(link) xml/api-index-deprecated.xml:38(link)
#: xml/api-index-1.0.6.xml:35(link)
msgid "gcut_egg_get_pid"
msgstr ""

#: xml/gcut-egg.xml:53(link) xml/gcut-egg.xml:569(primary)
#: xml/api-index-full.xml:299(link) xml/api-index-deprecated.xml:49(link)
#: xml/api-index-1.0.6.xml:46(link)
msgid "gcut_egg_wait"
msgstr ""

#: xml/gcut-egg.xml:55(link) xml/gcut-egg.xml:609(primary)
#: xml/api-index-full.xml:290(link) xml/api-index-deprecated.xml:40(link)
#: xml/api-index-1.0.6.xml:37(link)
msgid "gcut_egg_kill"
msgstr ""

#: xml/gcut-egg.xml:57(link) xml/gcut-egg.xml:635(primary)
#: xml/api-index-full.xml:286(link) xml/api-index-deprecated.xml:36(link)
#: xml/api-index-1.0.6.xml:33(link)
msgid "gcut_egg_get_input"
msgstr ""

#: xml/gcut-egg.xml:59(link) xml/gcut-egg.xml:661(primary)
#: xml/api-index-full.xml:287(link) xml/api-index-deprecated.xml:37(link)
#: xml/api-index-1.0.6.xml:34(link)
msgid "gcut_egg_get_output"
msgstr ""

#: xml/gcut-egg.xml:61(link) xml/gcut-egg.xml:687(primary)
#: xml/api-index-full.xml:283(link) xml/api-index-deprecated.xml:33(link)
#: xml/api-index-1.0.6.xml:30(link)
msgid "gcut_egg_get_error"
msgstr ""

#: xml/gcut-egg.xml:63(link) xml/gcut-egg.xml:713(primary)
#: xml/api-index-full.xml:285(link) xml/api-index-deprecated.xml:35(link)
#: xml/api-index-1.0.6.xml:32(link)
msgid "gcut_egg_get_forced_termination_wait_time"
msgstr ""

#: xml/gcut-egg.xml:65(link) xml/gcut-egg.xml:740(primary)
#: xml/api-index-full.xml:298(link) xml/api-index-deprecated.xml:48(link)
#: xml/api-index-1.0.6.xml:45(link)
msgid "gcut_egg_set_forced_termination_wait_time"
msgstr ""

#: xml/gcut-egg.xml:109(link) xml/gcut-egg.xml:772(title)
#: xml/gcut-egg.xml:773(primary) xml/api-index-full.xml:280(link)
#: xml/api-index-deprecated.xml:30(link)
msgid "GCUT_EGG_ERROR"
msgstr ""

#: xml/gcut-egg.xml:110(link) xml/gcut-egg.xml:782(primary)
#: xml/api-index-full.xml:186(link) xml/api-index-deprecated.xml:28(link)
#: xml/api-index-1.0.6.xml:14(link)
msgid "GCutEggError"
msgstr ""

#: xml/gcut-egg.xml:118(screen)
#, no-wrap
msgid ""
"    <placeholder-1/>\n"
"    <placeholder-2/> GCutEgg\n"
msgstr ""

#: xml/gcut-egg.xml:126(para)
msgid ""
"<link linkend=\"GCutEgg\"><type>GCutEgg</type></link> encapsulates external "
"command execution, communication and termination. <link linkend=\"GCutEgg"
"\"><type>GCutEgg</type></link> reports an error as <link linkend=\"GError"
"\"><type>GError</type></link>. It can be asserted easily by <link linkend="
"\"gcut-assert-error\"><function>gcut_assert_error()</function></link>."
msgstr ""
"<link linkend=\"GCutEgg\"><type>GCutEgg</type></link>は外部コマンドの実行・通"
"信・終了をカプセル化します。<link linkend=\"GCutEgg\"><type>GCutEgg</type></"
"link>はエラーを<link linkend=\"GError\"><type>GError</type></link>として報告"
"します。エラーは<link linkend=\"gcut-assert-error"
"\"><function>gcut_assert_error()</function></link>を使うことにより簡単に検証"
"できます。"

#: xml/gcut-egg.xml:130(para)
msgid ""
"External command is specified to constructor like <link linkend=\"gcut-egg-"
"new\"><function>gcut_egg_new()</function></link>, <link linkend=\"gcut-egg-"
"new-strings\"><function>gcut_egg_new_strings()</function></link> and so on. "
"External command isn't run at the time. <link linkend=\"gcut-egg-hatch"
"\"><function>gcut_egg_hatch()</function></link> runs specified external "
"command."
msgstr ""
"外部コマンドは<link linkend=\"gcut-egg-new\"><function>gcut_egg_new()</"
"function></link>、<link linkend=\"gcut-egg-new-strings"
"\"><function>gcut_egg_new_strings()</function></link>などのようなコンストラク"
"タで指定します。この時点では外部コマンドは実行されません。<link linkend="
"\"gcut-egg-hatch\"><function>gcut_egg_hatch()</function></link>で指定された外"
"部コマンドが実行されます。"

#: xml/gcut-egg.xml:134(para)
#, fuzzy
msgid ""
"Standard/Error outputs of external command are passed by <link linkend="
"\"GCutEgg-output-received\"><type>“output-received”</type></link>/<link "
"linkend=\"GCutEgg-error-received\"><type>“error-received”</type></link> "
"signals or <link linkend=\"GIOChannel\"><type>GIOChannel</type></link> "
"returned by <link linkend=\"gcut-egg-get-output"
"\"><function>gcut_egg_get_output()</function></link>/<link linkend=\"gcut-"
"egg-get-error\"><function>gcut_egg_get_error()</function></link>. <link "
"linkend=\"gcut-egg-write\"><function>gcut_egg_write()</function></link> "
"writes a chunk to standard input of external command."
msgstr ""
"外部コマンドの標準出力・エラー出力は<link linkend=\"GCutEgg-output-received"
"\"><type>\"output-received\"</type></link>シグナル・<link linkend=\"GCutEgg-"
"error-received\"><type>\"error-received\"</type></link>シグナル、あるいは、"
"<link linkend=\"gcut-egg-get-output\"><function>gcut_egg_get_output()</"
"function></link>・<link linkend=\"gcut-egg-get-error"
"\"><function>gcut_egg_get_error()</function></link>が返す<link linkend="
"\"GIOChannel\"><type>GIOChannel</type></link>で取得できます。<link linkend="
"\"gcut-egg-write\"><function>gcut_egg_write()</function></link>は外部コマンド"
"の標準入力にデータを書き込みます。"

#: xml/gcut-egg.xml:140(para)
msgid ""
"To wait external command finished, <link linkend=\"gcut-egg-wait"
"\"><function>gcut_egg_wait()</function></link> can be used. It accepts "
"timeout to avoid infinite waiting."
msgstr ""
"外部コマンドの終了を待つためには<link linkend=\"gcut-egg-wait"
"\"><function>gcut_egg_wait()</function></link>を使うことができます。無限待ち"
"を避けるために、タイムアウトを指定することができます。"

#: xml/gcut-egg.xml:193(title)
msgid "gcut_egg_error_quark ()"
msgstr ""

#: xml/gcut-egg.xml:195(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GQuark\"><returnvalue>GQuark</returnvalue></link>\n"
"gcut_egg_error_quark (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/gcut-egg.xml:197(para)
msgid ""
"<literal>gcut_egg_error_quark</literal> is deprecated and should not be used "
"in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:202(title)
msgid "gcut_egg_new ()"
msgstr ""

#: xml/gcut-egg.xml:204(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GCutEgg\"><returnvalue>GCutEgg</returnvalue></link> *\n"
"gcut_egg_new (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *command</parameter>,\n"
"              <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:207(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_new</literal> has been deprecated since version 1.1.5 and "
"should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:207(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-new\"><function>gcut_process_new()</"
"function></link> instead."
msgstr ""
"追加メッセージ（省略可能）。詳細は<link linkend=\"cut-message"
"\"><function>cut_message()</function></link>を見てください。"

#: xml/gcut-egg.xml:209(para) xml/gcut-egg.xml:239(para)
#: xml/gcut-egg.xml:269(para) xml/gcut-egg.xml:299(para)
#: xml/gcut-egg.xml:325(para)
#, fuzzy
msgid ""
"Creates a new <link linkend=\"GCutEgg\"><type>GCutEgg</type></link> object "
"that runs <parameter>command</parameter> ."
msgstr ""
"<parameter>command</parameter>を実行する新しい<link linkend=\"GCutEgg"
"\"><type>GCutEgg</type></link>オブジェクトを生成します。"

#: xml/gcut-egg.xml:229(para) xml/gcut-egg.xml:259(para)
#: xml/gcut-egg.xml:290(para) xml/gcut-egg.xml:316(para)
#: xml/gcut-egg.xml:342(para)
msgid "a new <link linkend=\"GCutEgg\"><type>GCutEgg</type></link>."
msgstr "新しい<link linkend=\"GCutEgg\"><type>GCutEgg</type></link>。"

#: xml/gcut-egg.xml:232(title)
msgid "gcut_egg_new_va_list ()"
msgstr ""

#: xml/gcut-egg.xml:234(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GCutEgg\"><returnvalue>GCutEgg</returnvalue></link> *\n"
"gcut_egg_new_va_list (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *command</parameter>,\n"
"                      <parameter><link linkend=\"va-list\"><type>va_list</type></link> args</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:237(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_new_va_list</literal> has been deprecated since version "
"1.1.5 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:237(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-new-va-list"
"\"><function>gcut_process_new_va_list()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/gcut-egg.xml:262(title)
msgid "gcut_egg_new_argv ()"
msgstr ""

#: xml/gcut-egg.xml:264(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GCutEgg\"><returnvalue>GCutEgg</returnvalue></link> *\n"
"gcut_egg_new_argv (<parameter><link linkend=\"gint\"><type>gint</type></link> argc</parameter>,\n"
"                   <parameter><link linkend=\"gchar\"><type>gchar</type></link> **argv</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:267(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_new_argv</literal> has been deprecated since version 1.1.5 "
"and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:267(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-new-argv"
"\"><function>gcut_process_new_argv()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/gcut-egg.xml:293(title)
msgid "gcut_egg_new_strings ()"
msgstr ""

#: xml/gcut-egg.xml:295(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GCutEgg\"><returnvalue>GCutEgg</returnvalue></link> *\n"
"gcut_egg_new_strings (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> **command</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:297(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_new_strings</literal> has been deprecated since version "
"1.1.5 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:297(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-new-strings"
"\"><function>gcut_process_new_strings()</function></link> instead."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/gcut-egg.xml:319(title)
msgid "gcut_egg_new_array ()"
msgstr ""

#: xml/gcut-egg.xml:321(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GCutEgg\"><returnvalue>GCutEgg</returnvalue></link> *\n"
"gcut_egg_new_array (<parameter><link linkend=\"GArray\"><type>GArray</type></link> *command</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:323(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_new_array</literal> has been deprecated since version "
"1.1.5 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:323(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-new-array"
"\"><function>gcut_process_new_array()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/gcut-egg.xml:345(title)
msgid "gcut_egg_set_flags ()"
msgstr ""

#: xml/gcut-egg.xml:347(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_egg_set_flags (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>,\n"
"                    <parameter><link linkend=\"GSpawnFlags\"><type>GSpawnFlags</type></link> flags</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:350(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_set_flags</literal> has been deprecated since version "
"1.1.5 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:350(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-set-flags"
"\"><function>gcut_process_set_flags()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/gcut-egg.xml:362(para) xml/gcut-egg.xml:387(para)
#: xml/gcut-egg.xml:413(para) xml/gcut-egg.xml:442(para)
#: xml/gcut-egg.xml:470(para) xml/gcut-egg.xml:498(para)
#: xml/gcut-egg.xml:523(para) xml/gcut-egg.xml:558(para)
#: xml/gcut-egg.xml:592(para) xml/gcut-egg.xml:625(para)
#: xml/gcut-egg.xml:650(para) xml/gcut-egg.xml:676(para)
#: xml/gcut-egg.xml:702(para) xml/gcut-egg.xml:729(para)
#: xml/gcut-egg.xml:759(para)
msgid "egg"
msgstr ""

#: xml/gcut-egg.xml:363(para) xml/gcut-egg.xml:388(para)
#: xml/gcut-egg.xml:414(para) xml/gcut-egg.xml:443(para)
#: xml/gcut-egg.xml:471(para) xml/gcut-egg.xml:499(para)
#: xml/gcut-egg.xml:524(para) xml/gcut-egg.xml:559(para)
#: xml/gcut-egg.xml:593(para) xml/gcut-egg.xml:626(para)
#: xml/gcut-egg.xml:651(para) xml/gcut-egg.xml:677(para)
#: xml/gcut-egg.xml:703(para) xml/gcut-egg.xml:730(para)
#: xml/gcut-egg.xml:760(para)
msgid "a <link linkend=\"GCutEgg\"><type>GCutEgg</type></link>"
msgstr "<link linkend=\"GCutEgg\"><type>GCutEgg</type></link>"

#: xml/gcut-egg.xml:371(title)
msgid "gcut_egg_get_flags ()"
msgstr ""

#: xml/gcut-egg.xml:373(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GSpawnFlags\"><returnvalue>GSpawnFlags</returnvalue></link>\n"
"gcut_egg_get_flags (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:375(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_get_flags</literal> has been deprecated since version "
"1.1.5 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:375(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-get-flags"
"\"><function>gcut_process_get_flags()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/gcut-egg.xml:396(title)
msgid "gcut_egg_set_env ()"
msgstr ""

#: xml/gcut-egg.xml:398(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_egg_set_env (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>,\n"
"                  <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *name</parameter>,\n"
"                  <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:402(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_set_env</literal> has been deprecated since version 1.1.5 "
"and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:402(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-set-env\"><function>gcut_process_set_env()</"
"function></link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/gcut-egg.xml:427(title)
msgid "gcut_egg_get_env ()"
msgstr ""

#: xml/gcut-egg.xml:429(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> **\n"
"gcut_egg_get_env (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:431(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_get_env</literal> has been deprecated since version 1.1.5 "
"and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:431(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-get-env\"><function>gcut_process_get_env()</"
"function></link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/gcut-egg.xml:454(title)
msgid "gcut_egg_hatch ()"
msgstr ""

#: xml/gcut-egg.xml:456(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_egg_hatch (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>,\n"
"                <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:459(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_hatch</literal> has been deprecated since version 1.1.5 "
"and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:459(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-run\"><function>gcut_process_run()</"
"function></link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/gcut-egg.xml:461(para)
msgid "Hatches a new external process."
msgstr "新しい外部プロセスを実行します。"

#: xml/gcut-egg.xml:482(title)
msgid "gcut_egg_close ()"
msgstr ""

#: xml/gcut-egg.xml:484(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_egg_close (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>);"
msgstr "比較する<link linkend=\"guint\"><type>guint</type></link>の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-egg.xml:486(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_close</literal> has been deprecated since version 1.1.5 "
"and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:486(para)
#, fuzzy
msgid ""
"no need to close explicitly on <link linkend=\"GCutProcess"
"\"><type>GCutProcess</type></link>."
msgstr ""
"<link linkend=\"GCutProcess\"><type>GCutProcess</type></link>オブジェクト。"

#: xml/gcut-egg.xml:488(para)
msgid "Closes a hatched external process. It is closed implicitly on destroy."
msgstr ""
"実行した外部コマンドのリソースを回収します。破棄されるときに暗黙的に回収され"
"ます。"

#: xml/gcut-egg.xml:504(title)
msgid "gcut_egg_write ()"
msgstr ""

#: xml/gcut-egg.xml:506(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_egg_write (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>,\n"
"                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *chunk</parameter>,\n"
"                <parameter><link linkend=\"gsize\"><type>gsize</type></link> size</parameter>,\n"
"                <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:511(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_write</literal> has been deprecated since version 1.1.5 "
"and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:511(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-write\"><function>gcut_process_write()</"
"function></link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/gcut-egg.xml:542(title)
msgid "gcut_egg_get_pid ()"
msgstr ""

#: xml/gcut-egg.xml:544(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"GPid\"><returnvalue>GPid</returnvalue></link>\n"
"gcut_egg_get_pid (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>);"
msgstr "比較する<link linkend=\"guint\"><type>guint</type></link>の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/gcut-egg.xml:546(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_get_pid</literal> has been deprecated since version 1.1.5 "
"and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:546(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-get-pid\"><function>gcut_process_get_pid()</"
"function></link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/gcut-egg.xml:568(title)
msgid "gcut_egg_wait ()"
msgstr ""

#: xml/gcut-egg.xml:570(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gint\"><returnvalue>gint</returnvalue></link>\n"
"gcut_egg_wait (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>,\n"
"               <parameter><link linkend=\"guint\"><type>guint</type></link> timeout</parameter>,\n"
"               <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:574(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_wait</literal> has been deprecated since version 1.1.5 and "
"should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:574(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-wait\"><function>gcut_process_wait()</"
"function></link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/gcut-egg.xml:576(para)
msgid ""
"Waits running external process is finished while <parameter>timeout</"
"parameter> milliseconds. If external process isn't finished while "
"<parameter>timeout</parameter> milliseconds, <link linkend=\"GCUT-EGG-ERROR-"
"TIMEOUT:CAPS\"><literal>GCUT_EGG_ERROR_TIMEOUT</literal></link> error is set "
"and -1 is returned. If external process isn't running, <link linkend=\"GCUT-"
"EGG-ERROR-NOT-RUNNING:CAPS\"><literal>GCUT_EGG_ERROR_NOT_RUNNING</literal></"
"link> error is set and -1 is returned."
msgstr ""
"実行中の外部プロセスが終了することを<parameter>timeout</parameter>ミリ秒待ち"
"ます。外部コマンドが<parameter>timeout</parameter>ミリ秒以内に終了しなかった"
"場合は、<link linkend=\"GCUT-EGG-ERROR-TIMEOUT:CAPS"
"\"><literal>GCUT_EGG_ERROR_TIMEOUT</literal></link>エラーが設定され、-1が返り"
"ます。外部プロセスが実行されていない場合は、<link linkend=\"GCUT-EGG-ERROR-"
"NOT-RUNNING:CAPS\"><literal>GCUT_EGG_ERROR_NOT_RUNNING</literal></link>エラー"
"が設定され、-1が返ります。"

#: xml/gcut-egg.xml:608(title)
msgid "gcut_egg_kill ()"
msgstr ""

#: xml/gcut-egg.xml:610(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_egg_kill (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>,\n"
"               <parameter><link linkend=\"gint\"><type>gint</type></link> signal_number</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:613(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_kill</literal> has been deprecated since version 1.1.5 and "
"should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:613(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-kill\"><function>gcut_process_kill()</"
"function></link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/gcut-egg.xml:634(title)
msgid "gcut_egg_get_input ()"
msgstr ""

#: xml/gcut-egg.xml:636(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GIOChannel\"><returnvalue>GIOChannel</returnvalue></link> *\n"
"gcut_egg_get_input (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:638(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_get_input</literal> has been deprecated since version "
"1.1.5 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:638(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-get-input-channel"
"\"><function>gcut_process_get_input_channel()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/gcut-egg.xml:660(title)
msgid "gcut_egg_get_output ()"
msgstr ""

#: xml/gcut-egg.xml:662(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GIOChannel\"><returnvalue>GIOChannel</returnvalue></link> *\n"
"gcut_egg_get_output (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:664(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_get_output</literal> has been deprecated since version "
"1.1.5 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:664(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-get-output-channel"
"\"><function>gcut_process_get_output_channel()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/gcut-egg.xml:686(title)
msgid "gcut_egg_get_error ()"
msgstr ""

#: xml/gcut-egg.xml:688(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GIOChannel\"><returnvalue>GIOChannel</returnvalue></link> *\n"
"gcut_egg_get_error (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:690(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_get_error</literal> has been deprecated since version "
"1.1.5 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:690(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-get-error-channel"
"\"><function>gcut_process_get_error_channel()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/gcut-egg.xml:712(title)
msgid "gcut_egg_get_forced_termination_wait_time ()"
msgstr ""

#: xml/gcut-egg.xml:714(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_egg_get_forced_termination_wait_time\n"
"                               (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:717(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_get_forced_termination_wait_time</literal> has been "
"deprecated since version 1.1.5 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:717(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-get-forced-termination-wait-time"
"\"><function>gcut_process_get_forced_termination_wait_time()</function></"
"link> instead."
msgstr ""
"<literal>gcut_egg_get_forced_termination_wait_time</literal>はバージョン1.1.5"
"から非推奨になりました。新しく書くコードでは使わないでください。代わりに"
"<link linkend=\"gcut-process-get-forced-termination-wait-time"
"\"><function>gcut_process_get_forced_termination_wait_time()</function></"
"link>を使ってください。"

#: xml/gcut-egg.xml:739(title)
msgid "gcut_egg_set_forced_termination_wait_time ()"
msgstr ""

#: xml/gcut-egg.xml:741(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_egg_set_forced_termination_wait_time\n"
"                               (<parameter><link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg</parameter>,\n"
"                                <parameter><link linkend=\"guint\"><type>guint</type></link> timeout</parameter>);"
msgstr ""

#: xml/gcut-egg.xml:745(para)
#, fuzzy
msgid ""
"<literal>gcut_egg_set_forced_termination_wait_time</literal> has been "
"deprecated since version 1.1.5 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-egg.xml:745(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-process-set-forced-termination-wait-time"
"\"><function>gcut_process_set_forced_termination_wait_time()</function></"
"link> instead."
msgstr ""
"<literal>gcut_egg_set_forced_termination_wait_time</literal>はバージョン1.1.5"
"から非推奨になりました。新しく書くコードでは使わないでください。代わりに"
"<link linkend=\"gcut-egg-set-forced-termination-wait-time"
"\"><function>gcut_egg_set_forced_termination_wait_time()</function></link>を"
"使ってください。"

#: xml/gcut-egg.xml:774(programlisting)
#, no-wrap
msgid "#define GCUT_EGG_ERROR           (gcut_egg_error_quark())\n"
msgstr ""

#: xml/gcut-egg.xml:776(para)
msgid ""
"<literal>GCUT_EGG_ERROR</literal> is deprecated and should not be used in "
"newly-written code."
msgstr ""
"<literal>GCUT_EGG_ERROR</literal>は非推奨です。新しいコードでは使わないでくだ"
"さい。"

#: xml/gcut-egg.xml:781(title)
msgid "enum GCutEggError"
msgstr ""

#: xml/gcut-egg.xml:783(para)
#, fuzzy
msgid ""
"<literal>GCutEggError</literal> has been deprecated since version 1.1.5 and "
"should not be used in newly-written code."
msgstr ""
"<literal>GCutEgg</literal>は非推奨です。新しいコードでは使わないでください。"

#: xml/gcut-egg.xml:783(para)
#, fuzzy
msgid ""
"Use <link linkend=\"GCutProcessError\"><type>GCutProcessError</type></link> "
"instead."
msgstr "<link linkend=\"GCutProcess\"><type>GCutProcess</type></link>"

#: xml/gcut-egg.xml:785(para)
msgid ""
"Error codes returned by <link linkend=\"GCutEgg\"><type>GCutEgg</type></"
"link> related operations."
msgstr ""
"<link linkend=\"GCutEgg\"><type>GCutEgg</type></link>関連の操作で返されるエ"
"ラーコード。"

#: xml/gcut-egg.xml:794(para)
msgid "GCUT_EGG_ERROR_COMMAND_LINE"
msgstr ""

#: xml/gcut-egg.xml:799(para)
msgid "GCUT_EGG_ERROR_IO_ERROR"
msgstr ""

#: xml/gcut-egg.xml:804(para)
msgid "GCUT_EGG_ERROR_ALREADY_RUNNING"
msgstr ""

#: xml/gcut-egg.xml:809(para)
msgid "GCUT_EGG_ERROR_NOT_RUNNING"
msgstr ""

#: xml/gcut-egg.xml:814(para)
msgid "GCUT_EGG_ERROR_INVALID_OBJECT"
msgstr ""

#: xml/gcut-egg.xml:815(para)
msgid ""
"Invalid <link linkend=\"GCutEgg\"><type>GCutEgg</type></link> object is "
"passed."
msgstr ""
"不正な<link linkend=\"GCutEgg\"><type>GCutEgg</type></link>オブジェクトが渡さ"
"れました。"

#: xml/gcut-egg.xml:819(para)
msgid "GCUT_EGG_ERROR_TIMEOUT"
msgstr ""

#: xml/gcut-egg.xml:831(primary) xml/api-index-full.xml:185(link)
msgid "GCutEgg:command"
msgstr ""

#: xml/gcut-egg.xml:833(para)
msgid "The command to be ran by the egg."
msgstr "実行する外部コマンド。"

#: xml/gcut-egg.xml:840(primary) xml/api-index-full.xml:181(link)
#: xml/api-index-1.0.6.xml:10(link)
msgid "GCutEgg::error"
msgstr ""

#: xml/gcut-egg.xml:841(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"user_function (<link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg,\n"
"               <link linkend=\"gpointer\"><type>gpointer</type></link> error,\n"
"               <link linkend=\"gpointer\"><type>gpointer</type></link> user_data)"
msgstr ""

#: xml/gcut-egg.xml:847(primary) xml/api-index-full.xml:182(link)
#: xml/api-index-1.0.6.xml:11(link)
msgid "GCutEgg::error-received"
msgstr ""

#: xml/gcut-egg.xml:848(programlisting) xml/gcut-egg.xml:856(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"user_function (<link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg,\n"
"               <link linkend=\"gchar\"><type>gchar</type></link>   *chunk,\n"
"               <link linkend=\"guint64\"><type>guint64</type></link>  size,\n"
"               <link linkend=\"gpointer\"><type>gpointer</type></link> user_data)"
msgstr ""

#: xml/gcut-egg.xml:855(primary) xml/api-index-full.xml:183(link)
#: xml/api-index-1.0.6.xml:12(link)
msgid "GCutEgg::output-received"
msgstr ""

#: xml/gcut-egg.xml:863(primary) xml/api-index-full.xml:184(link)
#: xml/api-index-1.0.6.xml:13(link)
msgid "GCutEgg::reaped"
msgstr ""

#: xml/gcut-egg.xml:864(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"user_function (<link linkend=\"GCutEgg\"><type>GCutEgg</type></link> *egg,\n"
"               <link linkend=\"gint\"><type>gint</type></link>     status,\n"
"               <link linkend=\"gpointer\"><type>gpointer</type></link> user_data)"
msgstr ""

#: xml/gcut-data.xml:7(refentrytitle) xml/gcut-data.xml:12(refname)
#: xml/api-index-full.xml:196(link) xml/api-index-full.xml:249(link)
#: xml/api-index-full.xml:251(link) xml/api-index-full.xml:253(link)
#: xml/api-index-full.xml:255(link) xml/api-index-full.xml:257(link)
#: xml/api-index-full.xml:259(link) xml/api-index-full.xml:261(link)
#: xml/api-index-full.xml:262(link) xml/api-index-full.xml:265(link)
#: xml/api-index-full.xml:267(link) xml/api-index-full.xml:269(link)
#: xml/api-index-full.xml:271(link) xml/api-index-full.xml:274(link)
#: xml/api-index-full.xml:275(link) xml/api-index-full.xml:278(link)
#: xml/api-index-1.1.5.xml:20(link) xml/api-index-1.1.3.xml:11(link)
#: xml/api-index-1.1.3.xml:12(link) xml/api-index-1.1.3.xml:13(link)
#: xml/api-index-1.1.3.xml:14(link) xml/api-index-1.1.3.xml:15(link)
#: xml/api-index-1.1.3.xml:16(link) xml/api-index-1.1.1.xml:13(link)
#: xml/api-index-1.0.7.xml:23(link) xml/api-index-1.0.6.xml:18(link)
#: xml/api-index-1.0.6.xml:22(link) xml/api-index-1.0.6.xml:23(link)
#: xml/api-index-1.0.6.xml:24(link) xml/api-index-1.0.6.xml:25(link)
#: xml/api-index-1.0.6.xml:26(link) xml/api-index-1.0.6.xml:27(link)
msgid "Convenience test data API"
msgstr "便利なテストデータ用API"

#: xml/gcut-data.xml:13(refpurpose)
msgid "API to create test data without structure definition."
msgstr "構造体定義なしでテストデータを作成するためのAPI。"

#: xml/gcut-data.xml:25(link) xml/gcut-data.xml:71(primary)
#: xml/api-index-full.xml:196(link) xml/api-index-1.0.6.xml:18(link)
msgid "gcut_add_datum"
msgstr ""

#: xml/gcut-data.xml:27(link) xml/gcut-data.xml:322(primary)
#: xml/api-index-full.xml:278(link) xml/api-index-1.1.5.xml:20(link)
msgid "gcut_data_has_field"
msgstr ""

#: xml/gcut-data.xml:28(link) xml/gcut-data.xml:350(primary)
#: xml/api-index-full.xml:253(link) xml/api-index-1.1.3.xml:12(link)
msgid "gcut_data_get_char"
msgstr ""

#: xml/gcut-data.xml:30(link) xml/gcut-data.xml:376(primary)
#: xml/api-index-full.xml:271(link) xml/api-index-1.0.6.xml:26(link)
msgid "gcut_data_get_string"
msgstr ""

#: xml/gcut-data.xml:32(link) xml/gcut-data.xml:404(primary)
#: xml/api-index-full.xml:261(link) xml/api-index-1.0.6.xml:24(link)
msgid "gcut_data_get_int"
msgstr ""

#: xml/gcut-data.xml:34(link) xml/gcut-data.xml:432(primary)
#: xml/api-index-full.xml:274(link) xml/api-index-1.0.6.xml:27(link)
msgid "gcut_data_get_uint"
msgstr ""

#: xml/gcut-data.xml:35(link) xml/gcut-data.xml:461(primary)
#: xml/api-index-full.xml:262(link) xml/api-index-1.1.3.xml:14(link)
msgid "gcut_data_get_int64"
msgstr ""

#: xml/gcut-data.xml:36(link) xml/gcut-data.xml:488(primary)
#: xml/api-index-full.xml:275(link) xml/api-index-1.1.3.xml:16(link)
msgid "gcut_data_get_uint64"
msgstr ""

#: xml/gcut-data.xml:37(link) xml/gcut-data.xml:515(primary)
#: xml/api-index-full.xml:269(link) xml/api-index-1.1.3.xml:15(link)
msgid "gcut_data_get_size"
msgstr ""

#: xml/gcut-data.xml:39(link) xml/gcut-data.xml:541(primary)
#: xml/api-index-full.xml:259(link) xml/api-index-1.0.6.xml:23(link)
msgid "gcut_data_get_flags"
msgstr ""

#: xml/gcut-data.xml:41(link) xml/gcut-data.xml:570(primary)
#: xml/api-index-full.xml:257(link) xml/api-index-1.0.6.xml:22(link)
msgid "gcut_data_get_enum"
msgstr ""

#: xml/gcut-data.xml:42(returnvalue) xml/gcut-data.xml:44(returnvalue)
#: xml/gcut-data-helper.xml:43(returnvalue)
#: xml/gcut-data-helper.xml:45(returnvalue)
msgid "gconstpointer"
msgstr ""

#: xml/gcut-data.xml:43(link) xml/gcut-data.xml:599(primary)
#: xml/api-index-full.xml:267(link) xml/api-index-1.0.6.xml:25(link)
msgid "gcut_data_get_pointer"
msgstr ""

#: xml/gcut-data.xml:45(link) xml/gcut-data.xml:628(primary)
#: xml/api-index-full.xml:251(link) xml/api-index-1.0.7.xml:23(link)
msgid "gcut_data_get_boxed"
msgstr ""

#: xml/gcut-data.xml:47(link) xml/gcut-data.xml:657(primary)
#: xml/api-index-full.xml:265(link) xml/api-index-1.1.1.xml:13(link)
msgid "gcut_data_get_object"
msgstr ""

#: xml/gcut-data.xml:49(link) xml/gcut-data.xml:686(primary)
#: xml/api-index-full.xml:249(link) xml/api-index-1.1.3.xml:11(link)
msgid "gcut_data_get_boolean"
msgstr ""

#: xml/gcut-data.xml:50(returnvalue) xml/gcut-data-helper.xml:51(returnvalue)
msgid "gdouble"
msgstr ""

#: xml/gcut-data.xml:51(link) xml/gcut-data.xml:714(primary)
#: xml/api-index-full.xml:255(link) xml/api-index-1.1.3.xml:13(link)
msgid "gcut_data_get_double"
msgstr ""

#: xml/gcut-data.xml:61(para)
#, fuzzy
msgid ""
"cut_add_data() requires custom data type for complex test data. But it's not "
"easy to write. <link linkend=\"gcut-add-datum\"><function>gcut_add_datum()</"
"function></link> provides API to use complex test data without custom data "
"type. It uses <link linkend=\"GType\"><type>GType</type></link> for "
"providing complex data."
msgstr ""
"<link linkend=\"cut-add-data\"><function>cut_add_data()</function></link>で複"
"雑なテストデータを使用したい場合はテストデータ用にデータ型を定義する必要があ"
"ります。しかし、それは少し面倒です。<link linkend=\"gcut-add-datum"
"\"><function>gcut_add_datum()</function></link>はデータ型を定義せずに複雑なテ"
"ストデータを使用するためのAPIを提供します。このAPIは複雑なデータを扱うために"
"<link linkend=\"GType\"><type>GType</type></link>を使います。"

#: xml/gcut-data.xml:70(title)
msgid "gcut_add_datum ()"
msgstr ""

#: xml/gcut-data.xml:72(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_add_datum (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *name</parameter>,\n"
"                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *first_field_name</parameter>,\n"
"                <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-data.xml:76(para)
msgid ""
"Adds a datum to be used in data driven test. It's convenient rather than "
"<link linkend=\"cut-add-data\"><function>cut_add_data()</function></link> "
"because you doesn't need to define a new structure for a complex test data."
msgstr ""
"データ駆動テスト用のデータを追加します。複雑なテストデータのために新しく構造"
"体を定義する必要がないため、<link linkend=\"cut-add-data"
"\"><function>cut_add_data()</function></link>よりも便利です。"

#: xml/gcut-data.xml:120(para)
msgid "Available types and their values are the followings:"
msgstr "利用可能な型とその時の値は以下の通りです。"

#: xml/gcut-data.xml:123(type)
msgid "G_TYPE_CHAR"
msgstr ""

#: xml/gcut-data.xml:125(para)
msgid "<link linkend=\"gchar\"><type>gchar</type></link> value"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/gcut-data.xml:126(para) xml/gcut-data.xml:139(para)
#: xml/gcut-data.xml:152(para) xml/gcut-data.xml:165(para)
#: xml/gcut-data.xml:178(para) xml/gcut-data.xml:191(para)
#: xml/gcut-data.xml:204(para) xml/gcut-data.xml:217(para)
#: xml/gcut-data.xml:230(para) xml/gcut-data.xml:244(para)
#: xml/gcut-data.xml:258(para) xml/gcut-data.xml:275(para)
#: xml/gcut-data.xml:288(para)
msgid "e.g.: <placeholder-1/>"
msgstr "例: <placeholder-1/>"

#: xml/gcut-data.xml:136(type)
msgid "G_TYPE_STRING"
msgstr ""

#: xml/gcut-data.xml:138(para)
msgid "const <link linkend=\"gchar\"><type>gchar</type></link> *value"
msgstr ""

#: xml/gcut-data.xml:149(type)
msgid "G_TYPE_INT"
msgstr ""

#: xml/gcut-data.xml:151(para)
msgid "<link linkend=\"gint\"><type>gint</type></link> value"
msgstr "<link linkend=\"gint\"><type>gint</type></link>の値。"

#: xml/gcut-data.xml:162(type)
msgid "G_TYPE_UINT"
msgstr ""

#: xml/gcut-data.xml:164(para)
msgid "<link linkend=\"guint\"><type>guint</type></link> value"
msgstr "<link linkend=\"guint\"><type>guint</type></link>の値。"

#: xml/gcut-data.xml:175(type)
msgid "G_TYPE_INT64"
msgstr ""

#: xml/gcut-data.xml:177(para)
msgid "<link linkend=\"gint64\"><type>gint64</type></link> value"
msgstr "<link linkend=\"gint64\"><type>gint64</type></link>の値。"

#: xml/gcut-data.xml:188(type)
msgid "G_TYPE_UINT64"
msgstr ""

#: xml/gcut-data.xml:190(para)
msgid "<link linkend=\"guint64\"><type>guint64</type></link> value"
msgstr "<link linkend=\"guint64\"><type>guint64</type></link>の値。"

#: xml/gcut-data.xml:201(type)
msgid "G_TYPE_GTYPE"
msgstr ""

#: xml/gcut-data.xml:203(para)
msgid "<link linkend=\"GType\"><type>GType</type></link> value"
msgstr "<link linkend=\"GType\"><type>GType</type></link>の値。"

#: xml/gcut-data.xml:214(term)
msgid "GFlags types"
msgstr "GFlagsの型"

#: xml/gcut-data.xml:216(para) xml/gcut-data.xml:229(para)
#: xml/gcut-data.xml:257(para)
msgid "its type value."
msgstr "その型の値。"

#: xml/gcut-data.xml:227(term)
msgid "GEnum types"
msgstr "GEnumの型"

#: xml/gcut-data.xml:240(type)
msgid "G_TYPE_POINTER"
msgstr ""

#: xml/gcut-data.xml:242(para)
msgid ""
"<link linkend=\"gconstpointer\"><type>gconstpointer</type></link> value, "
"<link linkend=\"GDestroyNotify\"><type>GDestroyNotify</type></link> notify"
msgstr ""
"<link linkend=\"gconstpointer\"><type>gconstpointer</type></link> value, "
"<link linkend=\"GDestroyNotify\"><type>GDestroyNotify</type></link> notify"

#: xml/gcut-data.xml:243(para)
msgid "notify is called when value is destroyed."
msgstr "valueが破棄されるときにnotifyが呼ばれます。"

#: xml/gcut-data.xml:251(para) xml/gcut-data.xml:268(para)
msgid "NOTE: value's ownership is passed to Cutter. Don't free it."
msgstr "注意: 値の所有者はCutterになります。解放しないで下さい。"

#: xml/gcut-data.xml:255(term)
msgid "GBoxed types"
msgstr "GBoxedの型"

#: xml/gcut-data.xml:272(type)
msgid "G_TYPE_BOOLEAN"
msgstr ""

#: xml/gcut-data.xml:274(para)
msgid "<link linkend=\"gboolean\"><type>gboolean</type></link> value"
msgstr "<link linkend=\"gboolean\"><type>gboolean</type></link>の値。"

#: xml/gcut-data.xml:285(type)
msgid "G_TYPE_DOUBLE"
msgstr ""

#: xml/gcut-data.xml:287(para)
msgid "<link linkend=\"gdouble\"><type>gdouble</type></link> value"
msgstr "<link linkend=\"gdouble\"><type>gdouble</type></link>の値。"

#: xml/gcut-data.xml:307(para)
msgid "the name of the data."
msgstr "データの名前。"

#: xml/gcut-data.xml:309(para)
#, fuzzy
msgid "first_field_name"
msgstr "最初のフィールド名。"

#: xml/gcut-data.xml:310(para)
msgid "the first field name."
msgstr "最初のフィールド名。"

#: xml/gcut-data.xml:313(para)
msgid ""
"the type and value pair of the first field, followed optionally by the next "
"field name, type and value triples. <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>-terminated. See description for more "
"details."
msgstr ""
"最初のフィールドの型と値。その後に、フィールドの名前と型と値の3つを任意の数だ"
"け指定します。最後の引数は<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>にしてください。詳細は関数の説明文のところにあります。"

#: xml/gcut-data.xml:321(title)
msgid "gcut_data_has_field ()"
msgstr ""

#: xml/gcut-data.xml:323(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_data_has_field (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                     <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>);"
msgstr ""

#: xml/gcut-data.xml:335(para) xml/gcut-data.xml:363(para)
#: xml/gcut-data.xml:391(para) xml/gcut-data.xml:419(para)
#: xml/gcut-data.xml:448(para) xml/gcut-data.xml:475(para)
#: xml/gcut-data.xml:502(para) xml/gcut-data.xml:528(para)
#: xml/gcut-data.xml:557(para) xml/gcut-data.xml:586(para)
#: xml/gcut-data.xml:615(para) xml/gcut-data.xml:644(para)
#: xml/gcut-data.xml:673(para) xml/gcut-data.xml:701(para)
#: xml/gcut-data.xml:730(para)
msgid ""
"the data added by <link linkend=\"gcut-add-datum"
"\"><function>gcut_add_datum()</function></link>."
msgstr ""
"<link linkend=\"gcut-add-datum\"><function>gcut_add_datum()</function></link>"
"で追加したデータ。"

#: xml/gcut-data.xml:337(para) xml/gcut-data.xml:365(para)
#: xml/gcut-data.xml:393(para) xml/gcut-data.xml:421(para)
#: xml/gcut-data.xml:450(para) xml/gcut-data.xml:477(para)
#: xml/gcut-data.xml:504(para) xml/gcut-data.xml:530(para)
#: xml/gcut-data.xml:559(para) xml/gcut-data.xml:588(para)
#: xml/gcut-data.xml:617(para) xml/gcut-data.xml:646(para)
#: xml/gcut-data.xml:675(para) xml/gcut-data.xml:703(para)
#: xml/gcut-data.xml:732(para)
#, fuzzy
msgid "field_name"
msgstr "フィールド名。"

#: xml/gcut-data.xml:338(para) xml/gcut-data.xml:366(para)
#: xml/gcut-data.xml:394(para) xml/gcut-data.xml:422(para)
#: xml/gcut-data.xml:451(para) xml/gcut-data.xml:478(para)
#: xml/gcut-data.xml:505(para) xml/gcut-data.xml:531(para)
#: xml/gcut-data.xml:560(para) xml/gcut-data.xml:589(para)
#: xml/gcut-data.xml:618(para) xml/gcut-data.xml:647(para)
#: xml/gcut-data.xml:676(para) xml/gcut-data.xml:704(para)
#: xml/gcut-data.xml:733(para)
msgid "the field name."
msgstr "フィールド名。"

#: xml/gcut-data.xml:343(para)
msgid ""
"<link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></link> if "
"<parameter>data</parameter> has a <parameter>field_name</parameter> field is "
"available, <link linkend=\"FALSE:CAPS\"><literal>FALSE</literal></link> "
"otherwise."
msgstr ""
"<parameter>data</parameter>に<parameter>field_name</parameter>フィールドがあ"
"れば<link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></link>、そうでなけれ"
"ば<link linkend=\"FALSE:CAPS\"><literal>FALSE</literal></link>。"

#: xml/gcut-data.xml:349(title)
msgid "gcut_data_get_char()"
msgstr ""

#: xml/gcut-data.xml:351(programlisting)
#, no-wrap
msgid "#define             gcut_data_get_char(data, field_name)"
msgstr ""

#: xml/gcut-data.xml:352(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as char."
msgstr ""
"<parameter>field_name</parameter>フィールドの値を文字として取得します。"

#: xml/gcut-data.xml:371(para) xml/gcut-data.xml:399(para)
#: xml/gcut-data.xml:427(para) xml/gcut-data.xml:456(para)
#: xml/gcut-data.xml:483(para) xml/gcut-data.xml:510(para)
#: xml/gcut-data.xml:536(para) xml/gcut-data.xml:565(para)
#: xml/gcut-data.xml:594(para) xml/gcut-data.xml:623(para)
#: xml/gcut-data.xml:652(para) xml/gcut-data.xml:681(para)
#: xml/gcut-data.xml:709(para) xml/gcut-data.xml:738(para)
#, fuzzy
msgid "a field value corresponded to <parameter>field_name</parameter> ."
msgstr "<parameter>field_name</parameter>に対応するフィールドの値。"

#: xml/gcut-data.xml:375(title)
msgid "gcut_data_get_string ()"
msgstr ""

#: xml/gcut-data.xml:377(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_data_get_string (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                      <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>);"
msgstr ""

#: xml/gcut-data.xml:380(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as string."
msgstr ""
"<parameter>field_name</parameter>フィールドの値を文字列として取得します。"

#: xml/gcut-data.xml:403(title)
msgid "gcut_data_get_int ()"
msgstr ""

#: xml/gcut-data.xml:405(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gint\"><returnvalue>gint</returnvalue></link>\n"
"gcut_data_get_int (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                   <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>);"
msgstr ""

#: xml/gcut-data.xml:408(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as "
"integer."
msgstr ""
"<parameter>field_name</parameter>フィールドの値を整数として取得します。"

#: xml/gcut-data.xml:431(title)
msgid "gcut_data_get_uint ()"
msgstr ""

#: xml/gcut-data.xml:433(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_data_get_uint (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                    <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>);"
msgstr ""

#: xml/gcut-data.xml:436(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as "
"unsigned integer."
msgstr "<parameter>field_name</parameter>の値を符号なし整数として取得します。"

#: xml/gcut-data.xml:460(title)
msgid "gcut_data_get_int64()"
msgstr ""

#: xml/gcut-data.xml:462(programlisting)
#, no-wrap
msgid "#define             gcut_data_get_int64(data, field_name)"
msgstr ""

#: xml/gcut-data.xml:463(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as 64-bit "
"integer."
msgstr ""
"<parameter>field_name</parameter>フィールドの値を64bit整数として取得します。"

#: xml/gcut-data.xml:487(title)
msgid "gcut_data_get_uint64()"
msgstr ""

#: xml/gcut-data.xml:489(programlisting)
#, no-wrap
msgid "#define             gcut_data_get_uint64(data, field_name)"
msgstr ""

#: xml/gcut-data.xml:490(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as 64-bit "
"unsigned integer."
msgstr ""
"<parameter>field_name</parameter>の値を64bit符号なし整数として取得します。"

#: xml/gcut-data.xml:514(title)
msgid "gcut_data_get_size()"
msgstr ""

#: xml/gcut-data.xml:516(programlisting)
#, no-wrap
msgid "#define             gcut_data_get_size(data, field_name)"
msgstr ""

#: xml/gcut-data.xml:517(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as size_t."
msgstr ""
"<parameter>field_name</parameter>フィールドの値をsize_tとして取得します。"

#: xml/gcut-data.xml:540(title)
msgid "gcut_data_get_flags ()"
msgstr ""

#: xml/gcut-data.xml:542(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_data_get_flags (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                     <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>);"
msgstr ""

#: xml/gcut-data.xml:545(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as "
"unsigned integer of GFlags."
msgstr ""
"<parameter>field_name</parameter>の値をGFlags型の符号なし整数として取得しま"
"す。"

#: xml/gcut-data.xml:569(title)
#, fuzzy
msgid "gcut_data_get_enum ()"
msgstr "cut_take_memdup ()"

#: xml/gcut-data.xml:571(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gint\"><returnvalue>gint</returnvalue></link>\n"
"gcut_data_get_enum (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                    <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>);"
msgstr ""

#: xml/gcut-data.xml:574(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as "
"integer of GEnum type."
msgstr ""
"<parameter>field_name</parameter>フィールドの値をGEnum型の整数として取得しま"
"す。"

#: xml/gcut-data.xml:598(title)
msgid "gcut_data_get_pointer ()"
msgstr ""

#: xml/gcut-data.xml:600(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gconstpointer\"><returnvalue>gconstpointer</returnvalue></link>\n"
"gcut_data_get_pointer (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                       <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>);"
msgstr ""

#: xml/gcut-data.xml:603(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as "
"pointer."
msgstr "<parameter>field_name</parameter>の値をポインタとして取得します。"

#: xml/gcut-data.xml:627(title)
msgid "gcut_data_get_boxed ()"
msgstr ""

#: xml/gcut-data.xml:629(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gconstpointer\"><returnvalue>gconstpointer</returnvalue></link>\n"
"gcut_data_get_boxed (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                     <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>);"
msgstr ""

#: xml/gcut-data.xml:632(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as GBoxed "
"type value."
msgstr ""
"<parameter>field_name</parameter>フィールドの値をGBoxed型の値として取得しま"
"す。"

#: xml/gcut-data.xml:654(para) xml/gcut-assertions.xml:1147(para)
#: xml/cut-version.xml:82(para) xml/cut-test-utils.xml:636(para)
#: xml/cut-assertions.xml:307(para) xml/cut-assertions.xml:347(para)
#: xml/cut-assertions.xml:477(para) xml/cut-assertions.xml:1095(para)
#: xml/cut-assertions.xml:1713(para) xml/cut-assertions.xml:1786(para)
#: xml/cut-assertions.xml:1932(para) xml/cut-assertions.xml:2042(para)
#: xml/cut-assertions.xml:2089(para) xml/cut-assertions.xml:2175(para)
msgid "Since: <link linkend=\"api-index-1.0.7\">1.0.7</link>"
msgstr ""

#: xml/gcut-data.xml:656(title)
msgid "gcut_data_get_object ()"
msgstr ""

#: xml/gcut-data.xml:658(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GObject\"><returnvalue>GObject</returnvalue></link> *\n"
"gcut_data_get_object (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                      <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>);"
msgstr ""

#: xml/gcut-data.xml:661(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as <link "
"linkend=\"GObject\"><type>GObject</type></link> type value."
msgstr ""
"<parameter>field_name</parameter>フィールドの値を<link linkend=\"GObject"
"\"><type>GObject</type></link>として取得します。"

#: xml/gcut-data.xml:685(title)
msgid "gcut_data_get_boolean ()"
msgstr ""

#: xml/gcut-data.xml:687(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_data_get_boolean (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                       <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>);"
msgstr ""

#: xml/gcut-data.xml:690(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as "
"boolean."
msgstr "<parameter>field_name</parameter>の値を真偽値として取得します。"

#: xml/gcut-data.xml:713(title)
msgid "gcut_data_get_double ()"
msgstr ""

#: xml/gcut-data.xml:715(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gdouble\"><returnvalue>gdouble</returnvalue></link>\n"
"gcut_data_get_double (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                      <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>);"
msgstr ""

#: xml/gcut-data.xml:718(para)
msgid ""
"Gets a field value identified by <parameter>field_name</parameter> as double "
"floating point number."
msgstr ""
"<parameter>field_name</parameter>の値を倍精度浮動小数点数として取得します。"

#: xml/gcut-data-helper.xml:7(refentrytitle)
#: xml/gcut-data-helper.xml:12(refname) xml/api-index-full.xml:250(link)
#: xml/api-index-full.xml:252(link) xml/api-index-full.xml:254(link)
#: xml/api-index-full.xml:256(link) xml/api-index-full.xml:258(link)
#: xml/api-index-full.xml:260(link) xml/api-index-full.xml:263(link)
#: xml/api-index-full.xml:264(link) xml/api-index-full.xml:266(link)
#: xml/api-index-full.xml:268(link) xml/api-index-full.xml:270(link)
#: xml/api-index-full.xml:272(link) xml/api-index-full.xml:273(link)
#: xml/api-index-full.xml:276(link) xml/api-index-full.xml:277(link)
msgid "gcut-data-helper"
msgstr ""

#: xml/gcut-data-helper.xml:24(link) xml/gcut-data-helper.xml:70(primary)
#: xml/api-index-full.xml:254(link)
msgid "gcut_data_get_char_helper"
msgstr ""

#: xml/gcut-data-helper.xml:26(link) xml/gcut-data-helper.xml:80(primary)
#: xml/api-index-full.xml:272(link)
msgid "gcut_data_get_string_helper"
msgstr ""

#: xml/gcut-data-helper.xml:28(link) xml/gcut-data-helper.xml:90(primary)
#: xml/api-index-full.xml:264(link)
msgid "gcut_data_get_int_helper"
msgstr ""

#: xml/gcut-data-helper.xml:30(link) xml/gcut-data-helper.xml:100(primary)
#: xml/api-index-full.xml:277(link)
msgid "gcut_data_get_uint_helper"
msgstr ""

#: xml/gcut-data-helper.xml:31(returnvalue)
msgid "gint64"
msgstr ""

#: xml/gcut-data-helper.xml:32(link) xml/gcut-data-helper.xml:110(primary)
#: xml/api-index-full.xml:263(link)
msgid "gcut_data_get_int64_helper"
msgstr ""

#: xml/gcut-data-helper.xml:33(returnvalue)
msgid "guint64"
msgstr ""

#: xml/gcut-data-helper.xml:34(link) xml/gcut-data-helper.xml:120(primary)
#: xml/api-index-full.xml:276(link)
msgid "gcut_data_get_uint64_helper"
msgstr ""

#: xml/gcut-data-helper.xml:36(link) xml/gcut-data-helper.xml:130(primary)
#: xml/api-index-full.xml:270(link)
msgid "gcut_data_get_size_helper"
msgstr ""

#: xml/gcut-data-helper.xml:37(returnvalue)
msgid "GType"
msgstr ""

#: xml/gcut-data-helper.xml:38(link) xml/gcut-data-helper.xml:140(primary)
#: xml/api-index-full.xml:273(link)
msgid "gcut_data_get_type_helper"
msgstr ""

#: xml/gcut-data-helper.xml:40(link) xml/gcut-data-helper.xml:150(primary)
#: xml/api-index-full.xml:260(link)
msgid "gcut_data_get_flags_helper"
msgstr ""

#: xml/gcut-data-helper.xml:42(link) xml/gcut-data-helper.xml:160(primary)
#: xml/api-index-full.xml:258(link)
msgid "gcut_data_get_enum_helper"
msgstr ""

#: xml/gcut-data-helper.xml:44(link) xml/gcut-data-helper.xml:170(primary)
#: xml/api-index-full.xml:268(link)
msgid "gcut_data_get_pointer_helper"
msgstr ""

#: xml/gcut-data-helper.xml:46(link) xml/gcut-data-helper.xml:180(primary)
#: xml/api-index-full.xml:252(link)
msgid "gcut_data_get_boxed_helper"
msgstr ""

#: xml/gcut-data-helper.xml:48(link) xml/gcut-data-helper.xml:190(primary)
#: xml/api-index-full.xml:266(link)
msgid "gcut_data_get_object_helper"
msgstr ""

#: xml/gcut-data-helper.xml:50(link) xml/gcut-data-helper.xml:200(primary)
#: xml/api-index-full.xml:250(link)
msgid "gcut_data_get_boolean_helper"
msgstr ""

#: xml/gcut-data-helper.xml:52(link) xml/gcut-data-helper.xml:210(primary)
#: xml/api-index-full.xml:256(link)
msgid "gcut_data_get_double_helper"
msgstr ""

#: xml/gcut-data-helper.xml:69(title)
msgid "gcut_data_get_char_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:71(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link>\n"
"gcut_data_get_char_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                           <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                           <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:79(title)
msgid "gcut_data_get_string_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:81(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"gcut_data_get_string_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                             <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                             <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:89(title)
msgid "gcut_data_get_int_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:91(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gint\"><returnvalue>gint</returnvalue></link>\n"
"gcut_data_get_int_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                          <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                          <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:99(title)
msgid "gcut_data_get_uint_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:101(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_data_get_uint_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                           <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                           <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:109(title)
msgid "gcut_data_get_int64_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:111(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gint64\"><returnvalue>gint64</returnvalue></link>\n"
"gcut_data_get_int64_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                            <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                            <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:119(title)
msgid "gcut_data_get_uint64_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:121(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint64\"><returnvalue>guint64</returnvalue></link>\n"
"gcut_data_get_uint64_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                             <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                             <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:129(title)
msgid "gcut_data_get_size_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:131(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gsize\"><returnvalue>gsize</returnvalue></link>\n"
"gcut_data_get_size_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                           <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                           <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:139(title)
msgid "gcut_data_get_type_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:141(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GType\"><returnvalue>GType</returnvalue></link>\n"
"gcut_data_get_type_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                           <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                           <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:149(title)
msgid "gcut_data_get_flags_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:151(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"guint\"><returnvalue>guint</returnvalue></link>\n"
"gcut_data_get_flags_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                            <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                            <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:159(title)
msgid "gcut_data_get_enum_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:161(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gint\"><returnvalue>gint</returnvalue></link>\n"
"gcut_data_get_enum_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                           <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                           <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:169(title)
msgid "gcut_data_get_pointer_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:171(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gconstpointer\"><returnvalue>gconstpointer</returnvalue></link>\n"
"gcut_data_get_pointer_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                              <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                              <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:179(title)
msgid "gcut_data_get_boxed_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:181(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gconstpointer\"><returnvalue>gconstpointer</returnvalue></link>\n"
"gcut_data_get_boxed_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                            <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                            <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:189(title)
msgid "gcut_data_get_object_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:191(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gpointer\"><returnvalue>gpointer</returnvalue></link>\n"
"gcut_data_get_object_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                             <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                             <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:199(title)
msgid "gcut_data_get_boolean_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:201(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"gcut_data_get_boolean_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                              <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                              <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-data-helper.xml:209(title)
msgid "gcut_data_get_double_helper ()"
msgstr ""

#: xml/gcut-data-helper.xml:211(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gdouble\"><returnvalue>gdouble</returnvalue></link>\n"
"gcut_data_get_double_helper (<parameter><link linkend=\"gconstpointer\"><type>gconstpointer</type></link> data</parameter>,\n"
"                             <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *field_name</parameter>,\n"
"                             <parameter><link linkend=\"CutCallbackFunction\"><type>CutCallbackFunction</type></link> callback</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:13(refpurpose)
msgid "Checks that your program works as you expect with GLib support."
msgstr ""
"GLibサポート付きであなたのプログラムが期待通りに動作しているかを検証します。"

#: xml/gcut-assertions.xml:25(link) xml/gcut-assertions.xml:105(primary)
#: xml/api-index-full.xml:233(link) xml/api-index-1.0.3.xml:14(link)
msgid "gcut_assert_equal_type"
msgstr ""

#: xml/gcut-assertions.xml:27(link) xml/gcut-assertions.xml:134(primary)
#: xml/api-index-full.xml:19(link) xml/api-index-deprecated.xml:11(link)
msgid "cut_assert_equal_g_type"
msgstr ""

#: xml/gcut-assertions.xml:29(link) xml/gcut-assertions.xml:165(primary)
#: xml/api-index-full.xml:237(link) xml/api-index-1.0.3.xml:15(link)
msgid "gcut_assert_equal_value"
msgstr ""

#: xml/gcut-assertions.xml:31(link) xml/gcut-assertions.xml:194(primary)
#: xml/api-index-full.xml:20(link) xml/api-index-deprecated.xml:12(link)
msgid "cut_assert_equal_g_value"
msgstr ""

#: xml/gcut-assertions.xml:33(link) xml/gcut-assertions.xml:225(primary)
#: xml/api-index-full.xml:209(link) xml/api-index-1.0.6.xml:20(link)
msgid "gcut_assert_equal_list"
msgstr ""

#: xml/gcut-assertions.xml:35(link) xml/gcut-assertions.xml:273(primary)
#: xml/api-index-full.xml:215(link) xml/api-index-1.0.3.xml:11(link)
msgid "gcut_assert_equal_list_int"
msgstr ""

#: xml/gcut-assertions.xml:37(link) xml/gcut-assertions.xml:302(primary)
#: xml/api-index-full.xml:17(link) xml/api-index-deprecated.xml:9(link)
#: xml/api-index-0.8.xml:7(link)
msgid "cut_assert_equal_g_list_int"
msgstr ""

#: xml/gcut-assertions.xml:39(link) xml/gcut-assertions.xml:333(primary)
#: xml/api-index-full.xml:222(link) xml/api-index-1.0.3.xml:13(link)
msgid "gcut_assert_equal_list_uint"
msgstr ""

#: xml/gcut-assertions.xml:41(link) xml/gcut-assertions.xml:362(primary)
#: xml/api-index-full.xml:220(link) xml/api-index-1.0.3.xml:12(link)
msgid "gcut_assert_equal_list_string"
msgstr ""

#: xml/gcut-assertions.xml:43(link) xml/gcut-assertions.xml:391(primary)
#: xml/api-index-full.xml:18(link) xml/api-index-deprecated.xml:10(link)
#: xml/api-index-0.8.xml:8(link)
msgid "cut_assert_equal_g_list_string"
msgstr ""

#: xml/gcut-assertions.xml:45(link) xml/gcut-assertions.xml:422(primary)
#: xml/api-index-full.xml:217(link) xml/api-index-1.0.5.xml:22(link)
msgid "gcut_assert_equal_list_object"
msgstr ""

#: xml/gcut-assertions.xml:47(link) xml/gcut-assertions.xml:452(primary)
#: xml/api-index-full.xml:218(link) xml/api-index-1.0.5.xml:23(link)
msgid "gcut_assert_equal_list_object_custom"
msgstr ""

#: xml/gcut-assertions.xml:49(link) xml/gcut-assertions.xml:487(primary)
#: xml/api-index-full.xml:210(link) xml/api-index-1.0.5.xml:20(link)
msgid "gcut_assert_equal_list_enum"
msgstr ""

#: xml/gcut-assertions.xml:51(link) xml/gcut-assertions.xml:521(primary)
#: xml/api-index-full.xml:212(link) xml/api-index-1.0.5.xml:21(link)
msgid "gcut_assert_equal_list_flags"
msgstr ""

#: xml/gcut-assertions.xml:53(link) xml/gcut-assertions.xml:555(primary)
#: xml/api-index-full.xml:203(link) xml/api-index-1.0.6.xml:19(link)
msgid "gcut_assert_equal_hash_table"
msgstr ""

#: xml/gcut-assertions.xml:55(link) xml/gcut-assertions.xml:610(primary)
#: xml/api-index-full.xml:205(link) xml/api-index-1.0.4.xml:7(link)
msgid "gcut_assert_equal_hash_table_string_string"
msgstr ""

#: xml/gcut-assertions.xml:57(link) xml/gcut-assertions.xml:640(primary)
#: xml/api-index-full.xml:239(link) xml/api-index-1.0.3.xml:16(link)
msgid "gcut_assert_error"
msgstr ""

#: xml/gcut-assertions.xml:59(link) xml/gcut-assertions.xml:664(primary)
#: xml/api-index-full.xml:57(link) xml/api-index-deprecated.xml:15(link)
#: xml/api-index-1.0.xml:8(link)
msgid "cut_assert_g_error"
msgstr ""

#: xml/gcut-assertions.xml:61(link) xml/gcut-assertions.xml:690(primary)
#: xml/api-index-full.xml:199(link) xml/api-index-1.0.5.xml:17(link)
msgid "gcut_assert_equal_error"
msgstr ""

#: xml/gcut-assertions.xml:63(link) xml/gcut-assertions.xml:719(primary)
#: xml/api-index-full.xml:247(link) xml/api-index-1.0.3.xml:17(link)
msgid "gcut_assert_remove_path"
msgstr ""

#: xml/gcut-assertions.xml:65(link) xml/gcut-assertions.xml:743(primary)
#: xml/api-index-full.xml:101(link) xml/api-index-deprecated.xml:18(link)
#: xml/api-index-1.0.2.xml:10(link)
msgid "cut_assert_remove_path"
msgstr ""

#: xml/gcut-assertions.xml:67(link) xml/gcut-assertions.xml:769(primary)
#: xml/api-index-full.xml:231(link) xml/api-index-1.0.4.xml:8(link)
msgid "gcut_assert_equal_time_val"
msgstr ""

#: xml/gcut-assertions.xml:69(link) xml/gcut-assertions.xml:798(primary)
#: xml/api-index-full.xml:197(link) xml/api-index-1.0.5.xml:16(link)
msgid "gcut_assert_equal_enum"
msgstr ""

#: xml/gcut-assertions.xml:71(link) xml/gcut-assertions.xml:839(primary)
#: xml/api-index-full.xml:201(link) xml/api-index-1.0.5.xml:18(link)
msgid "gcut_assert_equal_flags"
msgstr ""

#: xml/gcut-assertions.xml:73(link) xml/gcut-assertions.xml:885(primary)
#: xml/api-index-full.xml:224(link) xml/api-index-1.0.5.xml:24(link)
msgid "gcut_assert_equal_object"
msgstr ""

#: xml/gcut-assertions.xml:75(link) xml/gcut-assertions.xml:924(primary)
#: xml/api-index-full.xml:225(link) xml/api-index-1.0.5.xml:25(link)
msgid "gcut_assert_equal_object_custom"
msgstr ""

#: xml/gcut-assertions.xml:77(link) xml/gcut-assertions.xml:976(primary)
#: xml/api-index-full.xml:207(link) xml/api-index-1.0.5.xml:19(link)
msgid "gcut_assert_equal_int64"
msgstr ""

#: xml/gcut-assertions.xml:79(link) xml/gcut-assertions.xml:1005(primary)
#: xml/api-index-full.xml:241(link) xml/api-index-1.1.4.xml:11(link)
msgid "gcut_assert_not_equal_int64"
msgstr ""

#: xml/gcut-assertions.xml:81(link) xml/gcut-assertions.xml:1034(primary)
#: xml/api-index-full.xml:235(link) xml/api-index-1.0.5.xml:26(link)
msgid "gcut_assert_equal_uint64"
msgstr ""

#: xml/gcut-assertions.xml:83(link) xml/gcut-assertions.xml:1063(primary)
#: xml/api-index-full.xml:245(link) xml/api-index-1.1.4.xml:12(link)
msgid "gcut_assert_not_equal_uint64"
msgstr ""

#: xml/gcut-assertions.xml:85(link) xml/gcut-assertions.xml:1092(primary)
#: xml/api-index-full.xml:227(link) xml/api-index-1.0.6.xml:21(link)
msgid "gcut_assert_equal_pid"
msgstr ""

#: xml/gcut-assertions.xml:87(link) xml/gcut-assertions.xml:1121(primary)
#: xml/api-index-full.xml:243(link) xml/api-index-1.0.7.xml:22(link)
msgid "gcut_assert_not_equal_pid"
msgstr ""

#: xml/gcut-assertions.xml:89(link) xml/gcut-assertions.xml:1150(primary)
#: xml/api-index-full.xml:229(link) xml/api-index-1.1.5.xml:19(link)
msgid "gcut_assert_equal_string"
msgstr ""

#: xml/gcut-assertions.xml:104(title)
#, fuzzy
msgid "gcut_assert_equal_type ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:106(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_type (<parameter><link linkend=\"GType\"><type>GType</type></link> expected</parameter>,\n"
"                        <parameter><link linkend=\"GType\"><type>GType</type></link> actual</parameter>,\n"
"                        <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:110(para) xml/gcut-assertions.xml:141(para)
#: xml/gcut-assertions.xml:170(para) xml/gcut-assertions.xml:201(para)
#: xml/gcut-assertions.xml:278(para) xml/gcut-assertions.xml:309(para)
#: xml/gcut-assertions.xml:338(para) xml/gcut-assertions.xml:367(para)
#: xml/gcut-assertions.xml:398(para) xml/gcut-assertions.xml:564(para)
#: xml/gcut-assertions.xml:616(para) xml/gcut-assertions.xml:695(para)
#: xml/gcut-assertions.xml:774(para) xml/gcut-assertions.xml:804(para)
#: xml/gcut-assertions.xml:845(para) xml/gcut-assertions.xml:981(para)
#: xml/gcut-assertions.xml:1039(para) xml/gcut-assertions.xml:1097(para)
#: xml/gcut-assertions.xml:1155(para) xml/cut-assertions.xml:427(para)
#: xml/cut-assertions.xml:482(para) xml/cut-assertions.xml:538(para)
#: xml/cut-assertions.xml:594(para) xml/cut-assertions.xml:650(para)
#: xml/cut-assertions.xml:706(para) xml/cut-assertions.xml:762(para)
#: xml/cut-assertions.xml:818(para) xml/cut-assertions.xml:874(para)
#: xml/cut-assertions.xml:930(para) xml/cut-assertions.xml:986(para)
#: xml/cut-assertions.xml:1045(para) xml/cut-assertions.xml:1100(para)
#: xml/cut-assertions.xml:1156(para) xml/cut-assertions.xml:1212(para)
#: xml/cut-assertions.xml:1268(para) xml/cut-assertions.xml:1324(para)
#: xml/cut-assertions.xml:1380(para) xml/cut-assertions.xml:1436(para)
#: xml/cut-assertions.xml:1492(para) xml/cut-assertions.xml:1548(para)
#: xml/cut-assertions.xml:1604(para) xml/cut-assertions.xml:1663(para)
#: xml/cut-assertions.xml:1791(para) xml/cut-assertions.xml:2702(para)
#: xml/cut-assertions.xml:2757(para) xml/cppcut-assertions.xml:50(para)
#, fuzzy
msgid ""
"Passes if <parameter>expected</parameter> == <parameter>actual</parameter> ."
msgstr ""
"<parameter>expected</parameter> == <parameter>actual</parameter>が成り立つと"
"きパスします。"

#: xml/gcut-assertions.xml:122(para) xml/gcut-assertions.xml:153(para)
#: xml/gcut-assertions.xml:182(para) xml/gcut-assertions.xml:213(para)
#: xml/gcut-assertions.xml:707(para) xml/gcut-assertions.xml:786(para)
#: xml/gcut-assertions.xml:827(para) xml/gcut-assertions.xml:873(para)
#: xml/gcut-assertions.xml:912(para) xml/gcut-assertions.xml:961(para)
#: xml/gcut-assertions.xml:993(para) xml/gcut-assertions.xml:1022(para)
#: xml/gcut-assertions.xml:1051(para) xml/gcut-assertions.xml:1080(para)
#: xml/gcut-assertions.xml:1109(para) xml/gcut-assertions.xml:1138(para)
#: xml/gcut-assertions.xml:1167(para) xml/cut-assertions.xml:2439(para)
#: xml/cppcut-assertions.xml:69(para) xml/cppcut-assertions.xml:106(para)
msgid "an expected value."
msgstr "期待値。"

#: xml/gcut-assertions.xml:125(para) xml/gcut-assertions.xml:156(para)
#: xml/gcut-assertions.xml:185(para) xml/gcut-assertions.xml:216(para)
#: xml/gcut-assertions.xml:710(para) xml/gcut-assertions.xml:789(para)
#: xml/gcut-assertions.xml:830(para) xml/gcut-assertions.xml:876(para)
#: xml/gcut-assertions.xml:915(para) xml/gcut-assertions.xml:964(para)
#: xml/gcut-assertions.xml:996(para) xml/gcut-assertions.xml:1025(para)
#: xml/gcut-assertions.xml:1054(para) xml/gcut-assertions.xml:1083(para)
#: xml/gcut-assertions.xml:1112(para) xml/gcut-assertions.xml:1141(para)
#: xml/gcut-assertions.xml:1170(para) xml/cut-assertions.xml:2442(para)
#: xml/cppcut-assertions.xml:72(para) xml/cppcut-assertions.xml:109(para)
msgid "an actual value."
msgstr "実測値。"

#: xml/gcut-assertions.xml:133(title)
#, fuzzy
msgid "cut_assert_equal_g_type ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:135(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_g_type (<parameter><link linkend=\"GType\"><type>GType</type></link> expected</parameter>,\n"
"                         <parameter><link linkend=\"GType\"><type>GType</type></link> actual</parameter>,\n"
"                         <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:139(para)
#, fuzzy
msgid ""
"<literal>cut_assert_equal_g_type</literal> has been deprecated since version "
"1.0.3 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-assertions.xml:139(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-assert-equal-type"
"\"><function>gcut_assert_equal_type()</function></link> instead."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/gcut-assertions.xml:164(title)
msgid "gcut_assert_equal_value ()"
msgstr ""

#: xml/gcut-assertions.xml:166(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_value (<parameter><link linkend=\"GValue\"><type>GValue</type></link> *expected</parameter>,\n"
"                         <parameter><link linkend=\"GValue\"><type>GValue</type></link> *actual</parameter>,\n"
"                         <parameter>...</parameter>);"
msgstr "<parameter>type1</parameter>の<link linkend=\"GValue\"><type>GValue</type></link>と<parameter>type2</parameter>の<link linkend=\"GValue\"><type>GValue</type></link>の等価性を調べる関数を登録します。"

#: xml/gcut-assertions.xml:193(title)
msgid "cut_assert_equal_g_value ()"
msgstr ""

#: xml/gcut-assertions.xml:195(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_g_value (<parameter><link linkend=\"GValue\"><type>GValue</type></link> *expected</parameter>,\n"
"                          <parameter><link linkend=\"GValue\"><type>GValue</type></link> *actual</parameter>,\n"
"                          <parameter>...</parameter>);"
msgstr "<parameter>type1</parameter>の<link linkend=\"GValue\"><type>GValue</type></link>と<parameter>type2</parameter>の<link linkend=\"GValue\"><type>GValue</type></link>の等価性を調べる関数を登録します。"

#: xml/gcut-assertions.xml:199(para)
#, fuzzy
msgid ""
"<literal>cut_assert_equal_g_value</literal> has been deprecated since "
"version 1.0.3 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-assertions.xml:199(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-assert-equal-value"
"\"><function>gcut_assert_equal_value()</function></link> instead."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/gcut-assertions.xml:224(title)
#, fuzzy
msgid "gcut_assert_equal_list ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:226(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list (<parameter><link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                        <parameter><link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                        <parameter><link linkend=\"GEqualFunc\"><type>GEqualFunc</type></link> equal_function</parameter>,\n"
"                        <parameter><link linkend=\"GCutInspectFunction\"><type>GCutInspectFunction</type></link> inspect_function</parameter>,\n"
"                        <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> inspect_user_data</parameter>,\n"
"                        <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:233(para) xml/gcut-assertions.xml:930(para)
#, fuzzy
msgid ""
"Passes if <parameter>equal_function</parameter> (<parameter>expected</"
"parameter> , <parameter>actual</parameter> ) == <link linkend=\"CUT-TRUE:CAPS"
"\"><literal>CUT_TRUE</literal></link>."
msgstr ""
"<parameter>equal_function</parameter>(<parameter>expected</parameter>, "
"<parameter>actual</parameter>) == <link linkend=\"CUT-TRUE:CAPS"
"\"><literal>CUT_TRUE</literal></link>のときパスします。"

#: xml/gcut-assertions.xml:246(para)
msgid "an expected list."
msgstr "期待するリスト。"

#: xml/gcut-assertions.xml:249(para)
msgid "an actual list."
msgstr "実際のリスト。"

#: xml/gcut-assertions.xml:251(para) xml/gcut-assertions.xml:477(para)
#: xml/gcut-assertions.xml:581(para) xml/gcut-assertions.xml:966(para)
msgid "equal_function"
msgstr ""

#: xml/gcut-assertions.xml:252(para)
msgid ""
"a function that compares each elements of <parameter>expected</parameter> "
"and <parameter>actual</parameter> list."
msgstr ""
"<parameter>expected</parameter>リストと<parameter>actual</parameter>リストの"
"各要素を比較する関数。"

#: xml/gcut-assertions.xml:257(para)
#, fuzzy
msgid "inspect_function"
msgstr "オブジェクト調査関数"

#: xml/gcut-assertions.xml:258(para)
msgid ""
"a function that inspected <parameter>expected</parameter> and "
"<parameter>actual</parameter> list."
msgstr ""
"<parameter>expected</parameter>リストと<parameter>actual</parameter>リスとの"
"詳細を示す関数。"

#: xml/gcut-assertions.xml:262(para) xml/gcut-assertions.xml:599(para)
msgid "inspect_user_data"
msgstr ""

#: xml/gcut-assertions.xml:263(para) xml/gcut-assertions.xml:600(para)
#, fuzzy
msgid "a data to be passed to <parameter>inspect_function</parameter> ."
msgstr "<parameter>inspect_function</parameter>に渡されるデータ。"

#: xml/gcut-assertions.xml:272(title)
#, fuzzy
msgid "gcut_assert_equal_list_int ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:274(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_int (<parameter><link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                            <parameter><link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                            <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:290(para) xml/gcut-assertions.xml:321(para)
msgid "an expected list of integer."
msgstr "期待する整数のリスト。"

#: xml/gcut-assertions.xml:293(para) xml/gcut-assertions.xml:324(para)
msgid "an actual list of integer."
msgstr "実際の整数のリスト。"

#: xml/gcut-assertions.xml:301(title)
#, fuzzy
msgid "cut_assert_equal_g_list_int ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:303(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_g_list_int (<parameter><link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                             <parameter><link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                             <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:307(para)
#, fuzzy
msgid ""
"<literal>cut_assert_equal_g_list_int</literal> has been deprecated since "
"version 1.0.3 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-assertions.xml:307(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-assert-equal-list-int"
"\"><function>gcut_assert_equal_list_int()</function></link> instead."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/gcut-assertions.xml:330(para) xml/gcut-assertions.xml:419(para)
#: xml/cut-experimental.xml:63(para) xml/cut-experimental.xml:100(para)
#: xml/cut-experimental.xml:138(para) xml/cut-experimental.xml:176(para)
#: xml/cut-assertions.xml:2473(para) xml/cut-assertions.xml:3008(para)
msgid "Since: <link linkend=\"api-index-0.8\">0.8</link>"
msgstr ""

#: xml/gcut-assertions.xml:332(title)
#, fuzzy
msgid "gcut_assert_equal_list_uint ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:334(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_uint (<parameter><link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                             <parameter><link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                             <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:350(para)
msgid "an expected list of unsigned integer."
msgstr "期待する符号無し整数のリスト。"

#: xml/gcut-assertions.xml:353(para)
msgid "an actual list of unsigned integer."
msgstr "実際の符号無し整数のリスト。"

#: xml/gcut-assertions.xml:361(title)
#, fuzzy
msgid "gcut_assert_equal_list_string ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:363(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_string (<parameter><link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                               <parameter><link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                               <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:379(para) xml/gcut-assertions.xml:410(para)
msgid "an expected list of string."
msgstr "期待する文字列のリスト。"

#: xml/gcut-assertions.xml:382(para) xml/gcut-assertions.xml:413(para)
msgid "an actual list of string."
msgstr "実際の文字列のリスト。"

#: xml/gcut-assertions.xml:390(title)
#, fuzzy
msgid "cut_assert_equal_g_list_string ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:392(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_g_list_string (<parameter><link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                                <parameter><link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                                <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:396(para)
#, fuzzy
msgid ""
"<literal>cut_assert_equal_g_list_string</literal> has been deprecated since "
"version 1.0.3 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-assertions.xml:396(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-assert-equal-list-string"
"\"><function>gcut_assert_equal_list_string()</function></link> instead."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/gcut-assertions.xml:421(title)
#, fuzzy
msgid "gcut_assert_equal_list_object ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:423(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_object (<parameter><link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                               <parameter><link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                               <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:427(para)
msgid ""
"Passes if <parameter>expected</parameter> and <parameter>actual</parameter> "
"has same GObject * in same order."
msgstr ""
"<parameter>expected</parameter>と<parameter>actual</parameter>が同じGObject *"
"を同じ順番で持っているときパスします。"

#: xml/gcut-assertions.xml:440(para) xml/gcut-assertions.xml:472(para)
msgid ""
"an expected list of <link linkend=\"GObject\"><type>GObject</type></link>."
msgstr ""
"期待する<link linkend=\"GObject\"><type>GObject</type></link>のリスト。"

#: xml/gcut-assertions.xml:443(para) xml/gcut-assertions.xml:475(para)
msgid ""
"an actual list of <link linkend=\"GObject\"><type>GObject</type></link>."
msgstr "実際の<link linkend=\"GObject\"><type>GObject</type></link>のリスト。"

#: xml/gcut-assertions.xml:451(title)
msgid "gcut_assert_equal_list_object_custom ()"
msgstr ""

#: xml/gcut-assertions.xml:453(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_object_custom (<parameter><link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                                      <parameter><link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                                      <parameter><link linkend=\"GEqualFunc\"><type>GEqualFunc</type></link> equal_function</parameter>,\n"
"                                      <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:458(para)
#, fuzzy
msgid ""
"Passes if <parameter>expected</parameter> and <parameter>actual</parameter> "
"has same <link linkend=\"GObject\"><type>GObject</type></link> in same "
"order. Each comparison of <link linkend=\"GObject\"><type>GObject</type></"
"link> uses <parameter>equal_function</parameter> ."
msgstr ""
"<parameter>expected</parameter>と<parameter>actual</parameter>が等しい<link "
"linkend=\"GObject\"><type>GObject</type></link>を同じ順序で持っているときパス"
"します。それぞれの<link linkend=\"GObject\"><type>GObject</type></link>の比較"
"には<parameter>equal_function</parameter>を使います。"

#: xml/gcut-assertions.xml:478(para)
msgid ""
"a function that compares two <link linkend=\"GObject\"><type>GObject</type></"
"link>."
msgstr ""
"ふたつの<link linkend=\"GObject\"><type>GObject</type></link>を比較する関数。"

#: xml/gcut-assertions.xml:486(title)
#, fuzzy
msgid "gcut_assert_equal_list_enum ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:488(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_enum (<parameter><link linkend=\"GType\"><type>GType</type></link> type</parameter>,\n"
"                             <parameter><link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                             <parameter><link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                             <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:493(para)
msgid ""
"Passes if <parameter>expected</parameter> and <parameter>actual</parameter> "
"has same enum values in same order."
msgstr ""
"<parameter>expected</parameter>と<parameter>actual</parameter>が同じ列挙値を"
"同じ順序で持っているときパスします。"

#: xml/gcut-assertions.xml:509(para)
msgid "an expected list of enum value."
msgstr "期待する列挙値のリスト。"

#: xml/gcut-assertions.xml:512(para)
msgid "an actual list of enum value."
msgstr "実際の列挙値のリスト。"

#: xml/gcut-assertions.xml:520(title)
#, fuzzy
msgid "gcut_assert_equal_list_flags ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:522(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_flags (<parameter><link linkend=\"GType\"><type>GType</type></link> type</parameter>,\n"
"                              <parameter><link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                              <parameter><link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                              <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:527(para)
msgid ""
"Passes if <parameter>expected</parameter> and <parameter>actual</parameter> "
"has same flags values in same order."
msgstr ""
"<parameter>expected</parameter>と<parameter>actual</parameter>が同じフラグ値"
"を同じ順序で持っているときパスします。"

#: xml/gcut-assertions.xml:543(para)
msgid "an expected list of flags value."
msgstr "期待するフラグ値のリスト。"

#: xml/gcut-assertions.xml:546(para)
msgid "an actual list of flags value."
msgstr "実際のフラグ値のリスト。"

#: xml/gcut-assertions.xml:554(title)
msgid "gcut_assert_equal_hash_table ()"
msgstr ""

#: xml/gcut-assertions.xml:556(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_hash_table (<parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *expected</parameter>,\n"
"                              <parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *actual</parameter>,\n"
"                              <parameter><link linkend=\"GEqualFunc\"><type>GEqualFunc</type></link> equal_function</parameter>,\n"
"                              <parameter><link linkend=\"GCutInspectFunction\"><type>GCutInspectFunction</type></link> key_inspect_function</parameter>,\n"
"                              <parameter><link linkend=\"GCutInspectFunction\"><type>GCutInspectFunction</type></link> value_inspect_function</parameter>,\n"
"                              <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> inspect_user_data</parameter>,\n"
"                              <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:576(para) xml/gcut-assertions.xml:628(para)
msgid ""
"an expected <link linkend=\"GHashTable\"><type>GHashTable</type></link> of "
"string."
msgstr ""
"期待する文字列の<link linkend=\"GHashTable\"><type>GHashTable</type></link>。"

#: xml/gcut-assertions.xml:579(para) xml/gcut-assertions.xml:631(para)
msgid ""
"an actual <link linkend=\"GHashTable\"><type>GHashTable</type></link> of "
"string."
msgstr ""
"実際の文字列の<link linkend=\"GHashTable\"><type>GHashTable</type></link>。"

#: xml/gcut-assertions.xml:582(para)
msgid ""
"a function that compares each values of <parameter>expected</parameter> and "
"<parameter>actual</parameter> hash table."
msgstr ""
"<parameter>expected</parameter>ハッシュテーブルと<parameter>actual</"
"parameter>ハッシュテーブルのそれぞれの値を比較する関数。"

#: xml/gcut-assertions.xml:587(para)
#, fuzzy
msgid "key_inspect_function"
msgstr "オブジェクト調査関数"

#: xml/gcut-assertions.xml:588(para)
msgid ""
"a function that inspected a key of <parameter>expected</parameter> and "
"<parameter>actual</parameter> hash table."
msgstr ""
"<parameter>expected</parameter>ハッシュテーブルと<parameter>actual</"
"parameter>ハッシュテーブルのそれぞれのキーの詳細を示す関数。"

#: xml/gcut-assertions.xml:593(para)
#, fuzzy
msgid "value_inspect_function"
msgstr "オブジェクト調査関数"

#: xml/gcut-assertions.xml:594(para)
msgid ""
"a function that inspected a value of <parameter>expected</parameter> and "
"<parameter>actual</parameter> hash table."
msgstr ""
"<parameter>expected</parameter>ハッシュテーブルと<parameter>actual</"
"parameter>ハッシュテーブルのそれぞれの値の詳細を示す関数。"

#: xml/gcut-assertions.xml:609(title)
msgid "gcut_assert_equal_hash_table_string_string ()"
msgstr ""

#: xml/gcut-assertions.xml:611(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_hash_table_string_string\n"
"                               (<parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *expected</parameter>,\n"
"                                <parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *actual</parameter>,\n"
"                                <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:639(title)
msgid "gcut_assert_error ()"
msgstr ""

#: xml/gcut-assertions.xml:641(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_error (<parameter><link linkend=\"GError\"><type>GError</type></link> *error</parameter>,\n"
"                   <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:644(para) xml/gcut-assertions.xml:670(para)
msgid ""
"Passes if <parameter>error</parameter> == <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>."
msgstr ""
"<parameter>error</parameter> == <link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>のときパスします。"

#: xml/gcut-assertions.xml:655(para) xml/gcut-assertions.xml:681(para)
msgid "a target <link linkend=\"GError\"><type>GError</type></link>."
msgstr "検証対象の<link linkend=\"GError\"><type>GError</type></link>。"

#: xml/gcut-assertions.xml:663(title)
msgid "cut_assert_g_error ()"
msgstr ""

#: xml/gcut-assertions.xml:665(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_g_error (<parameter><link linkend=\"GError\"><type>GError</type></link> *error</parameter>,\n"
"                    <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:668(para)
#, fuzzy
msgid ""
"<literal>cut_assert_g_error</literal> has been deprecated since version "
"1.0.3 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-assertions.xml:668(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-assert-error\"><function>gcut_assert_error()</"
"function></link> instead."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/gcut-assertions.xml:687(para) xml/cut-assertions.xml:2664(para)
#: xml/cut-assertions.xml:2694(para) xml/cut-assertions.xml:2723(para)
msgid "Since: <link linkend=\"api-index-1.0\">1.0</link>"
msgstr ""

#: xml/gcut-assertions.xml:689(title)
msgid "gcut_assert_equal_error ()"
msgstr ""

#: xml/gcut-assertions.xml:691(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_error (<parameter><link linkend=\"GError\"><type>GError</type></link> *expected</parameter>,\n"
"                         <parameter><link linkend=\"GError\"><type>GError</type></link> *actual</parameter>,\n"
"                         <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:718(title)
#, fuzzy
msgid "gcut_assert_remove_path ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:720(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_remove_path (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *path</parameter>,\n"
"                         <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:723(para) xml/gcut-assertions.xml:749(para)
#, fuzzy
msgid ""
"Passes if cut_utils_build_path(<parameter>path</parameter> , ...) is removed "
"successfully."
msgstr ""
"cut_utils_build_path(<parameter>path</parameter>, ...)の削除に成功するとパス"
"します。"

#: xml/gcut-assertions.xml:734(para) xml/gcut-assertions.xml:760(para)
msgid "a first element of the path to the removed path."
msgstr "削除するパスの最初の要素。"

#: xml/gcut-assertions.xml:737(para) xml/gcut-assertions.xml:763(para)
msgid "remaining elements in path. NULL terminated."
msgstr "パスの残りの要素。NULL終端。"

#: xml/gcut-assertions.xml:742(title)
#, fuzzy
msgid "cut_assert_remove_path ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:744(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_remove_path (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *path</parameter>,\n"
"                        <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:747(para)
#, fuzzy
msgid ""
"<literal>cut_assert_remove_path</literal> has been deprecated since version "
"1.0.3 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/gcut-assertions.xml:747(para)
#, fuzzy
msgid ""
"Use <link linkend=\"gcut-assert-remove-path"
"\"><function>gcut_assert_remove_path()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/gcut-assertions.xml:766(para) xml/cut-test-utils.xml:449(para)
#: xml/cut-test-utils.xml:483(para) xml/cut-test-utils.xml:547(para)
#: xml/cut-test-utils.xml:609(para) xml/cut-assertions.xml:2537(para)
#: xml/cut-assertions.xml:2599(para) xml/cut-assertions.xml:2752(para)
#: xml/cut-assertions.xml:2883(para)
msgid "Since: <link linkend=\"api-index-1.0.2\">1.0.2</link>"
msgstr ""

#: xml/gcut-assertions.xml:768(title)
msgid "gcut_assert_equal_time_val ()"
msgstr ""

#: xml/gcut-assertions.xml:770(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_time_val (<parameter><link linkend=\"GTimeVal\"><type>GTimeVal</type></link> expected</parameter>,\n"
"                            <parameter><link linkend=\"GTimeVal\"><type>GTimeVal</type></link> actual</parameter>,\n"
"                            <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:797(title)
msgid "gcut_assert_equal_enum ()"
msgstr ""

#: xml/gcut-assertions.xml:799(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_enum (<parameter><link linkend=\"GType\"><type>GType</type></link> enum_type</parameter>,\n"
"                        <parameter><link linkend=\"gint\"><type>gint</type></link> expected</parameter>,\n"
"                        <parameter><link linkend=\"gint\"><type>gint</type></link> actual</parameter>,\n"
"                        <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:838(title)
msgid "gcut_assert_equal_flags ()"
msgstr ""

#: xml/gcut-assertions.xml:840(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_flags (<parameter><link linkend=\"GType\"><type>GType</type></link> flags_type</parameter>,\n"
"                         <parameter><link linkend=\"guint\"><type>guint</type></link> expected</parameter>,\n"
"                         <parameter><link linkend=\"guint\"><type>guint</type></link> actual</parameter>,\n"
"                         <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:884(title)
msgid "gcut_assert_equal_object ()"
msgstr ""

#: xml/gcut-assertions.xml:886(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_object (<parameter><link linkend=\"GObject\"><type>GObject</type></link> *expected</parameter>,\n"
"                          <parameter><link linkend=\"GObject\"><type>GObject</type></link> *actual</parameter>,\n"
"                          <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:890(para)
#, fuzzy
msgid ""
"Passes if <parameter>expected</parameter> == <parameter>actual</parameter> . "
"See <link linkend=\"gcut-assert-equal-object-custom"
"\"><function>gcut_assert_equal_object_custom()</function></link> when you "
"need to customize equality check."
msgstr ""
"<parameter>expected</parameter> == <parameter>actual</parameter>のときパスし"
"ます。等価条件を変更する必要がある場合は<link linkend=\"gcut-assert-equal-"
"object-custom\"><function>gcut_assert_equal_object_custom()</function></link>"
"見てください。"

#: xml/gcut-assertions.xml:923(title)
msgid "gcut_assert_equal_object_custom ()"
msgstr ""

#: xml/gcut-assertions.xml:925(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_object_custom (<parameter><link linkend=\"GObject\"><type>GObject</type></link> *expected</parameter>,\n"
"                                 <parameter><link linkend=\"GObject\"><type>GObject</type></link> *actual</parameter>,\n"
"                                 <parameter><link linkend=\"GEqualFunc\"><type>GEqualFunc</type></link> equal_function</parameter>,\n"
"                                 <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:967(para)
msgid "a function that compare two objects."
msgstr "ふたつのオブジェクトを比較する関数。"

#: xml/gcut-assertions.xml:975(title)
#, fuzzy
msgid "gcut_assert_equal_int64 ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions.xml:977(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_int64 (<parameter><link linkend=\"gint64\"><type>gint64</type></link> expected</parameter>,\n"
"                         <parameter><link linkend=\"gint64\"><type>gint64</type></link> actual</parameter>,\n"
"                         <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:1004(title)
msgid "gcut_assert_not_equal_int64 ()"
msgstr ""

#: xml/gcut-assertions.xml:1006(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_not_equal_int64 (<parameter><link linkend=\"gint64\"><type>gint64</type></link> expected</parameter>,\n"
"                             <parameter><link linkend=\"gint64\"><type>gint64</type></link> actual</parameter>,\n"
"                             <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:1010(para) xml/gcut-assertions.xml:1068(para)
#: xml/gcut-assertions.xml:1126(para) xml/cut-assertions.xml:456(para)
#: xml/cut-assertions.xml:510(para) xml/cut-assertions.xml:566(para)
#: xml/cut-assertions.xml:622(para) xml/cut-assertions.xml:678(para)
#: xml/cut-assertions.xml:734(para) xml/cut-assertions.xml:790(para)
#: xml/cut-assertions.xml:846(para) xml/cut-assertions.xml:902(para)
#: xml/cut-assertions.xml:958(para) xml/cut-assertions.xml:1014(para)
#: xml/cut-assertions.xml:1074(para) xml/cut-assertions.xml:1128(para)
#: xml/cut-assertions.xml:1184(para) xml/cut-assertions.xml:1240(para)
#: xml/cut-assertions.xml:1296(para) xml/cut-assertions.xml:1352(para)
#: xml/cut-assertions.xml:1408(para) xml/cut-assertions.xml:1464(para)
#: xml/cut-assertions.xml:1520(para) xml/cut-assertions.xml:1576(para)
#: xml/cut-assertions.xml:1632(para) xml/cut-assertions.xml:1692(para)
#: xml/cut-assertions.xml:1823(para) xml/cppcut-assertions.xml:87(para)
#, fuzzy
msgid ""
"Passes if <parameter>expected</parameter> != <parameter>actual</parameter> ."
msgstr ""
"<parameter>expected</parameter> != <parameter>actual</parameter>が成り立つと"
"きパスします。"

#: xml/gcut-assertions.xml:1031(para) xml/gcut-assertions.xml:1089(para)
#: xml/cut-test-utils.xml:424(para) xml/cut-helper.xml:638(para)
#: xml/cut-assertions.xml:2805(para) xml/cut-assertions.xml:2831(para)
msgid "Since: <link linkend=\"api-index-1.1.4\">1.1.4</link>"
msgstr ""

#: xml/gcut-assertions.xml:1033(title)
msgid "gcut_assert_equal_uint64 ()"
msgstr ""

#: xml/gcut-assertions.xml:1035(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_uint64 (<parameter><link linkend=\"guint64\"><type>guint64</type></link> expected</parameter>,\n"
"                          <parameter><link linkend=\"guint64\"><type>guint64</type></link> actual</parameter>,\n"
"                          <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:1062(title)
msgid "gcut_assert_not_equal_uint64 ()"
msgstr ""

#: xml/gcut-assertions.xml:1064(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_not_equal_uint64 (<parameter><link linkend=\"guint64\"><type>guint64</type></link> expected</parameter>,\n"
"                              <parameter><link linkend=\"guint64\"><type>guint64</type></link> actual</parameter>,\n"
"                              <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:1091(title)
msgid "gcut_assert_equal_pid ()"
msgstr ""

#: xml/gcut-assertions.xml:1093(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_pid (<parameter><link linkend=\"GPid\"><type>GPid</type></link> expected</parameter>,\n"
"                       <parameter><link linkend=\"GPid\"><type>GPid</type></link> actual</parameter>,\n"
"                       <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:1120(title)
msgid "gcut_assert_not_equal_pid ()"
msgstr ""

#: xml/gcut-assertions.xml:1122(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_not_equal_pid (<parameter><link linkend=\"GPid\"><type>GPid</type></link> expected</parameter>,\n"
"                           <parameter><link linkend=\"GPid\"><type>GPid</type></link> actual</parameter>,\n"
"                           <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions.xml:1149(title)
msgid "gcut_assert_equal_string ()"
msgstr ""

#: xml/gcut-assertions.xml:1151(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_string (<parameter><link linkend=\"GString\"><type>GString</type></link> *expected</parameter>,\n"
"                          <parameter><link linkend=\"GString\"><type>GString</type></link> *actual</parameter>,\n"
"                          <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:7(refentrytitle)
#: xml/gcut-assertions-helper.xml:12(refname) xml/api-index-full.xml:198(link)
#: xml/api-index-full.xml:200(link) xml/api-index-full.xml:202(link)
#: xml/api-index-full.xml:204(link) xml/api-index-full.xml:206(link)
#: xml/api-index-full.xml:208(link) xml/api-index-full.xml:211(link)
#: xml/api-index-full.xml:213(link) xml/api-index-full.xml:214(link)
#: xml/api-index-full.xml:216(link) xml/api-index-full.xml:219(link)
#: xml/api-index-full.xml:221(link) xml/api-index-full.xml:223(link)
#: xml/api-index-full.xml:226(link) xml/api-index-full.xml:228(link)
#: xml/api-index-full.xml:230(link) xml/api-index-full.xml:232(link)
#: xml/api-index-full.xml:234(link) xml/api-index-full.xml:236(link)
#: xml/api-index-full.xml:238(link) xml/api-index-full.xml:240(link)
#: xml/api-index-full.xml:242(link) xml/api-index-full.xml:244(link)
#: xml/api-index-full.xml:246(link) xml/api-index-full.xml:248(link)
msgid "gcut-assertions-helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:24(link)
#: xml/gcut-assertions-helper.xml:90(primary) xml/api-index-full.xml:234(link)
msgid "gcut_assert_equal_type_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:26(link)
#: xml/gcut-assertions-helper.xml:101(primary) xml/api-index-full.xml:238(link)
msgid "gcut_assert_equal_value_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:28(link)
#: xml/gcut-assertions-helper.xml:112(primary) xml/api-index-full.xml:214(link)
msgid "gcut_assert_equal_list_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:30(link)
#: xml/gcut-assertions-helper.xml:127(primary) xml/api-index-full.xml:216(link)
msgid "gcut_assert_equal_list_int_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:32(link)
#: xml/gcut-assertions-helper.xml:138(primary) xml/api-index-full.xml:223(link)
msgid "gcut_assert_equal_list_uint_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:34(link)
#: xml/gcut-assertions-helper.xml:149(primary) xml/api-index-full.xml:221(link)
msgid "gcut_assert_equal_list_string_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:36(link)
#: xml/gcut-assertions-helper.xml:160(primary) xml/api-index-full.xml:211(link)
msgid "gcut_assert_equal_list_enum_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:38(link)
#: xml/gcut-assertions-helper.xml:173(primary) xml/api-index-full.xml:213(link)
msgid "gcut_assert_equal_list_flags_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:40(link)
#: xml/gcut-assertions-helper.xml:186(primary) xml/api-index-full.xml:219(link)
msgid "gcut_assert_equal_list_object_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:42(link)
#: xml/gcut-assertions-helper.xml:198(primary) xml/api-index-full.xml:204(link)
msgid "gcut_assert_equal_hash_table_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:44(link)
#: xml/gcut-assertions-helper.xml:214(primary) xml/api-index-full.xml:206(link)
msgid "gcut_assert_equal_hash_table_string_string_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:46(link)
#: xml/gcut-assertions-helper.xml:226(primary) xml/api-index-full.xml:240(link)
msgid "gcut_assert_error_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:48(link)
#: xml/gcut-assertions-helper.xml:235(primary) xml/api-index-full.xml:200(link)
msgid "gcut_assert_equal_error_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:50(link)
#: xml/gcut-assertions-helper.xml:246(primary) xml/api-index-full.xml:248(link)
msgid "gcut_assert_remove_path_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:52(link)
#: xml/gcut-assertions-helper.xml:255(primary) xml/api-index-full.xml:232(link)
msgid "gcut_assert_equal_time_val_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:54(link)
#: xml/gcut-assertions-helper.xml:266(primary) xml/api-index-full.xml:198(link)
msgid "gcut_assert_equal_enum_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:56(link)
#: xml/gcut-assertions-helper.xml:279(primary) xml/api-index-full.xml:202(link)
msgid "gcut_assert_equal_flags_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:58(link)
#: xml/gcut-assertions-helper.xml:292(primary) xml/api-index-full.xml:226(link)
msgid "gcut_assert_equal_object_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:60(link)
#: xml/gcut-assertions-helper.xml:305(primary) xml/api-index-full.xml:208(link)
msgid "gcut_assert_equal_int64_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:62(link)
#: xml/gcut-assertions-helper.xml:316(primary) xml/api-index-full.xml:242(link)
msgid "gcut_assert_not_equal_int64_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:64(link)
#: xml/gcut-assertions-helper.xml:327(primary) xml/api-index-full.xml:236(link)
msgid "gcut_assert_equal_uint64_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:66(link)
#: xml/gcut-assertions-helper.xml:338(primary) xml/api-index-full.xml:246(link)
msgid "gcut_assert_not_equal_uint64_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:68(link)
#: xml/gcut-assertions-helper.xml:349(primary) xml/api-index-full.xml:228(link)
msgid "gcut_assert_equal_pid_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:70(link)
#: xml/gcut-assertions-helper.xml:360(primary) xml/api-index-full.xml:244(link)
msgid "gcut_assert_not_equal_pid_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:72(link)
#: xml/gcut-assertions-helper.xml:371(primary) xml/api-index-full.xml:230(link)
msgid "gcut_assert_equal_string_helper"
msgstr ""

#: xml/gcut-assertions-helper.xml:89(title)
#, fuzzy
msgid "gcut_assert_equal_type_helper ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions-helper.xml:91(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_type_helper (<parameter><link linkend=\"GType\"><type>GType</type></link> expected</parameter>,\n"
"                               <parameter><link linkend=\"GType\"><type>GType</type></link> actual</parameter>,\n"
"                               <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                               <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:100(title)
msgid "gcut_assert_equal_value_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:102(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_value_helper (<parameter><link linkend=\"GValue\"><type>GValue</type></link> *expected</parameter>,\n"
"                                <parameter><link linkend=\"GValue\"><type>GValue</type></link> *actual</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:111(title)
#, fuzzy
msgid "gcut_assert_equal_list_helper ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions-helper.xml:113(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_helper (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                               <parameter>const <link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                               <parameter><link linkend=\"GEqualFunc\"><type>GEqualFunc</type></link> equal_function</parameter>,\n"
"                               <parameter><link linkend=\"GCutInspectFunction\"><type>GCutInspectFunction</type></link> inspect_function</parameter>,\n"
"                               <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> inspect_user_data</parameter>,\n"
"                               <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                               <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>,\n"
"                               <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_equal_function</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:126(title)
#, fuzzy
msgid "gcut_assert_equal_list_int_helper ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions-helper.xml:128(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_int_helper (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                                   <parameter>const <link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                                   <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                   <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:137(title)
#, fuzzy
msgid "gcut_assert_equal_list_uint_helper ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions-helper.xml:139(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_uint_helper (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                                    <parameter>const <link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                                    <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                    <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:148(title)
#, fuzzy
msgid "gcut_assert_equal_list_string_helper ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions-helper.xml:150(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_string_helper (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                                      <parameter>const <link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                                      <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                      <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:159(title)
msgid "gcut_assert_equal_list_enum_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:161(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_enum_helper (<parameter><link linkend=\"GType\"><type>GType</type></link> type</parameter>,\n"
"                                    <parameter>const <link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                                    <parameter>const <link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                                    <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_type</parameter>,\n"
"                                    <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                    <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:172(title)
#, fuzzy
msgid "gcut_assert_equal_list_flags_helper ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions-helper.xml:174(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_flags_helper (<parameter><link linkend=\"GType\"><type>GType</type></link> type</parameter>,\n"
"                                     <parameter>const <link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                                     <parameter>const <link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                                     <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_type</parameter>,\n"
"                                     <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                     <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:185(title)
msgid "gcut_assert_equal_list_object_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:187(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_list_object_helper (<parameter>const <link linkend=\"GList\"><type>GList</type></link> *expected</parameter>,\n"
"                                      <parameter>const <link linkend=\"GList\"><type>GList</type></link> *actual</parameter>,\n"
"                                      <parameter><link linkend=\"GEqualFunc\"><type>GEqualFunc</type></link> equal_function</parameter>,\n"
"                                      <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                      <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:197(title)
msgid "gcut_assert_equal_hash_table_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:199(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_hash_table_helper (<parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *expected</parameter>,\n"
"                                     <parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *actual</parameter>,\n"
"                                     <parameter><link linkend=\"GEqualFunc\"><type>GEqualFunc</type></link> equal_function</parameter>,\n"
"                                     <parameter><link linkend=\"GCutInspectFunction\"><type>GCutInspectFunction</type></link> key_inspect_function</parameter>,\n"
"                                     <parameter><link linkend=\"GCutInspectFunction\"><type>GCutInspectFunction</type></link> value_inspect_function</parameter>,\n"
"                                     <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> inspect_user_data</parameter>,\n"
"                                     <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                     <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>,\n"
"                                     <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_equal_function</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:213(title)
msgid "gcut_assert_equal_hash_table_string_string_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:215(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_hash_table_string_string_helper\n"
"                               (<parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *expected</parameter>,\n"
"                                <parameter><link linkend=\"GHashTable\"><type>GHashTable</type></link> *actual</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:225(title)
msgid "gcut_assert_error_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:227(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_error_helper (<parameter><link linkend=\"GError\"><type>GError</type></link> *error</parameter>,\n"
"                          <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_error</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:234(title)
msgid "gcut_assert_equal_error_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:236(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_error_helper (<parameter>const <link linkend=\"GError\"><type>GError</type></link> *expected</parameter>,\n"
"                                <parameter>const <link linkend=\"GError\"><type>GError</type></link> *actual</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:245(title)
#, fuzzy
msgid "gcut_assert_remove_path_helper ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions-helper.xml:247(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_remove_path_helper (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *path</parameter>,\n"
"                                <parameter>...</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:254(title)
msgid "gcut_assert_equal_time_val_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:256(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_time_val_helper (<parameter><link linkend=\"GTimeVal\"><type>GTimeVal</type></link> *expected</parameter>,\n"
"                                   <parameter><link linkend=\"GTimeVal\"><type>GTimeVal</type></link> *actual</parameter>,\n"
"                                   <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                   <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *actual_expected</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:265(title)
msgid "gcut_assert_equal_enum_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:267(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_enum_helper (<parameter><link linkend=\"GType\"><type>GType</type></link> enum_type</parameter>,\n"
"                               <parameter><link linkend=\"gint\"><type>gint</type></link> expected</parameter>,\n"
"                               <parameter><link linkend=\"gint\"><type>gint</type></link> actual</parameter>,\n"
"                               <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_enum_type</parameter>,\n"
"                               <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                               <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:278(title)
msgid "gcut_assert_equal_flags_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:280(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_flags_helper (<parameter><link linkend=\"GType\"><type>GType</type></link> flags_type</parameter>,\n"
"                                <parameter><link linkend=\"gint\"><type>gint</type></link> expected</parameter>,\n"
"                                <parameter><link linkend=\"gint\"><type>gint</type></link> actual</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_flags_type</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:291(title)
msgid "gcut_assert_equal_object_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:293(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_object_helper (<parameter><link linkend=\"GObject\"><type>GObject</type></link> *expected</parameter>,\n"
"                                 <parameter><link linkend=\"GObject\"><type>GObject</type></link> *actual</parameter>,\n"
"                                 <parameter><link linkend=\"GEqualFunc\"><type>GEqualFunc</type></link> equal_function</parameter>,\n"
"                                 <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                 <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>,\n"
"                                 <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_equal_function</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:304(title)
#, fuzzy
msgid "gcut_assert_equal_int64_helper ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions-helper.xml:306(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_int64_helper (<parameter><link linkend=\"gint64\"><type>gint64</type></link> expected</parameter>,\n"
"                                <parameter><link linkend=\"gint64\"><type>gint64</type></link> actual</parameter>,\n"
"                                <parameter>const <link linkend=\"char\"><type>char</type></link> *expression_expected</parameter>,\n"
"                                <parameter>const <link linkend=\"char\"><type>char</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:315(title)
msgid "gcut_assert_not_equal_int64_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:317(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_not_equal_int64_helper (<parameter><link linkend=\"gint64\"><type>gint64</type></link> expected</parameter>,\n"
"                                    <parameter><link linkend=\"gint64\"><type>gint64</type></link> actual</parameter>,\n"
"                                    <parameter>const <link linkend=\"char\"><type>char</type></link> *expression_expected</parameter>,\n"
"                                    <parameter>const <link linkend=\"char\"><type>char</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:326(title)
#, fuzzy
msgid "gcut_assert_equal_uint64_helper ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions-helper.xml:328(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_uint64_helper (<parameter><link linkend=\"guint64\"><type>guint64</type></link> expected</parameter>,\n"
"                                 <parameter><link linkend=\"guint64\"><type>guint64</type></link> actual</parameter>,\n"
"                                 <parameter>const <link linkend=\"char\"><type>char</type></link> *expression_expected</parameter>,\n"
"                                 <parameter>const <link linkend=\"char\"><type>char</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:337(title)
msgid "gcut_assert_not_equal_uint64_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:339(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_not_equal_uint64_helper (<parameter><link linkend=\"guint64\"><type>guint64</type></link> expected</parameter>,\n"
"                                     <parameter><link linkend=\"guint64\"><type>guint64</type></link> actual</parameter>,\n"
"                                     <parameter>const <link linkend=\"char\"><type>char</type></link> *expression_expected</parameter>,\n"
"                                     <parameter>const <link linkend=\"char\"><type>char</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:348(title)
#, fuzzy
msgid "gcut_assert_equal_pid_helper ()"
msgstr "cut_assert_match_with_free ()"

#: xml/gcut-assertions-helper.xml:350(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_pid_helper (<parameter><link linkend=\"GPid\"><type>GPid</type></link> expected</parameter>,\n"
"                              <parameter><link linkend=\"GPid\"><type>GPid</type></link> actual</parameter>,\n"
"                              <parameter>const <link linkend=\"char\"><type>char</type></link> *expression_expected</parameter>,\n"
"                              <parameter>const <link linkend=\"char\"><type>char</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:359(title)
msgid "gcut_assert_not_equal_pid_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:361(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_not_equal_pid_helper (<parameter><link linkend=\"GPid\"><type>GPid</type></link> expected</parameter>,\n"
"                                  <parameter><link linkend=\"GPid\"><type>GPid</type></link> actual</parameter>,\n"
"                                  <parameter>const <link linkend=\"char\"><type>char</type></link> *expression_expected</parameter>,\n"
"                                  <parameter>const <link linkend=\"char\"><type>char</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/gcut-assertions-helper.xml:370(title)
msgid "gcut_assert_equal_string_helper ()"
msgstr ""

#: xml/gcut-assertions-helper.xml:372(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"gcut_assert_equal_string_helper (<parameter>const <link linkend=\"GString\"><type>GString</type></link> *expected</parameter>,\n"
"                                 <parameter>const <link linkend=\"GString\"><type>GString</type></link> *actual</parameter>,\n"
"                                 <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_expected</parameter>,\n"
"                                 <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *expression_actual</parameter>);"
msgstr ""

#: xml/cutter.xml:7(refentrytitle) xml/cutter.xml:12(refname)
#: xml/api-index-full.xml:7(link) xml/api-index-full.xml:8(link)
#: xml/api-index-full.xml:168(link) xml/api-index-full.xml:452(link)
#: xml/api-index-full.xml:482(link) xml/api-index-full.xml:524(link)
#: xml/api-index-full.xml:552(link) xml/api-index-full.xml:553(link)
#: xml/api-index-full.xml:555(link) xml/api-index-full.xml:556(link)
#: xml/api-index-full.xml:560(link) xml/api-index-full.xml:561(link)
#: xml/api-index-full.xml:562(link) xml/api-index-full.xml:585(link)
#: xml/api-index-full.xml:640(link) xml/api-index-full.xml:641(link)
#: xml/api-index-deprecated.xml:7(link) xml/api-index-deprecated.xml:63(link)
#: xml/api-index-deprecated.xml:69(link) xml/api-index-deprecated.xml:70(link)
#: xml/api-index-deprecated.xml:71(link) xml/api-index-deprecated.xml:74(link)
#: xml/api-index-1.1.2.xml:7(link) xml/api-index-1.1.0.xml:52(link)
#: xml/api-index-1.0.6.xml:74(link) xml/api-index-1.0.6.xml:85(link)
#: xml/api-index-1.0.6.xml:86(link) xml/api-index-1.0.6.xml:87(link)
#: xml/api-index-1.0.6.xml:88(link) xml/api-index-1.0.6.xml:89(link)
#: xml/api-index-1.0.6.xml:93(link) xml/api-index-1.0.4.xml:11(link)
#: xml/api-index-1.0.4.xml:14(link) xml/api-index-1.0.4.xml:15(link)
#: xml/api-index-1.0.3.xml:7(link)
msgid "Cutter"
msgstr ""

#: xml/cutter.xml:13(refpurpose)
msgid "A Unit Testing Framework for C and C++."
msgstr "C言語・C++言語用単体テストフレームワーク"

#: xml/cutter.xml:24(link) xml/cutter.xml:176(primary)
#: xml/api-index-full.xml:553(link) xml/api-index-deprecated.xml:69(link)
msgid "setup"
msgstr ""

#: xml/cutter.xml:26(link) xml/cutter.xml:187(primary)
#: xml/api-index-full.xml:552(link) xml/api-index-1.0.6.xml:85(link)
msgid "cut_setup"
msgstr ""

#: xml/cutter.xml:28(link) xml/cutter.xml:196(primary)
#: xml/api-index-full.xml:641(link) xml/api-index-deprecated.xml:74(link)
msgid "teardown"
msgstr ""

#: xml/cutter.xml:30(link) xml/cutter.xml:208(primary)
#: xml/api-index-full.xml:640(link) xml/api-index-1.0.6.xml:93(link)
msgid "cut_teardown"
msgstr ""

#: xml/cutter.xml:32(link) xml/cutter.xml:218(primary)
#: xml/api-index-full.xml:585(link) xml/api-index-1.0.6.xml:89(link)
msgid "cut_startup"
msgstr ""

#: xml/cutter.xml:34(link) xml/cutter.xml:227(primary)
#: xml/api-index-full.xml:562(link) xml/api-index-1.0.6.xml:88(link)
msgid "cut_shutdown"
msgstr ""

#: xml/cutter.xml:35(link) xml/cutter.xml:236(primary)
#: xml/api-index-full.xml:7(link) xml/api-index-1.0.3.xml:7(link)
msgid "cut_add_data"
msgstr ""

#: xml/cutter.xml:36(link) xml/cutter.xml:328(primary)
#: xml/api-index-full.xml:8(link) xml/api-index-deprecated.xml:7(link)
msgid "cut_add_data_backward_compatibility"
msgstr ""

#: xml/cutter.xml:38(link) xml/cutter.xml:336(primary)
#: xml/api-index-full.xml:555(link) xml/api-index-1.0.4.xml:14(link)
msgid "cut_set_attributes"
msgstr ""

#: xml/cutter.xml:39(returnvalue)
msgid "CutTestContext"
msgstr ""

#: xml/cutter.xml:39(entry)
#, fuzzy
msgid "<link linkend=\"CutTestContext\"><placeholder-1/></link> *"
msgstr ""
"<link linkend=\"CutCallbackFunction\">CutCallbackFunction<type></type></link>"
"コールバック。"

#: xml/cutter.xml:40(link) xml/cutter.xml:384(primary)
#: xml/api-index-full.xml:452(link) xml/api-index-1.0.4.xml:11(link)
msgid "cut_get_current_test_context"
msgstr ""

#: xml/cutter.xml:42(link) xml/cutter.xml:423(primary)
#: xml/api-index-full.xml:556(link) xml/api-index-1.0.4.xml:15(link)
msgid "cut_set_current_test_context"
msgstr ""

#: xml/cutter.xml:44(link) xml/cutter.xml:445(primary)
#: xml/api-index-full.xml:560(link) xml/api-index-deprecated.xml:70(link)
#: xml/api-index-1.0.6.xml:86(link)
msgid "cut_set_message"
msgstr ""

#: xml/cutter.xml:46(link) xml/cutter.xml:470(primary)
#: xml/api-index-full.xml:561(link) xml/api-index-deprecated.xml:71(link)
#: xml/api-index-1.0.6.xml:87(link)
msgid "cut_set_message_va_list"
msgstr ""

#: xml/cutter.xml:48(link) xml/cutter.xml:495(primary)
#: xml/api-index-full.xml:482(link) xml/api-index-deprecated.xml:63(link)
#: xml/api-index-1.0.6.xml:74(link)
msgid "cut_keep_message"
msgstr ""

#: xml/cutter.xml:50(link) xml/cutter.xml:505(primary)
#: xml/api-index-full.xml:524(link) xml/api-index-1.1.0.xml:52(link)
msgid "cut_message"
msgstr ""

#: xml/cutter.xml:63(link) xml/cutter.xml:537(title)
#: xml/cutter.xml:538(primary) xml/api-index-full.xml:168(link)
#: xml/api-index-1.1.2.xml:7(link)
msgid "CUT_EXPORT"
msgstr ""

#: xml/cutter.xml:73(para)
#, fuzzy
msgid ""
"Cutter is a Unit Testing Framework for C and C++ and has the following "
"features:"
msgstr ""
"Cutterは以下のような特徴をもったC言語・C++言語用の単体テストフレームワークで"
"す。<placeholder-1/>"

#: xml/cutter.xml:76(para)
msgid ""
"Easy to use. Cutter doesn't introduce any magic macros like "
"CUTTER_DEFINE_TEST_START and CUTTER_DEFINE_TEST_END into your test program. "
"You can write your test program like normal program. You only use <link "
"linkend=\"cut-assert-XXX\"><function>cut_assert_XXX()</function></link> to "
"check that your program works as you expect. <placeholder-1/>"
msgstr ""
"簡単に使えます。Cutterではテストプログラム中にCUTTER_DEFINE_TEST_STARTや"
"CUTTER_DEFINE_TEST_ENDなどといった不思議なマクロを使う必要がありません。通常"
"のプログラムと同じようにテストプログラムを書くことができます。ただし、プログ"
"ラムが期待した通り動作していることを検証するために<link linkend=\"cut-assert-"
"XXX\"><function>cut_assert_XXX()</function></link>を使う必要があります。"
"<placeholder-1/>"

#: xml/cutter.xml:112(para)
msgid ""
"Simple but useful output. Cutter works quietly if tests are running without "
"any problems by default. The following is an output of self test: "
"<placeholder-1/> Cutter just outputs \".\" for a passed test and a summary "
"at the end. Cutter doesn't output each test name, how many assertions are "
"used for a test and so because we don't need the information on success."
msgstr ""
"簡素ですが有用な情報を出力をします。Cutterはデフォルトではテストが問題なく動"
"いているときは静かに動きます。以下は、Cutter自身のテストの出力です。"
"<placeholder-1/>Cutterはテストが1つパスしたことを示すためには「.」だけを出力"
"し、最後にテスト結果の要約を出力します。Cutterは各テストの名前や何個検証した"
"かなどの情報は表示しません。これは、テスト成功時にはこれらの情報は必要ないか"
"らです。"

#: xml/cutter.xml:127(para)
msgid ""
"Cutter outputs many information on failure: <placeholder-1/> The above "
"result is happened because I add a strange expected staring in Cutter's self "
"test: <placeholder-2/> The strange assertion is written in the 240th line in "
"test/test-cut-assertions.c and the line is in the <link linkend=\"cut-assert-"
"test-result\"><function>cut_assert_test_result()</function></link> function. "
"The function is called in test_error test. We expected "
"cut_test_result_get_test_name(result) should return \"Strange!!!\" but got "
"\"dummy-error-name\". We can get the above information from Cutter output. "
"This will help your debug."
msgstr ""
"Cutterは失敗時にはたくさんの情報を出力します。<placeholder-1/>上記の結果は"
"Cutterの自己テストにおかしな期待値を追加したために起きています。"
"<placeholder-2/>おかしな検証はtest/test-cut-assertions.cの240行目に書かれてい"
"て、その行は<link linkend=\"cut-assert-test-result"
"\"><function>cut_assert_test_result()</function></link>関数内にあります。この"
"関数はtest_errorテストから呼び出されています。"
"cut_test_result_get_test_name(result)が\"Strange!!!\"を返すことを期待していま"
"すが、実際は\"dummy-error-name\"が返ってきています。このような情報を上記の"
"Cutterの出力から得ることができます。これはデバッグの手助けになるでしょう。"

#: xml/cutter.xml:155(para)
msgid ""
"Cutter's output format is pragmatic. ' but was:' is indented and aligned "
"with the above 'expected:'. This helps that you find difference between "
"expected value and actual value by your eyes easily. The problem line is "
"formated as 'FILENAME:LINE: FUNCTION' to integrate Emacs. In Emacs's "
"compilation-mode, if the format is appeared in *compilation* buffer, we can "
"jump to FILENAME at LINE with next-error command. (C-x `) This helps that "
"you find the problem line rapidly."
msgstr ""
"Cutterの出力形式は実用的です。' but was:'はその上の'expected:'と並ぶようにイ"
"ンデントされています。これは期待値と実測値をパッと見て簡単に比較できるように"
"するためです。問題のあった行は「ファイル名:行: 関数」というように整形されてい"
"ます。これはEmacsと連携するためです。Emacsのcompilation-modeではこの形式が"
"*compilation*バッファに表れると、next-errorコマンド(C-x `)で「ファイル名」の"
"「行」へジャンプすることができます。これは問題行を素早く見つける手助けをしま"
"す。"

#: xml/cutter.xml:165(para)
msgid "Cutter supports not only easy test writing but also easy debugging."
msgstr ""
"Cutterは簡単にテストを書くことを支援するだけではなく、簡単にデバッグをできる"
"ことも支援します。"

#: xml/cutter.xml:175(title)
msgid "setup ()"
msgstr ""

#: xml/cutter.xml:177(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"setup (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cutter.xml:179(para)
#, fuzzy
msgid ""
"<literal>setup</literal> has been deprecated since version 1.0.7 and should "
"not be used in newly-written code."
msgstr ""
"<literal>GCutEgg</literal>は非推奨です。新しいコードでは使わないでください。"

#: xml/cutter.xml:179(para)
#, fuzzy
msgid ""
"Use <link linkend=\"cut-setup\"><function>cut_setup()</function></link> "
"instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/cutter.xml:181(para)
msgid ""
"If you define <link linkend=\"setup\"><function>setup()</function></link> in "
"your test program, cutter will call your <link linkend=\"setup"
"\"><function>setup()</function></link> before each your test is run. If you "
"define <link linkend=\"cut-setup\"><function>cut_setup()</function></link>, "
"<link linkend=\"setup\"><function>setup()</function></link> is ignored."
msgstr ""
"テストプログラム中で<link linkend=\"setup\"><function>setup()</function></"
"link>を定義していたら、cutterは各テストが実行される前に定義された<link "
"linkend=\"setup\"><function>setup()</function></link>を呼びだします。<link "
"linkend=\"cut_setup\"><function>cut_setup()</function></link>が定義されていた"
"場合は、<link linkend=\"setup\"><function>setup()</function></link>は無視され"
"ます。"

#: xml/cutter.xml:186(title)
msgid "cut_setup ()"
msgstr ""

#: xml/cutter.xml:188(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_setup (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cutter.xml:190(para)
msgid ""
"If you define <link linkend=\"cut-setup\"><function>cut_setup()</function></"
"link> in your test program, cutter will call your <link linkend=\"cut-setup"
"\"><function>cut_setup()</function></link> before each your test is run. "
"<link linkend=\"cut-setup\"><function>cut_setup()</function></link> has "
"priority over <link linkend=\"setup\"><function>setup()</function></link>."
msgstr ""
"テストプログラム中で<link linkend=\"cut_setup\"><function>cut_setup()</"
"function></link>を定義していたら、cutterは各テストが実行される前に定義された"
"<link linkend=\"cut_setup\"><function>cut_setup()</function></link>を呼びだし"
"ます。<link linkend=\"cut-setup\"><function>cut_setup()</function></link>と"
"<link linkend=\"setup\"><function>setup()</function></link>が定義されていた場"
"合は<link linkend=\"cut-setup\"><function>cut_setup()</function></link>だけが"
"使われます。"

#: xml/cutter.xml:195(title)
msgid "teardown ()"
msgstr ""

#: xml/cutter.xml:197(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"teardown (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cutter.xml:199(para)
#, fuzzy
msgid ""
"<literal>teardown</literal> has been deprecated since version 1.0.7 and "
"should not be used in newly-written code."
msgstr ""
"<literal>GCutEgg</literal>は非推奨です。新しいコードでは使わないでください。"

#: xml/cutter.xml:199(para)
#, fuzzy
msgid ""
"Use <link linkend=\"cut-teardown\"><function>cut_teardown()</function></"
"link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/cutter.xml:201(para)
msgid ""
"If you define <link linkend=\"teardown\"><function>teardown()</function></"
"link> in your test program, cutter will call your <link linkend=\"teardown"
"\"><function>teardown()</function></link> after each your test is run even "
"if a test is failed. If you define <link linkend=\"cut-teardown"
"\"><function>cut_teardown()</function></link>, <link linkend=\"teardown"
"\"><function>teardown()</function></link> is ignored."
msgstr ""
"テストプログラム中で<link linkend=\"teardown\"><function>teardown()</"
"function></link>を定義していたら、cutterは各テストの後に、たとえテストが失敗"
"していた時でも、<link linkend=\"teardown\"><function>teardown()</function></"
"link>を呼びだします。<link linkend=\"cut-teardown"
"\"><function>cut_teardown()</function></link>が定義されていた場合は、<link "
"linkend=\"teardown\"><function>teardown()</function></link>は無視されます。"

#: xml/cutter.xml:207(title)
msgid "cut_teardown ()"
msgstr ""

#: xml/cutter.xml:209(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_teardown (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cutter.xml:211(para)
msgid ""
"If you define <link linkend=\"cut-teardown\"><function>cut_teardown()</"
"function></link> in your test program, cutter will call your <link linkend="
"\"cut-teardown\"><function>cut_teardown()</function></link> after each your "
"test is run even if a test is failed. <link linkend=\"cut-teardown"
"\"><function>cut_teardown()</function></link> has priority over <link "
"linkend=\"teardown\"><function>teardown()</function></link>."
msgstr ""
"テストプログラム中で<link linkend=\"cut-teardown\"><function>cut_teardown()</"
"function></link>を定義していたら、cutterは各テストの後に、たとえテストが失敗"
"していた時でも、<link linkend=\"cut-teardown\"><function>cut_teardown()</"
"function></link>を呼びだします。<link linkend=\"cut-teardown"
"\"><function>cut_teardown()</function></link>と<link linkend=\"teardown"
"\"><function>teardown()</function></link>が定義されていた場合は<link linkend="
"\"cut-teardown\"><function>cut_teardown()</function></link>だけが使われます。"

#: xml/cutter.xml:217(title)
#, fuzzy
msgid "cut_startup ()"
msgstr "cut_take_memdup ()"

#: xml/cutter.xml:219(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_startup (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cutter.xml:221(para)
msgid ""
"If you define <link linkend=\"cut-startup\"><function>cut_startup()</"
"function></link> in your test program, cutter will call your <link linkend="
"\"cut-startup\"><function>cut_startup()</function></link> before each your "
"test case is run. <link linkend=\"cut-startup\"><function>cut_startup()</"
"function></link> has priority over <link linkend=\"startup"
"\"><function>startup()</function></link>."
msgstr ""
"テストプログラム中で<link linkend=\"cut-startup\"><function>cut_startup()</"
"function></link>を定義していたら、cutterは各テストケースが実行される前に定義"
"された<link linkend=\"cut-startup\"><function>cut_startup()</function></link>"
"を呼びだします。<link linkend=\"cut-startup\"><function>cut_startup()</"
"function></link>と<link linkend=\"startup\"><function>startup()</function></"
"link>が定義されていた場合は<link linkend=\"cut-startup"
"\"><function>cut_startup()</function></link>だけが使われます。"

#: xml/cutter.xml:226(title)
msgid "cut_shutdown ()"
msgstr ""

#: xml/cutter.xml:228(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_shutdown (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cutter.xml:230(para)
msgid ""
"If you define <link linkend=\"shutdown\"><function>shutdown()</function></"
"link> in your test program, cutter will call your <link linkend=\"shutdown"
"\"><function>shutdown()</function></link> after each your test case is run. "
"<link linkend=\"cut-shutdown\"><function>cut_shutdown()</function></link> "
"has priority over <link linkend=\"shutdown\"><function>shutdown()</"
"function></link>."
msgstr ""
"テストプログラム中で<link linkend=\"shutdown\"><function>shutdown()</"
"function></link>を定義していたら、cutterは各テストケースが実行された後に定義"
"された<link linkend=\"shutdown\"><function>shutdown()</function></link>を呼び"
"だします。<link linkend=\"cut-shutdown\"><function>cut_shutdown()</"
"function></link>と<link linkend=\"shutdown\"><function>shutdown()</"
"function></link>が定義されていた場合は<link linkend=\"cut-shutdown"
"\"><function>cut_shutdown()</function></link>だけが使われます。"

#: xml/cutter.xml:235(title)
msgid "cut_add_data()"
msgstr ""

#: xml/cutter.xml:237(programlisting)
#, no-wrap
msgid "#define             cut_add_data(first_data_name, ...)"
msgstr ""

#: xml/cutter.xml:238(para)
msgid "Adds data to use data driven test."
msgstr "データ駆動テストで使うデータを追加します。"

#: xml/cutter.xml:314(para)
#, fuzzy
msgid "first_data_name"
msgstr "最初のデータ名。"

#: xml/cutter.xml:315(para)
msgid "The first data name."
msgstr "最初のデータ名。"

#: xml/cutter.xml:318(para)
msgid ""
"The data and destroy function of the first data, followed optionally by more "
"name/data/destroy_function(<link linkend=\"CutDestroyFunction"
"\"><type>CutDestroyFunction</type></link>) triples. The variable arguments "
"should be terminated by <link linkend=\"NULL:CAPS\"><literal>NULL</literal></"
"link> since 1.0.6."
msgstr ""
"最初のデータとデータ破棄関数。続けて任意の数の「名前・データ・データ破棄関数"
"(<link linkend=\"CutDestroyFunction\"><type>CutDestroyFunction</type></"
"link>)」の三つ組を指定します。1.0.6から可変長の引数は<link linkend=\"NULL:"
"CAPS\"><literal>NULL</literal></link>終端しなければいけなくなりました。"

#: xml/cutter.xml:327(title)
msgid "cut_add_data_backward_compatibility()"
msgstr ""

#: xml/cutter.xml:329(programlisting)
#, no-wrap
msgid "#define             cut_add_data_backward_compatibility(context, ...)"
msgstr ""

#: xml/cutter.xml:330(para)
msgid ""
"<literal>cut_add_data_backward_compatibility</literal> is deprecated and "
"should not be used in newly-written code."
msgstr ""
"<literal>cut_add_data_backward_compatibility</literal>は非推奨です。新しい"
"コードでは使わないでください。"

#: xml/cutter.xml:335(title)
msgid "cut_set_attributes ()"
msgstr ""

#: xml/cutter.xml:337(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_set_attributes (<parameter>const <link linkend=\"char\"><type>char</type></link> *first_attribute_name</parameter>,\n"
"                    <parameter>...</parameter>);"
msgstr ""

#: xml/cutter.xml:340(para)
msgid "Sets attributes of the test."
msgstr "テストの属性を設定します。"

#: xml/cutter.xml:372(para)
#, fuzzy
msgid "first_attribute_name"
msgstr "最初の属性名。"

#: xml/cutter.xml:373(para)
msgid "The first attribute name."
msgstr "最初の属性名。"

#: xml/cutter.xml:376(para)
msgid ""
"The value of the first attribute, followed optionally by more name/value "
"pairs. <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>-terminate "
"is required since 1.0.7."
msgstr ""
"最初の属性値です。その後に任意個数の名前と値のペアが続きます。1.0.7から<link "
"linkend=\"NULL:CAPS\"><literal>NULL</literal></link>終端が必須になりました。"

#: xml/cutter.xml:383(title)
msgid "cut_get_current_test_context ()"
msgstr ""

#: xml/cutter.xml:385(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"CutTestContext\"><returnvalue>CutTestContext</returnvalue></link> *\n"
"cut_get_current_test_context (<parameter><type>void</type></parameter>);"
msgstr "現在のテストコンテキストになる<link linkend=\"CutTestContext\"><type>CutTestContext</type></link>。"

#: xml/cutter.xml:387(para)
msgid ""
"Returns the current test context. The current test context is a thread local "
"object. It means that you don't need to care this if you don't create a new "
"thread in your test. This is only needed to care if you create a new thread. "
"You need to pass the current test context in your test thread to the current "
"test context in a created thread."
msgstr ""
"現在のテストコンテキストを返します。「現在のテストコンテキスト」はスレッド"
"ローカルなオブジェクトです。もしテストの中で新しいスレッドを作らない場合はテ"
"ストコンテキストを気にする必要はありません。新しいスレッドを作る場合だけ必要"
"になります。テストのスレッドが持っている「現在のテストコンテキスト」を新しく"
"作ったスレッドに渡す必要がありません。"

#: xml/cutter.xml:419(para)
msgid "a <link linkend=\"CutTestContext\"><type>CutTestContext</type></link>."
msgstr ""
"<link linkend=\"CutTestContext\"><type>CutTestContext</type></link>オブジェク"
"ト。"

#: xml/cutter.xml:422(title)
msgid "cut_set_current_test_context ()"
msgstr ""

#: xml/cutter.xml:424(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_set_current_test_context (<parameter><link linkend=\"CutTestContext\"><type>CutTestContext</type></link> *test_context</parameter>);"
msgstr ""

#: xml/cutter.xml:426(para)
msgid ""
"Set <parameter>test_context</parameter> as the current test context. See "
"<link linkend=\"cut-get-current-test-context"
"\"><function>cut_get_current_test_context()</function></link> for more "
"details."
msgstr ""
"現在のテストコンテキストを<parameter>test_context</parameter>にします。詳細は"
"<link linkend=\"cut-get-current-test-context"
"\"><function>cut_get_current_test_context()</function></link>を見てください。"

#: xml/cutter.xml:437(para)
msgid "test_context"
msgstr ""

#: xml/cutter.xml:438(para)
msgid ""
"the <link linkend=\"CutTestContext\"><type>CutTestContext</type></link> to "
"be the current test context."
msgstr ""
"現在のテストコンテキストになる<link linkend=\"CutTestContext"
"\"><type>CutTestContext</type></link>。"

#: xml/cutter.xml:444(title)
msgid "cut_set_message ()"
msgstr ""

#: xml/cutter.xml:446(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_set_message (<parameter>const <link linkend=\"char\"><type>char</type></link> *format</parameter>,\n"
"                 <parameter>...</parameter>);"
msgstr ""

#: xml/cutter.xml:449(para)
#, fuzzy
msgid ""
"<literal>cut_set_message</literal> has been deprecated since version 1.1.0 "
"and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/cutter.xml:449(para) xml/cutter.xml:474(para) xml/cutter.xml:498(para)
#, fuzzy
msgid ""
"Use <link linkend=\"cut-message\"><function>cut_message()</function></link> "
"instead."
msgstr ""
"追加メッセージ（省略可能）。詳細は<link linkend=\"cut-message"
"\"><function>cut_message()</function></link>を見てください。"

#: xml/cutter.xml:451(para) xml/cutter.xml:476(para)
msgid "Sets a message to be used by the next assertion."
msgstr "次の検証で使われるメッセージです。"

#: xml/cutter.xml:460(para) xml/cutter.xml:485(para) xml/cutter.xml:524(para)
#: xml/cut-test-utils.xml:268(para) xml/cut-assertions.xml:2847(para)
#: xml/cut-assertions.xml:2899(para) xml/cut-assertions.xml:2923(para)
#: xml/cut-assertions.xml:2949(para) xml/cut-assertions.xml:2972(para)
#: xml/cut-assertions.xml:3001(para)
msgid "format"
msgstr ""

#: xml/cutter.xml:461(para) xml/cutter.xml:486(para) xml/cutter.xml:525(para)
#: xml/cut-test-utils.xml:269(para) xml/cut-assertions.xml:2848(para)
#: xml/cut-assertions.xml:2900(para) xml/cut-assertions.xml:2924(para)
#: xml/cut-assertions.xml:2950(para) xml/cut-assertions.xml:2973(para)
#: xml/cut-assertions.xml:3002(para)
msgid ""
"the message format. See the <link linkend=\"printf\"><function>printf()</"
"function></link> documentation."
msgstr ""
"整形文字列。<link linkend=\"printf\"><function>printf()</function></link>のド"
"キュメントを見てください。"

#: xml/cutter.xml:464(para) xml/cutter.xml:489(para) xml/cutter.xml:528(para)
#: xml/cut-test-utils.xml:272(para) xml/cut-assertions.xml:2851(para)
#: xml/cut-assertions.xml:2903(para) xml/cut-assertions.xml:2927(para)
#: xml/cut-assertions.xml:2953(para) xml/cut-assertions.xml:2976(para)
#: xml/cut-assertions.xml:3005(para) xml/cppcutter.xml:129(para)
msgid "the parameters to insert into the format string."
msgstr "整形文字列に挿入されるパラメータ。"

#: xml/cutter.xml:469(title)
msgid "cut_set_message_va_list ()"
msgstr ""

#: xml/cutter.xml:471(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_set_message_va_list (<parameter>const <link linkend=\"char\"><type>char</type></link> *format</parameter>,\n"
"                         <parameter><link linkend=\"va-list\"><type>va_list</type></link> args</parameter>);"
msgstr ""

#: xml/cutter.xml:474(para)
#, fuzzy
msgid ""
"<literal>cut_set_message_va_list</literal> has been deprecated since version "
"1.1.0 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/cutter.xml:494(title)
msgid "cut_keep_message ()"
msgstr ""

#: xml/cutter.xml:496(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_keep_message (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cutter.xml:498(para)
#, fuzzy
msgid ""
"<literal>cut_keep_message</literal> has been deprecated since version 1.1.0 "
"and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/cutter.xml:500(para)
msgid ""
"Keeps the current message set by <link linkend=\"cut-set-message"
"\"><function>cut_set_message()</function></link> or <link linkend=\"cut-set-"
"message-va-list\"><function>cut_set_message_va_list()</function></link> "
"after the next assertion."
msgstr ""
"<link linkend=\"cut-set-message\"><function>cut_set_message()</function></"
"link>または<link linkend=\"cut-set-message-va-list"
"\"><function>cut_set_message_va_list()</function></link>で設定した現在のメッ"
"セージを次の検証の後でも維持します。"

#: xml/cutter.xml:504(title)
msgid "cut_message ()"
msgstr ""

#: xml/cutter.xml:506(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_message (<parameter>const <link linkend=\"char\"><type>char</type></link> *format</parameter>,\n"
"             <parameter>...</parameter>);"
msgstr ""

#: xml/cutter.xml:509(para)
msgid "Specifies optional assertion message."
msgstr "追加の検証メッセージを指定します。"

#: xml/cutter.xml:531(para) xml/cut-assertions.xml:505(para)
#: xml/cut-assertions.xml:533(para) xml/cut-assertions.xml:561(para)
#: xml/cut-assertions.xml:589(para) xml/cut-assertions.xml:617(para)
#: xml/cut-assertions.xml:645(para) xml/cut-assertions.xml:673(para)
#: xml/cut-assertions.xml:701(para) xml/cut-assertions.xml:729(para)
#: xml/cut-assertions.xml:757(para) xml/cut-assertions.xml:785(para)
#: xml/cut-assertions.xml:813(para) xml/cut-assertions.xml:841(para)
#: xml/cut-assertions.xml:869(para) xml/cut-assertions.xml:897(para)
#: xml/cut-assertions.xml:925(para) xml/cut-assertions.xml:953(para)
#: xml/cut-assertions.xml:981(para) xml/cut-assertions.xml:1009(para)
#: xml/cut-assertions.xml:1037(para) xml/cut-assertions.xml:1123(para)
#: xml/cut-assertions.xml:1151(para) xml/cut-assertions.xml:1179(para)
#: xml/cut-assertions.xml:1207(para) xml/cut-assertions.xml:1235(para)
#: xml/cut-assertions.xml:1263(para) xml/cut-assertions.xml:1291(para)
#: xml/cut-assertions.xml:1319(para) xml/cut-assertions.xml:1347(para)
#: xml/cut-assertions.xml:1375(para) xml/cut-assertions.xml:1403(para)
#: xml/cut-assertions.xml:1431(para) xml/cut-assertions.xml:1459(para)
#: xml/cut-assertions.xml:1487(para) xml/cut-assertions.xml:1515(para)
#: xml/cut-assertions.xml:1543(para) xml/cut-assertions.xml:1571(para)
#: xml/cut-assertions.xml:1599(para) xml/cut-assertions.xml:1627(para)
#: xml/cut-assertions.xml:1655(para) xml/cppcutter.xml:132(para)
msgid "Since: <link linkend=\"api-index-1.1.0\">1.1.0</link>"
msgstr ""

#: xml/cutter.xml:539(programlisting)
#, no-wrap
msgid "#  define CUT_EXPORT __declspec(dllexport)\n"
msgstr ""

#: xml/cutter.xml:541(para)
msgid ""
"Marks a function as a exported function. This is needed for just Windows "
"environment. If you want to run your tests on Windows, you need to use this. "
"Otherwise, you don't need to use this."
msgstr ""
"公開関数であるというしるしをつけます。このしるしはWindows環境上でだけ必要で"
"す。Windows上でもテストを実行したい場合はこのマクロを使う必要があります。そう"
"でなければ使う必要はありません。"

#: xml/cutter.xml:554(para)
msgid "Since: <link linkend=\"api-index-1.1.2\">1.1.2</link>"
msgstr ""

#: xml/cutter.xml:559(link) xml/cut-assertions.xml:7(refentrytitle)
#: xml/cut-assertions.xml:12(refname) xml/api-index-full.xml:10(link)
#: xml/api-index-full.xml:11(link) xml/api-index-full.xml:12(link)
#: xml/api-index-full.xml:13(link) xml/api-index-full.xml:14(link)
#: xml/api-index-full.xml:15(link) xml/api-index-full.xml:16(link)
#: xml/api-index-full.xml:21(link) xml/api-index-full.xml:22(link)
#: xml/api-index-full.xml:23(link) xml/api-index-full.xml:24(link)
#: xml/api-index-full.xml:25(link) xml/api-index-full.xml:26(link)
#: xml/api-index-full.xml:27(link) xml/api-index-full.xml:28(link)
#: xml/api-index-full.xml:29(link) xml/api-index-full.xml:30(link)
#: xml/api-index-full.xml:31(link) xml/api-index-full.xml:32(link)
#: xml/api-index-full.xml:33(link) xml/api-index-full.xml:34(link)
#: xml/api-index-full.xml:35(link) xml/api-index-full.xml:36(link)
#: xml/api-index-full.xml:37(link) xml/api-index-full.xml:38(link)
#: xml/api-index-full.xml:39(link) xml/api-index-full.xml:40(link)
#: xml/api-index-full.xml:41(link) xml/api-index-full.xml:42(link)
#: xml/api-index-full.xml:43(link) xml/api-index-full.xml:44(link)
#: xml/api-index-full.xml:45(link) xml/api-index-full.xml:46(link)
#: xml/api-index-full.xml:47(link) xml/api-index-full.xml:48(link)
#: xml/api-index-full.xml:49(link) xml/api-index-full.xml:50(link)
#: xml/api-index-full.xml:51(link) xml/api-index-full.xml:52(link)
#: xml/api-index-full.xml:53(link) xml/api-index-full.xml:54(link)
#: xml/api-index-full.xml:55(link) xml/api-index-full.xml:56(link)
#: xml/api-index-full.xml:58(link) xml/api-index-full.xml:59(link)
#: xml/api-index-full.xml:60(link) xml/api-index-full.xml:61(link)
#: xml/api-index-full.xml:62(link) xml/api-index-full.xml:63(link)
#: xml/api-index-full.xml:64(link) xml/api-index-full.xml:65(link)
#: xml/api-index-full.xml:66(link) xml/api-index-full.xml:67(link)
#: xml/api-index-full.xml:68(link) xml/api-index-full.xml:69(link)
#: xml/api-index-full.xml:70(link) xml/api-index-full.xml:71(link)
#: xml/api-index-full.xml:72(link) xml/api-index-full.xml:73(link)
#: xml/api-index-full.xml:74(link) xml/api-index-full.xml:75(link)
#: xml/api-index-full.xml:76(link) xml/api-index-full.xml:77(link)
#: xml/api-index-full.xml:78(link) xml/api-index-full.xml:79(link)
#: xml/api-index-full.xml:80(link) xml/api-index-full.xml:81(link)
#: xml/api-index-full.xml:82(link) xml/api-index-full.xml:83(link)
#: xml/api-index-full.xml:84(link) xml/api-index-full.xml:85(link)
#: xml/api-index-full.xml:86(link) xml/api-index-full.xml:87(link)
#: xml/api-index-full.xml:88(link) xml/api-index-full.xml:89(link)
#: xml/api-index-full.xml:90(link) xml/api-index-full.xml:91(link)
#: xml/api-index-full.xml:92(link) xml/api-index-full.xml:93(link)
#: xml/api-index-full.xml:94(link) xml/api-index-full.xml:95(link)
#: xml/api-index-full.xml:96(link) xml/api-index-full.xml:97(link)
#: xml/api-index-full.xml:98(link) xml/api-index-full.xml:99(link)
#: xml/api-index-full.xml:100(link) xml/api-index-full.xml:102(link)
#: xml/api-index-full.xml:166(link) xml/api-index-full.xml:167(link)
#: xml/api-index-full.xml:171(link) xml/api-index-full.xml:535(link)
#: xml/api-index-full.xml:538(link) xml/api-index-full.xml:541(link)
#: xml/api-index-full.xml:542(link) xml/api-index-full.xml:549(link)
#: xml/api-index-deprecated.xml:13(link) xml/api-index-deprecated.xml:14(link)
#: xml/api-index-deprecated.xml:16(link) xml/api-index-deprecated.xml:17(link)
#: xml/api-index-deprecated.xml:66(link) xml/api-index-1.1.5.xml:7(link)
#: xml/api-index-1.1.5.xml:8(link) xml/api-index-1.1.4.xml:7(link)
#: xml/api-index-1.1.4.xml:8(link) xml/api-index-1.1.3.xml:7(link)
#: xml/api-index-1.1.3.xml:8(link) xml/api-index-1.1.1.xml:7(link)
#: xml/api-index-1.1.0.xml:7(link) xml/api-index-1.1.0.xml:8(link)
#: xml/api-index-1.1.0.xml:9(link) xml/api-index-1.1.0.xml:10(link)
#: xml/api-index-1.1.0.xml:11(link) xml/api-index-1.1.0.xml:12(link)
#: xml/api-index-1.1.0.xml:13(link) xml/api-index-1.1.0.xml:14(link)
#: xml/api-index-1.1.0.xml:15(link) xml/api-index-1.1.0.xml:16(link)
#: xml/api-index-1.1.0.xml:17(link) xml/api-index-1.1.0.xml:18(link)
#: xml/api-index-1.1.0.xml:19(link) xml/api-index-1.1.0.xml:20(link)
#: xml/api-index-1.1.0.xml:21(link) xml/api-index-1.1.0.xml:22(link)
#: xml/api-index-1.1.0.xml:23(link) xml/api-index-1.1.0.xml:24(link)
#: xml/api-index-1.1.0.xml:25(link) xml/api-index-1.1.0.xml:26(link)
#: xml/api-index-1.1.0.xml:27(link) xml/api-index-1.1.0.xml:28(link)
#: xml/api-index-1.1.0.xml:29(link) xml/api-index-1.1.0.xml:30(link)
#: xml/api-index-1.1.0.xml:31(link) xml/api-index-1.1.0.xml:32(link)
#: xml/api-index-1.1.0.xml:33(link) xml/api-index-1.1.0.xml:34(link)
#: xml/api-index-1.1.0.xml:35(link) xml/api-index-1.1.0.xml:36(link)
#: xml/api-index-1.1.0.xml:37(link) xml/api-index-1.1.0.xml:38(link)
#: xml/api-index-1.1.0.xml:39(link) xml/api-index-1.1.0.xml:40(link)
#: xml/api-index-1.1.0.xml:41(link) xml/api-index-1.1.0.xml:42(link)
#: xml/api-index-1.1.0.xml:43(link) xml/api-index-1.1.0.xml:44(link)
#: xml/api-index-1.1.0.xml:45(link) xml/api-index-1.1.0.xml:46(link)
#: xml/api-index-1.0.xml:7(link) xml/api-index-1.0.xml:9(link)
#: xml/api-index-1.0.xml:10(link) xml/api-index-1.0.7.xml:7(link)
#: xml/api-index-1.0.7.xml:8(link) xml/api-index-1.0.7.xml:9(link)
#: xml/api-index-1.0.7.xml:10(link) xml/api-index-1.0.7.xml:11(link)
#: xml/api-index-1.0.7.xml:12(link) xml/api-index-1.0.7.xml:13(link)
#: xml/api-index-1.0.7.xml:14(link) xml/api-index-1.0.7.xml:15(link)
#: xml/api-index-1.0.7.xml:16(link) xml/api-index-1.0.6.xml:7(link)
#: xml/api-index-1.0.6.xml:82(link) xml/api-index-1.0.5.xml:7(link)
#: xml/api-index-1.0.5.xml:8(link) xml/api-index-1.0.5.xml:9(link)
#: xml/api-index-1.0.2.xml:7(link) xml/api-index-1.0.2.xml:8(link)
#: xml/api-index-1.0.2.xml:9(link) xml/api-index-1.0.2.xml:16(link)
#: xml/api-index-0.9.xml:7(link) xml/api-index-0.9.xml:8(link)
#: xml/api-index-0.9.xml:9(link) xml/api-index-0.9.xml:10(link)
#: xml/api-index-0.8.xml:9(link) xml/api-index-0.8.xml:17(link)
#: xml/api-index-0.3.xml:7(link) xml/api-index-0.3.xml:8(link)
msgid "Assertions"
msgstr "検証"

#: xml/cut-version.xml:7(refentrytitle) xml/cut-version.xml:12(refname)
#: xml/api-index-full.xml:642(link) xml/api-index-full.xml:643(link)
#: xml/api-index-full.xml:644(link) xml/api-index-full.xml:645(link)
#: xml/api-index-full.xml:646(link) xml/api-index-1.0.7.xml:26(link)
msgid "Version Information"
msgstr "バージョン情報"

#: xml/cut-version.xml:13(refpurpose)
msgid "Variables and macros to check the Cutter version"
msgstr "Cutterのバージョンをチェックするためのマクロ"

#: xml/cut-version.xml:23(link) xml/cut-version.xml:59(primary)
#: xml/api-index-full.xml:642(link) xml/api-index-1.0.7.xml:26(link)
msgid "CUTTER_CHECK_VERSION"
msgstr ""

#: xml/cut-version.xml:36(link) xml/cut-version.xml:88(title)
#: xml/cut-version.xml:89(primary) xml/api-index-full.xml:643(link)
msgid "CUTTER_VERSION_MAJOR"
msgstr ""

#: xml/cut-version.xml:37(link) xml/cut-version.xml:95(title)
#: xml/cut-version.xml:96(primary) xml/api-index-full.xml:645(link)
msgid "CUTTER_VERSION_MINOR"
msgstr ""

#: xml/cut-version.xml:38(link) xml/cut-version.xml:102(title)
#: xml/cut-version.xml:103(primary) xml/api-index-full.xml:644(link)
msgid "CUTTER_VERSION_MICRO"
msgstr ""

#: xml/cut-version.xml:39(link) xml/cut-version.xml:109(title)
#: xml/cut-version.xml:110(primary) xml/api-index-full.xml:646(link)
msgid "CUTTER_VERSION_STRING"
msgstr ""

#: xml/cut-version.xml:49(para)
msgid ""
"Cutter provides version information, primarily useful in configure checks "
"for builds that have a configure script. Tests will not typically use the "
"features described here."
msgstr ""
"Cutterはビルド時の設定で便利なようにバージョン情報を提供します。通常のテスト"
"ではここで説明する機能は使わないでしょう。"

#: xml/cut-version.xml:58(title)
msgid "CUTTER_CHECK_VERSION()"
msgstr ""

#: xml/cut-version.xml:60(programlisting)
#, no-wrap
msgid "#define             CUTTER_CHECK_VERSION(major, minor, micro)"
msgstr ""

#: xml/cut-version.xml:61(para)
msgid ""
"Checks the version of the Cutter. Returns true if the version of the Cutter "
"header files is the same as or newer than the passed-in version."
msgstr ""
"Cutterのバージョンをチェックします。Cutterのヘッダファイルのバージョンと同じ"
"かそれより新しいバージョンを渡すと真を返します。"

#: xml/cut-version.xml:72(para)
msgid "major"
msgstr ""

#: xml/cut-version.xml:73(para)
msgid "the major version number."
msgstr "メジャーバージョン番号。"

#: xml/cut-version.xml:75(para)
msgid "minor"
msgstr ""

#: xml/cut-version.xml:76(para)
msgid "the minor version number."
msgstr "マイナーバージョン番号。"

#: xml/cut-version.xml:78(para)
msgid "micro"
msgstr ""

#: xml/cut-version.xml:79(para)
msgid "the micro version number."
msgstr "マイクロバージョン番号。"

#: xml/cut-version.xml:90(programlisting)
#, no-wrap
msgid "#define CUTTER_VERSION_MAJOR 1\n"
msgstr ""

#: xml/cut-version.xml:92(para)
msgid "The major version number of the Cutter."
msgstr "Cutterのメジャーバージョン。"

#: xml/cut-version.xml:97(programlisting)
#, no-wrap
msgid "#define CUTTER_VERSION_MINOR 2\n"
msgstr ""

#: xml/cut-version.xml:99(para)
msgid "The minor version number of the Cutter."
msgstr "Cutterのマイナーバージョン。"

#: xml/cut-version.xml:104(programlisting)
#, no-wrap
msgid "#define CUTTER_VERSION_MICRO 6\n"
msgstr ""

#: xml/cut-version.xml:106(para)
msgid "The micro version number of the Cutter."
msgstr "Cutterのマイクロバージョン。"

#: xml/cut-version.xml:111(programlisting)
#, no-wrap
msgid "#define CUTTER_VERSION_STRING \"1.2.6\"\n"
msgstr ""

#: xml/cut-version.xml:113(para)
msgid ""
"The version number string of the Cutter with \"#{MAJOR}.#{MINOR}.#{MICRO}\" "
"format."
msgstr ""
"\"#{メジャーバージョン}.#{マイナーバージョン}.#{マイクロバージョン}\"という書"
"式のCutterのバージョン文字列。"

#: xml/cut-types.xml:7(refentrytitle) xml/cut-types.xml:12(refname)
#: xml/api-index-full.xml:105(link) xml/api-index-full.xml:112(link)
#: xml/api-index-full.xml:157(link) xml/api-index-full.xml:172(link)
#: xml/api-index-full.xml:657(link)
msgid "Types"
msgstr "型"

#: xml/cut-types.xml:13(refpurpose)
msgid "Types that is used in test."
msgstr "テストで使う型です。"

#: xml/cut-types.xml:24(link)
msgid "*CutDestroyFunction"
msgstr ""

#: xml/cut-types.xml:26(link)
msgid "*CutCallbackFunction"
msgstr ""

#: xml/cut-types.xml:39(entry)
msgid "typedef"
msgstr ""

#: xml/cut-types.xml:39(link) xml/cut-types.xml:91(title)
#: xml/cut-types.xml:92(primary) xml/cut-multi-process.xml:26(returnvalue)
#: xml/cut-multi-process.xml:30(returnvalue)
#: xml/cut-multi-process.xml:32(returnvalue)
#: xml/cut-multi-process.xml:34(returnvalue)
#: xml/cut-multi-process.xml:44(returnvalue)
#: xml/cut-multi-process.xml:72(returnvalue)
#: xml/cut-multi-process.xml:74(returnvalue)
#: xml/cut-multi-process.xml:82(returnvalue)
#: xml/cut-multi-process.xml:86(returnvalue) xml/cut-helper.xml:42(returnvalue)
#: xml/cut-helper.xml:44(returnvalue) xml/api-index-full.xml:105(link)
msgid "cut_boolean"
msgstr ""

#: xml/cut-types.xml:40(link) xml/cut-types.xml:99(title)
#: xml/cut-types.xml:100(primary) xml/api-index-full.xml:657(link)
msgid "CUT_TRUE"
msgstr ""

#: xml/cut-types.xml:41(link) xml/cut-types.xml:106(title)
#: xml/cut-types.xml:107(primary) xml/api-index-full.xml:172(link)
msgid "CUT_FALSE"
msgstr ""

#: xml/cut-types.xml:51(para)
msgid "There are some types to be used in test."
msgstr "テストで使う型がいくつかあります。"

#: xml/cut-types.xml:57(title)
msgid "CutDestroyFunction ()"
msgstr ""

#: xml/cut-types.xml:58(primary) xml/api-index-full.xml:157(link)
msgid "CutDestroyFunction"
msgstr ""

#: xml/cut-types.xml:59(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"<phrase role=\"c_punctuation\">(</phrase>*CutDestroyFunction<phrase role=\"c_punctuation\">)</phrase> (<parameter><link linkend=\"void\"><type>void</type></link> *data</parameter>);"
msgstr ""

#: xml/cut-types.xml:61(para)
msgid ""
"Specifies the type of function which is called when a data element is "
"destroyed. It is passed the pointer to the data element and should free any "
"memory and resources allocated for it."
msgstr ""
"データが破棄されるときに呼ばれる関数の型です。データのポインタを受け取り、そ"
"のデータ用に割り当てられたメモリとリソースを開放します。"

#: xml/cut-types.xml:74(para)
msgid "the data element to be destroyed."
msgstr "破棄するデータ。"

#: xml/cut-types.xml:79(title)
msgid "CutCallbackFunction ()"
msgstr ""

#: xml/cut-types.xml:80(primary) xml/api-index-full.xml:112(link)
msgid "CutCallbackFunction"
msgstr ""

#: xml/cut-types.xml:81(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"<phrase role=\"c_punctuation\">(</phrase>*CutCallbackFunction<phrase role=\"c_punctuation\">)</phrase> (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-types.xml:93(programlisting)
#, no-wrap
msgid "typedef int cut_boolean;\n"
msgstr ""

#: xml/cut-types.xml:95(para)
msgid ""
"A standard boolean type. Variables of this type should only contain the "
"value <link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link> or "
"<link linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link>."
msgstr ""
"標準的な真偽値型。この型の値は<link linkend=\"CUT-TRUE:CAPS"
"\"><literal>CUT_TRUE</literal></link>と<link linkend=\"CUT-FALSE:CAPS"
"\"><literal>CUT_FALSE</literal></link>だけです。"

#: xml/cut-types.xml:101(programlisting)
#, no-wrap
msgid "#define CUT_TRUE\n"
msgstr ""

#: xml/cut-types.xml:103(para)
msgid ""
"Defines the <link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></"
"link> value for the <link linkend=\"cut-boolean\"><type>cut_boolean</type></"
"link> type."
msgstr ""
"<link linkend=\"cut-boolean\"><type>cut_boolean</type></link>型のために<link "
"linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link>を定義します。"

#: xml/cut-types.xml:108(programlisting)
#, no-wrap
msgid "#define CUT_FALSE\n"
msgstr ""

#: xml/cut-types.xml:110(para)
msgid ""
"Defines the <link linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></"
"link> value for the <link linkend=\"cut-boolean\"><type>cut_boolean</type></"
"link> type."
msgstr ""
"<link linkend=\"cut-boolean\"><type>cut_boolean</type></link>型のために<link "
"linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link>を定義します。"

#: xml/cut-test-utils.xml:7(refentrytitle) xml/cut-test-utils.xml:12(refname)
#: xml/api-index-full.xml:106(link) xml/api-index-full.xml:107(link)
#: xml/api-index-full.xml:108(link) xml/api-index-full.xml:109(link)
#: xml/api-index-full.xml:453(link) xml/api-index-full.xml:454(link)
#: xml/api-index-full.xml:523(link) xml/api-index-full.xml:548(link)
#: xml/api-index-full.xml:558(link) xml/api-index-full.xml:626(link)
#: xml/api-index-full.xml:627(link) xml/api-index-full.xml:628(link)
#: xml/api-index-full.xml:629(link) xml/api-index-full.xml:630(link)
#: xml/api-index-full.xml:631(link) xml/api-index-full.xml:634(link)
#: xml/api-index-full.xml:635(link) xml/api-index-full.xml:636(link)
#: xml/api-index-full.xml:637(link) xml/api-index-full.xml:638(link)
#: xml/api-index-full.xml:639(link) xml/api-index-deprecated.xml:21(link)
#: xml/api-index-1.1.6.xml:7(link) xml/api-index-1.1.6.xml:27(link)
#: xml/api-index-1.1.5.xml:11(link) xml/api-index-1.1.4.xml:16(link)
#: xml/api-index-1.1.3.xml:25(link) xml/api-index-1.1.1.xml:22(link)
#: xml/api-index-1.0.7.xml:19(link) xml/api-index-1.0.6.xml:92(link)
#: xml/api-index-1.0.5.xml:61(link) xml/api-index-1.0.5.xml:62(link)
#: xml/api-index-1.0.5.xml:63(link) xml/api-index-1.0.5.xml:64(link)
#: xml/api-index-1.0.5.xml:65(link) xml/api-index-1.0.2.xml:13(link)
#: xml/api-index-1.0.2.xml:19(link) xml/api-index-1.0.2.xml:22(link)
#: xml/api-index-1.0.2.xml:25(link)
msgid "Test Utilities"
msgstr "テストユーティリティ"

#: xml/cut-test-utils.xml:13(refpurpose)
msgid "Utilities to write tests more easily."
msgstr "テストをもっと簡単に書くためのユーティリティ。"

#: xml/cut-test-utils.xml:23(entry)
#, fuzzy
msgid "<link linkend=\"void\"><placeholder-1/></link> *"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/cut-test-utils.xml:24(link) xml/cut-test-utils.xml:84(primary)
#: xml/api-index-full.xml:626(link) xml/api-index-1.0.5.xml:61(link)
msgid "cut_take"
msgstr ""

#: xml/cut-test-utils.xml:25(entry) xml/cut-test-utils.xml:33(entry)
#, fuzzy
msgid "const <link linkend=\"void\"><placeholder-1/></link> *"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/cut-test-utils.xml:26(link) xml/cut-test-utils.xml:116(primary)
#: xml/api-index-full.xml:631(link) xml/api-index-1.0.5.xml:63(link)
msgid "cut_take_memory"
msgstr ""

#: xml/cut-test-utils.xml:27(returnvalue)
#: xml/cut-test-utils.xml:29(returnvalue)
#: xml/cut-test-utils.xml:31(returnvalue)
#: xml/cut-test-utils.xml:35(returnvalue)
#: xml/cut-test-utils.xml:37(returnvalue)
#: xml/cut-test-utils.xml:39(returnvalue)
#: xml/cut-test-utils.xml:41(returnvalue)
#: xml/cut-test-utils.xml:44(returnvalue)
#: xml/cut-test-utils.xml:48(returnvalue)
#: xml/cut-test-utils.xml:50(returnvalue)
#: xml/cut-test-utils.xml:52(returnvalue)
#: xml/cut-test-utils.xml:54(returnvalue)
#: xml/cut-test-utils.xml:58(returnvalue)
#: xml/cut-test-utils.xml:60(returnvalue)
#: xml/cut-multi-process.xml:36(returnvalue)
#: xml/cut-multi-process.xml:40(returnvalue)
#: xml/cut-multi-process.xml:52(returnvalue)
#: xml/cut-multi-process.xml:56(returnvalue)
#: xml/cut-multi-process.xml:60(returnvalue)
#: xml/cut-multi-process.xml:64(returnvalue) xml/cut-helper.xml:36(returnvalue)
#: xml/cut-helper.xml:40(returnvalue) xml/cut-helper.xml:48(returnvalue)
#: xml/cut-helper.xml:50(returnvalue)
msgid "char"
msgstr ""

#: xml/cut-test-utils.xml:27(entry) xml/cut-test-utils.xml:29(entry)
#: xml/cut-test-utils.xml:31(entry) xml/cut-test-utils.xml:35(entry)
#: xml/cut-test-utils.xml:39(entry) xml/cut-test-utils.xml:41(entry)
#: xml/cut-test-utils.xml:44(entry) xml/cut-test-utils.xml:50(entry)
#: xml/cut-test-utils.xml:52(entry) xml/cut-test-utils.xml:54(entry)
#: xml/cut-test-utils.xml:58(entry) xml/cut-test-utils.xml:60(entry)
#: xml/cut-multi-process.xml:36(entry) xml/cut-multi-process.xml:40(entry)
#: xml/cut-helper.xml:36(entry) xml/cut-helper.xml:40(entry)
#: xml/cut-helper.xml:48(entry) xml/cut-helper.xml:50(entry)
#, fuzzy
msgid "const <link linkend=\"char\"><placeholder-1/></link> *"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/cut-test-utils.xml:28(link) xml/cut-test-utils.xml:143(primary)
#: xml/api-index-full.xml:637(link)
msgid "cut_take_string"
msgstr ""

#: xml/cut-test-utils.xml:30(link) xml/cut-test-utils.xml:169(primary)
#: xml/api-index-full.xml:636(link) xml/api-index-1.0.5.xml:64(link)
msgid "cut_take_strdup"
msgstr ""

#: xml/cut-test-utils.xml:32(link) xml/cut-test-utils.xml:193(primary)
#: xml/api-index-full.xml:639(link) xml/api-index-1.0.5.xml:65(link)
msgid "cut_take_strndup"
msgstr ""

#: xml/cut-test-utils.xml:34(link) xml/cut-test-utils.xml:224(primary)
#: xml/api-index-full.xml:630(link) xml/api-index-1.0.5.xml:62(link)
msgid "cut_take_memdup"
msgstr ""

#: xml/cut-test-utils.xml:36(link) xml/cut-test-utils.xml:254(primary)
#: xml/api-index-full.xml:634(link)
msgid "cut_take_printf"
msgstr ""

#: xml/cut-test-utils.xml:37(entry)
#, fuzzy
msgid "<link linkend=\"char\"><placeholder-1/></link> **"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/cut-test-utils.xml:38(link) xml/cut-test-utils.xml:281(primary)
#: xml/api-index-full.xml:638(link)
msgid "cut_take_string_array"
msgstr ""

#: xml/cut-test-utils.xml:40(link) xml/cut-test-utils.xml:306(primary)
#: xml/api-index-full.xml:628(link)
msgid "cut_take_diff"
msgstr ""

#: xml/cut-test-utils.xml:42(link) xml/cut-test-utils.xml:336(primary)
#: xml/api-index-full.xml:635(link) xml/api-index-1.0.6.xml:92(link)
msgid "cut_take_replace"
msgstr ""

#: xml/cut-test-utils.xml:43(link) xml/cut-test-utils.xml:370(primary)
#: xml/api-index-full.xml:627(link) xml/api-index-1.1.3.xml:25(link)
msgid "cut_take_convert"
msgstr ""

#: xml/cut-test-utils.xml:45(link) xml/cut-test-utils.xml:403(primary)
#: xml/api-index-full.xml:629(link) xml/api-index-1.1.4.xml:16(link)
msgid "cut_take_inspect_string"
msgstr ""

#: xml/cut-test-utils.xml:47(link) xml/cut-test-utils.xml:427(primary)
#: xml/api-index-full.xml:558(link) xml/api-index-1.0.2.xml:25(link)
msgid "cut_set_fixture_data_dir"
msgstr ""

#: xml/cut-test-utils.xml:48(entry)
#, fuzzy
msgid "<link linkend=\"char\"><placeholder-1/></link> *"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/cut-test-utils.xml:49(link) xml/cut-test-utils.xml:452(primary)
#: xml/api-index-full.xml:106(link) xml/api-index-deprecated.xml:21(link)
#: xml/api-index-1.0.2.xml:13(link)
msgid "cut_build_fixture_data_path"
msgstr ""

#: xml/cut-test-utils.xml:51(link) xml/cut-test-utils.xml:486(primary)
#: xml/api-index-full.xml:107(link) xml/api-index-1.1.6.xml:7(link)
msgid "cut_build_fixture_path"
msgstr ""

#: xml/cut-test-utils.xml:53(link) xml/cut-test-utils.xml:518(primary)
#: xml/api-index-full.xml:454(link) xml/api-index-1.0.2.xml:19(link)
msgid "cut_get_fixture_data_string"
msgstr ""

#: xml/cut-test-utils.xml:55(link) xml/cut-test-utils.xml:550(primary)
#: xml/api-index-full.xml:453(link) xml/api-index-1.1.6.xml:27(link)
msgid "cut_get_fixture_data"
msgstr ""

#: xml/cut-test-utils.xml:57(link) xml/cut-test-utils.xml:586(primary)
#: xml/api-index-full.xml:548(link) xml/api-index-1.0.2.xml:22(link)
msgid "cut_remove_path"
msgstr ""

#: xml/cut-test-utils.xml:59(link) xml/cut-test-utils.xml:612(primary)
#: xml/api-index-full.xml:108(link) xml/api-index-1.0.7.xml:19(link)
msgid "cut_build_path"
msgstr ""

#: xml/cut-test-utils.xml:61(link) xml/cut-test-utils.xml:639(primary)
#: xml/api-index-full.xml:109(link) xml/api-index-1.1.5.xml:11(link)
msgid "cut_build_path_array"
msgstr ""

#: xml/cut-test-utils.xml:63(link) xml/cut-test-utils.xml:662(primary)
#: xml/api-index-full.xml:523(link) xml/api-index-1.1.1.xml:22(link)
msgid "cut_make_directory"
msgstr ""

#: xml/cut-test-utils.xml:77(para)
msgid "The utilities work without GLib support."
msgstr "このユーティリティはGLibサポート無しでも使えます。"

#: xml/cut-test-utils.xml:83(title)
#, fuzzy
msgid "cut_take ()"
msgstr "cut_take_memdup ()"

#: xml/cut-test-utils.xml:85(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link> *\n"
"cut_take (<parameter><link linkend=\"void\"><type>void</type></link> *object</parameter>,\n"
"          <parameter><link linkend=\"CutDestroyFunction\"><type>CutDestroyFunction</type></link> destroy_function</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:88(para)
#, fuzzy
msgid ""
"Passes ownership of <parameter>object</parameter> to Cutter and returns "
"<parameter>object</parameter> itself. <parameter>object</parameter> is "
"destroyed by <parameter>destroy_func</parameter> ."
msgstr ""
"<parameter>object</parameter>の所有権をCutterに渡し、<parameter>object</"
"parameter>自身を返します。<parameter>object</parameter>は"
"<parameter>destroy_func</parameter>を用いて破棄されます。"

#: xml/cut-test-utils.xml:103(para)
msgid "the object to be owned by Cutter."
msgstr "Cutterが所有権をもつことになるオブジェクト。"

#: xml/cut-test-utils.xml:106(para)
msgid "the destroy function for the object."
msgstr "オブジェクト用の破棄関数。"

#: xml/cut-test-utils.xml:111(para)
msgid "<parameter>object</parameter> owned by Cutter. Don't free it."
msgstr "Cutterが所有する<parameter>object</parameter>。解放しないで下さい。"

#: xml/cut-test-utils.xml:115(title)
#, fuzzy
msgid "cut_take_memory ()"
msgstr "cut_take_memdup ()"

#: xml/cut-test-utils.xml:117(programlisting)
#, fuzzy, no-wrap
msgid ""
"const <link linkend=\"void\"><returnvalue>void</returnvalue></link> *\n"
"cut_take_memory (<parameter><link linkend=\"void\"><type>void</type></link> *memory</parameter>);"
msgstr "比較する<link linkend=\"gint\"><type>gint</type></link>の<link linkend=\"GList\"><type>GList</type></link>。"

#: xml/cut-test-utils.xml:119(para)
msgid ""
"Passes ownership of <parameter>memory</parameter> to Cutter and returns "
"<parameter>memory</parameter> itself. <parameter>memory</parameter> is "
"destroyed by <link linkend=\"free\"><function>free()</function></link>."
msgstr ""
"<parameter>memory</parameter>の所有権をCutterに渡し、<parameter>memory</"
"parameter>自身を返します。<parameter>memory</parameter>は<link linkend=\"free"
"\"><function>free()</function></link>で破棄されます。"

#: xml/cut-test-utils.xml:132(para) xml/cut-test-utils.xml:241(para)
msgid "memory"
msgstr ""

#: xml/cut-test-utils.xml:133(para)
msgid "the memory to be owned by Cutter."
msgstr "Cutterが所有権を持つことになるメモリ。"

#: xml/cut-test-utils.xml:138(para)
msgid "<parameter>memory</parameter> owned by Cutter. Don't free it."
msgstr "Cutterが所有する<parameter>memory</parameter>。解放しないで下さい。"

#: xml/cut-test-utils.xml:142(title)
msgid "cut_take_string ()"
msgstr ""

#: xml/cut-test-utils.xml:144(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_take_string (<parameter><link linkend=\"char\"><type>char</type></link> *string</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:159(para)
msgid "the string to be owned by Cutter."
msgstr "Cutterが所有権を持つことになる文字列。"

#: xml/cut-test-utils.xml:164(para)
msgid "<parameter>string</parameter> owned by Cutter. Don't free it."
msgstr "Cutterが所有する<parameter>string</parameter>。解放しないで下さい。"

#: xml/cut-test-utils.xml:168(title)
#, fuzzy
msgid "cut_take_strdup ()"
msgstr "cut_take_memdup ()"

#: xml/cut-test-utils.xml:170(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_take_strdup (<parameter>const <link linkend=\"char\"><type>char</type></link> *string</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:172(para)
#, fuzzy
msgid ""
"Duplicates <parameter>string</parameter> , passes ownership of the "
"duplicated string to Cutter and returns the duplicated string."
msgstr ""
"<parameter>string</parameter>を複製し、その所有権をCutterに渡し、複製されたメ"
"モリを返します。"

#: xml/cut-test-utils.xml:184(para) xml/cut-test-utils.xml:212(para)
msgid "the string to be duplicated."
msgstr "複製される文字列。"

#: xml/cut-test-utils.xml:189(para) xml/cut-test-utils.xml:220(para)
msgid "a duplicated string owned by Cutter. Don't free it."
msgstr "Cutterが所有する複製された文字列。解放しないで下さい。"

#: xml/cut-test-utils.xml:192(title)
#, fuzzy
msgid "cut_take_strndup ()"
msgstr "cut_take_memdup ()"

#: xml/cut-test-utils.xml:194(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_take_strndup (<parameter>const <link linkend=\"char\"><type>char</type></link> *string</parameter>,\n"
"                  <parameter><link linkend=\"size-t\"><type>size_t</type></link> size</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:197(para)
#, fuzzy
msgid ""
"Duplicates the first <parameter>size</parameter> bytes of <parameter>string</"
"parameter> , passes ownership of the duplicated string to Cutter and returns "
"the duplicated string. The duplicated string is always <link linkend=\"NULL:"
"CAPS\"><literal>NULL</literal></link>-terminated."
msgstr ""
"<parameter>string</parameter>の先頭<parameter>size</parameter>バイトを複製"
"し、その所有権ををCutterに渡し、複製された文字列を返します。複製された文字列"
"は常に<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>終端していま"
"す。"

#: xml/cut-test-utils.xml:215(para) xml/cut-test-utils.xml:245(para)
msgid "the number of bytes to duplicate."
msgstr "複製するバイト数。"

#: xml/cut-test-utils.xml:223(title)
#, fuzzy
msgid "cut_take_memdup ()"
msgstr "cut_take_memdup ()"

#: xml/cut-test-utils.xml:225(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"void\"><returnvalue>void</returnvalue></link> *\n"
"cut_take_memdup (<parameter>const <link linkend=\"void\"><type>void</type></link> *memory</parameter>,\n"
"                 <parameter><link linkend=\"size-t\"><type>size_t</type></link> size</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:228(para)
#, fuzzy
msgid ""
"Duplicates <parameter>size</parameter> bytes of <parameter>memory</"
"parameter> , passes ownership of the duplicated memory to Cutter and returns "
"the duplicated memory."
msgstr ""
"<parameter>memory</parameter>の<parameter>size</parameter>バイトを複製し、そ"
"の所有権をCutterに渡し、複製されたメモリを返します。"

#: xml/cut-test-utils.xml:242(para)
msgid "the memory to be duplicated."
msgstr "複製されるメモリ。"

#: xml/cut-test-utils.xml:250(para)
msgid "a duplicated memory owned by Cutter. Don't free it."
msgstr "Cutterが所有する複製されたメモリ。解放しないで下さい。"

#: xml/cut-test-utils.xml:253(title)
#, fuzzy
msgid "cut_take_printf ()"
msgstr "cut_take_memdup ()"

#: xml/cut-test-utils.xml:255(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_take_printf (<parameter>const <link linkend=\"char\"><type>char</type></link> *format</parameter>,\n"
"                 <parameter>...</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:258(para)
msgid ""
"Formats a string like <link linkend=\"printf\"><function>printf()</"
"function></link> but the formatted string is owned by Cutter."
msgstr ""
"<link linkend=\"printf\"><function>printf()</function></link>のように文字列を"
"整形しますが、整形された文字列はCutterが所有します。"

#: xml/cut-test-utils.xml:277(para)
msgid "a formatted string owned by Cutter. Don't free it."
msgstr "Cutterが所有する整形された文字列。解放しないで下さい。"

#: xml/cut-test-utils.xml:280(title)
msgid "cut_take_string_array ()"
msgstr ""

#: xml/cut-test-utils.xml:282(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"char\"><returnvalue>char</returnvalue></link> **\n"
"cut_take_string_array (<parameter><link linkend=\"char\"><type>char</type></link> **strings</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:284(para)
msgid ""
"Passes ownership of the array of strings to Cutter and returns "
"<parameter>strings</parameter> itself."
msgstr ""
"配列の所有権をCutterに渡し、<parameter>strings</parameter>それ自身を返しま"
"す。"

#: xml/cut-test-utils.xml:296(para)
msgid "the array of strings to be owned by Cutter."
msgstr "Cutterが所有権を持つことになる文字列の配列。"

#: xml/cut-test-utils.xml:301(para)
msgid "<parameter>strings</parameter> owned by Cutter. Don't free it."
msgstr "Cutterが所有する<parameter>strings</parameter>。解放しないで下さい。"

#: xml/cut-test-utils.xml:305(title)
#, fuzzy
msgid "cut_take_diff ()"
msgstr "cut_take_memdup ()"

#: xml/cut-test-utils.xml:307(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_take_diff (<parameter>const <link linkend=\"char\"><type>char</type></link> *from</parameter>,\n"
"               <parameter>const <link linkend=\"char\"><type>char</type></link> *to</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:310(para)
msgid ""
"Computes diff between <parameter>from</parameter> and <parameter>to</"
"parameter> that is owned by Cutter."
msgstr ""
"<parameter>from</parameter>と<parameter>to</parameter>のdiffを計算します。"
"diffの所有者はCutterです。"

#: xml/cut-test-utils.xml:321(para) xml/cut-helper.xml:420(para)
msgid "from"
msgstr ""

#: xml/cut-test-utils.xml:322(para) xml/cut-helper.xml:421(para)
msgid "the original string."
msgstr "元の文字列。"

#: xml/cut-test-utils.xml:324(para) xml/cut-helper.xml:423(para)
msgid "to"
msgstr ""

#: xml/cut-test-utils.xml:325(para) xml/cut-helper.xml:424(para)
msgid "the modified string."
msgstr "修正された文字列。"

#: xml/cut-test-utils.xml:330(para)
msgid ""
"a diff between <parameter>from</parameter> and <parameter>to</parameter> "
"owned by Cutter. Don't free it."
msgstr ""
"Cutterが所有する<parameter>from</parameter>と<parameter>to</parameter>の"
"diff。開放しないでください。"

#: xml/cut-test-utils.xml:335(title)
#, fuzzy
msgid "cut_take_replace ()"
msgstr "cut_take_memdup ()"

#: xml/cut-test-utils.xml:337(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_take_replace (<parameter>const <link linkend=\"char\"><type>char</type></link> *target</parameter>,\n"
"                  <parameter>const <link linkend=\"char\"><type>char</type></link> *pattern</parameter>,\n"
"                  <parameter>const <link linkend=\"char\"><type>char</type></link> *replacement</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:341(para)
msgid ""
"Replaces all occurrences of the <parameter>pattern</parameter> with the "
"<parameter>replacement</parameter> in the <parameter>target</parameter> "
"string."
msgstr ""
"<parameter>target</parameter>文字列中で、<parameter>pattern</parameter>にマッ"
"チする部分を<parameter>replacement</parameter>で置き換えます。"

#: xml/cut-test-utils.xml:354(para)
msgid "target"
msgstr ""

#: xml/cut-test-utils.xml:355(para)
msgid "the replace target string."
msgstr "置換対象の文字列。"

#: xml/cut-test-utils.xml:358(para)
msgid "the regular expression pattern as string."
msgstr "正規表現パターン。（文字列で指定）"

#: xml/cut-test-utils.xml:360(para)
msgid "replacement"
msgstr ""

#: xml/cut-test-utils.xml:361(para)
msgid "text to replace each match with"
msgstr "マッチした部分を置き換える文字列。"

#: xml/cut-test-utils.xml:366(para)
msgid "a replaced string owned by Cutter. Don't free it."
msgstr "Cutterが所有する複製された文字列。解放しないで下さい。"

#: xml/cut-test-utils.xml:369(title)
msgid "cut_take_convert()"
msgstr ""

#: xml/cut-test-utils.xml:371(programlisting)
#, no-wrap
msgid "#define             cut_take_convert(string, to_code_set, from_code_set)"
msgstr ""

#: xml/cut-test-utils.xml:372(para)
#, fuzzy
msgid ""
"Converts <parameter>string</parameter> code set to <parameter>to_code_set</"
"parameter> from <parameter>from_code_set</parameter> ."
msgstr ""
"<parameter>string</parameter>のコードセットを<parameter>from_code_set</"
"parameter>から<parameter>to_code_set</parameter>へ変換します。"

#: xml/cut-test-utils.xml:386(para)
msgid ""
"the convert target string. It should be <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>-terminated."
msgstr ""
"変換対象の文字列。<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>"
"終端。"

#: xml/cut-test-utils.xml:388(para)
msgid "to_code_set"
msgstr ""

#: xml/cut-test-utils.xml:389(para)
#, fuzzy
msgid "the code set name which to convert <parameter>string</parameter> ."
msgstr "変換先のコードセット名。"

#: xml/cut-test-utils.xml:392(para)
msgid "from_code_set"
msgstr ""

#: xml/cut-test-utils.xml:393(para)
#, fuzzy
msgid "the code set name of <parameter>string</parameter> ."
msgstr "<parameter>string</parameter>のコードセット名。"

#: xml/cut-test-utils.xml:399(para)
msgid "a converted string owned by Cutter. Don't free it."
msgstr "Cutterが所有する変換された文字列。解放しないで下さい。"

#: xml/cut-test-utils.xml:402(title)
msgid "cut_take_inspect_string ()"
msgstr ""

#: xml/cut-test-utils.xml:404(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_take_inspect_string (<parameter>const <link linkend=\"char\"><type>char</type></link> *string</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:406(para)
#, fuzzy
msgid "Inspects <parameter>string</parameter> ."
msgstr "<parameter>string</parameter>の詳細を返す。"

#: xml/cut-test-utils.xml:417(para)
msgid ""
"the inspect target string. It should be <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link> or <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>-terminated."
msgstr ""
"詳細な情報を取得したい文字列。<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>または<link linkend=\"NULL:CAPS\"><literal>NULL</literal></"
"link>終端でなければいけません。"

#: xml/cut-test-utils.xml:423(para) xml/cut-helper.xml:501(para)
msgid "a inspected string owned by Cutter. Don't free it."
msgstr "Cutterが所有する整形された文字列。解放しないで下さい。"

#: xml/cut-test-utils.xml:426(title)
msgid "cut_set_fixture_data_dir ()"
msgstr ""

#: xml/cut-test-utils.xml:428(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_set_fixture_data_dir (<parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                          <parameter>...</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:431(para)
msgid ""
"Set fixture data directory that is used by <link linkend=\"cut-get-fixture-"
"data-string\"><function>cut_get_fixture_data_string()</function></link> and "
"so on."
msgstr ""
"<link linkend=\"cut-get-fixture-data-string"
"\"><function>cut_get_fixture_data_string()</function></link>などで使われる"
"フィクスチャデータのディレクトリを指定します。"

#: xml/cut-test-utils.xml:442(para)
msgid "a first element of the path to the fixture data directory."
msgstr "フィクスチャデータディレクトリのパスの最初の要素。"

#: xml/cut-test-utils.xml:445(para) xml/cut-test-utils.xml:475(para)
#: xml/cut-test-utils.xml:539(para) xml/cut-test-utils.xml:605(para)
msgid ""
"remaining elements in path. <link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>-terminate is required since 1.0.7."
msgstr ""
"パスの残りの要素。1.0.7から<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>終端が必須となりました。"

#: xml/cut-test-utils.xml:451(title)
msgid "cut_build_fixture_data_path ()"
msgstr ""

#: xml/cut-test-utils.xml:453(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_build_fixture_data_path (<parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                             <parameter>...</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:456(para)
#, fuzzy
msgid ""
"<literal>cut_build_fixture_data_path</literal> has been deprecated since "
"version 1.1.6 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/cut-test-utils.xml:456(para)
#, fuzzy
msgid ""
"Use <link linkend=\"cut-build-fixture-path"
"\"><function>cut_build_fixture_path()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/cut-test-utils.xml:458(para) xml/cut-test-utils.xml:490(para)
msgid ""
"Builds a path to the fixture data. If <parameter>path</parameter> is "
"relative path, the path is handled as a relative path from a directory that "
"is specified by <link linkend=\"cut-set-fixture-data-dir"
"\"><function>cut_set_fixture_data_dir()</function></link> or the current "
"directory."
msgstr ""
"フィクスチャデータへのパスを生成します。もし、<parameter>path</parameter>が相"
"対パスなら、パスは<link linkend=\"cut-set-fixture-data-dir"
"\"><function>cut_set_fixture_data_dir()</function></link>で指定したディレクト"
"リか、現在のディレクトリからの相対パスとして処理されます。"

#: xml/cut-test-utils.xml:481(para)
msgid "a path to the fixture data. It should be freed when no longer needed."
msgstr ""
"フィクスチャデータのパス。返された文字列が必要なくなったときは開放してくださ"
"い。"

#: xml/cut-test-utils.xml:485(title)
msgid "cut_build_fixture_path ()"
msgstr ""

#: xml/cut-test-utils.xml:487(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_build_fixture_path (<parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                        <parameter>...</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:513(para)
msgid "a path to the fixture data. It is owned by Cutter. Don't free it."
msgstr "Cutterが所有するフィクスチャデータのパス。解放しないで下さい。"

#: xml/cut-test-utils.xml:517(title)
msgid "cut_get_fixture_data_string ()"
msgstr ""

#: xml/cut-test-utils.xml:519(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_get_fixture_data_string (<parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                             <parameter>...</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:522(para) xml/cut-test-utils.xml:555(para)
#, fuzzy
msgid ""
"Reads the fixture data at \"<parameter>path</parameter> /...\" and returns "
"it as a string that is owned by Cutter. The description of <link linkend="
"\"cut-build-fixture-path\"><function>cut_build_fixture_path()</function></"
"link> shows how the fixture data path is determined."
msgstr ""
"\"<parameter>path</parameter>/...\"にあるフィクスチャデータを読み込み、文字列"
"として返します。文字列はCutterが所持します。<link linkend=\"cut-build-"
"fixture-data-path\"><function>cut_build_fixture_data_path()</function></link>"
"の説明にはフィクスチャデータのパスがどのように決定されるかが書かれています。"

#: xml/cut-test-utils.xml:545(para) xml/cut-test-utils.xml:581(para)
msgid "a content of the fixture data as string owend by Cutter. Don't free it."
msgstr "フィクスチャデータの内容。Cutterが所有しているので開放しないください。"

#: xml/cut-test-utils.xml:549(title)
msgid "cut_get_fixture_data ()"
msgstr ""

#: xml/cut-test-utils.xml:551(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_get_fixture_data (<parameter><link linkend=\"size-t\"><type>size_t</type></link> *size</parameter>,\n"
"                      <parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                      <parameter>...</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:569(para)
msgid ""
"return location for a size of the fixture data, or <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>."
msgstr ""
"フィクスチャデータのサイズを返すアドレスまたは<link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>。"

#: xml/cut-test-utils.xml:585(title)
msgid "cut_remove_path ()"
msgstr ""

#: xml/cut-test-utils.xml:587(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_remove_path (<parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                 <parameter>...</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:590(para)
msgid ""
"Removes <parameter>path</parameter> and it's children recursively. It "
"doesn't report any errors."
msgstr ""
"<parameter>path</parameter>と、その下にあるパスを再帰的に削除します。いかなる"
"エラーも報告しません。"

#: xml/cut-test-utils.xml:602(para)
msgid "a first element of the path to be removed."
msgstr "削除するパスの最初の要素。"

#: xml/cut-test-utils.xml:611(title)
msgid "cut_build_path ()"
msgstr ""

#: xml/cut-test-utils.xml:613(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_build_path (<parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                <parameter>...</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:616(para)
msgid ""
"Builds path from <parameter>path</parameter> and the following elements."
msgstr "<parameter>path</parameter>と続く要素を使ってパスを作ります。"

#: xml/cut-test-utils.xml:627(para)
msgid "a first element of the path."
msgstr "パスの最初の要素。"

#: xml/cut-test-utils.xml:630(para) xml/cut-test-utils.xml:681(para)
#: xml/cut-assertions.xml:2749(para)
msgid ""
"remaining elements in path. <link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link> terminated."
msgstr ""
"パスの残りの要素。<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>"
"終端。"

#: xml/cut-test-utils.xml:635(para) xml/cut-test-utils.xml:658(para)
msgid "built path owned by Cutter. Don't free it."
msgstr "Cutterが所有する作成したパス。解放しないで下さい。"

#: xml/cut-test-utils.xml:638(title)
msgid "cut_build_path_array ()"
msgstr ""

#: xml/cut-test-utils.xml:640(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_build_path_array (<parameter>const <link linkend=\"char\"><type>char</type></link> **paths</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:642(para)
#, fuzzy
msgid "Builds path from <parameter>paths</parameter> ."
msgstr "<parameter>paths</parameter>からパスを作ります。"

#: xml/cut-test-utils.xml:652(para)
#, fuzzy
msgid "paths"
msgstr "パス。"

#: xml/cut-test-utils.xml:653(para)
msgid ""
"<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>-terminated array "
"of strings containing the path elements."
msgstr ""
"パスの要素を含んだ<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>"
"終端の文字列の配列。"

#: xml/cut-test-utils.xml:661(title)
msgid "cut_make_directory ()"
msgstr ""

#: xml/cut-test-utils.xml:663(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_make_directory (<parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                    <parameter>...</parameter>);"
msgstr ""

#: xml/cut-test-utils.xml:666(para)
msgid ""
"Makes <parameter>path</parameter> and it's parents recursively. It doesn't "
"report any errors."
msgstr ""
"<parameter>path</parameter>と、その途中にあるパスを再帰的に作成します。いかな"
"るエラーも報告しません。"

#: xml/cut-test-utils.xml:678(para)
msgid "a first element of the path to be made."
msgstr "作成するパスの最初の要素。"

#: xml/cut-string-diff-writer.xml:7(refentrytitle)
#: xml/cut-string-diff-writer.xml:12(refname) xml/api-index-full.xml:586(link)
#: xml/api-index-full.xml:587(link)
msgid "CutStringDiffWriter"
msgstr ""

#: xml/cut-string-diff-writer.xml:23(returnvalue)
#: xml/cut-console-diff-writer.xml:23(returnvalue)
msgid "CutDiffWriter"
msgstr ""

#: xml/cut-string-diff-writer.xml:23(entry)
#: xml/cut-console-diff-writer.xml:23(entry)
#, fuzzy
msgid "<link linkend=\"CutDiffWriter\"><placeholder-1/></link> *"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/cut-string-diff-writer.xml:24(link)
#: xml/cut-string-diff-writer.xml:44(primary) xml/api-index-full.xml:587(link)
msgid "cut_string_diff_writer_new"
msgstr ""

#: xml/cut-string-diff-writer.xml:26(link)
#: xml/cut-string-diff-writer.xml:52(primary) xml/api-index-full.xml:586(link)
msgid "cut_string_diff_writer_get_result"
msgstr ""

#: xml/cut-string-diff-writer.xml:43(title)
msgid "cut_string_diff_writer_new ()"
msgstr ""

#: xml/cut-string-diff-writer.xml:45(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutDiffWriter\"><returnvalue>CutDiffWriter</returnvalue></link> *\n"
"cut_string_diff_writer_new (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-string-diff-writer.xml:51(title)
msgid "cut_string_diff_writer_get_result ()"
msgstr ""

#: xml/cut-string-diff-writer.xml:53(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"cut_string_diff_writer_get_result (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:7(refentrytitle)
#: xml/cut-multi-process.xml:12(refname) xml/api-index-full.xml:588(link)
#: xml/api-index-full.xml:589(link) xml/api-index-full.xml:590(link)
#: xml/api-index-full.xml:591(link) xml/api-index-full.xml:592(link)
#: xml/api-index-full.xml:593(link) xml/api-index-full.xml:594(link)
#: xml/api-index-full.xml:595(link) xml/api-index-full.xml:596(link)
#: xml/api-index-full.xml:597(link) xml/api-index-full.xml:598(link)
#: xml/api-index-full.xml:599(link) xml/api-index-full.xml:600(link)
#: xml/api-index-full.xml:601(link) xml/api-index-full.xml:602(link)
#: xml/api-index-full.xml:603(link) xml/api-index-full.xml:604(link)
#: xml/api-index-full.xml:605(link) xml/api-index-full.xml:606(link)
#: xml/api-index-full.xml:607(link) xml/api-index-full.xml:608(link)
#: xml/api-index-full.xml:609(link) xml/api-index-full.xml:610(link)
#: xml/api-index-full.xml:611(link) xml/api-index-full.xml:612(link)
#: xml/api-index-full.xml:613(link) xml/api-index-full.xml:614(link)
#: xml/api-index-full.xml:615(link) xml/api-index-full.xml:616(link)
#: xml/api-index-full.xml:617(link) xml/api-index-full.xml:618(link)
#: xml/api-index-full.xml:619(link) xml/api-index-full.xml:632(link)
#: xml/api-index-full.xml:633(link) xml/api-index-1.0.5.xml:57(link)
#: xml/api-index-1.0.5.xml:58(link) xml/api-index-1.0.4.xml:16(link)
#: xml/api-index-1.0.4.xml:17(link) xml/api-index-1.0.4.xml:18(link)
#: xml/api-index-1.0.4.xml:19(link) xml/api-index-1.0.4.xml:20(link)
#: xml/api-index-1.0.4.xml:21(link) xml/api-index-1.0.4.xml:22(link)
#: xml/api-index-1.0.4.xml:23(link) xml/api-index-1.0.4.xml:24(link)
#: xml/api-index-1.0.4.xml:25(link) xml/api-index-1.0.4.xml:26(link)
#: xml/api-index-1.0.4.xml:27(link) xml/api-index-1.0.4.xml:28(link)
#: xml/api-index-1.0.4.xml:29(link) xml/api-index-1.0.4.xml:30(link)
#: xml/api-index-1.0.4.xml:31(link) xml/api-index-1.0.4.xml:32(link)
#: xml/api-index-1.0.4.xml:33(link) xml/api-index-1.0.4.xml:34(link)
#: xml/api-index-1.0.4.xml:35(link) xml/api-index-1.0.4.xml:36(link)
#: xml/api-index-1.0.4.xml:37(link) xml/api-index-1.0.4.xml:38(link)
#: xml/api-index-1.0.4.xml:39(link) xml/api-index-1.0.4.xml:40(link)
#: xml/api-index-1.0.4.xml:41(link) xml/api-index-1.0.4.xml:42(link)
#: xml/api-index-1.0.4.xml:43(link) xml/api-index-1.0.4.xml:44(link)
#: xml/api-index-1.0.4.xml:45(link) xml/api-index-1.0.4.xml:48(link)
#: xml/api-index-1.0.4.xml:49(link)
msgid "Multi Process"
msgstr "マルチプロセス"

#: xml/cut-multi-process.xml:13(refpurpose)
msgid "Utilities to run your tests on multi processes."
msgstr "マルチプロセスでテストを走らせるためのユーティリティ。"

#: xml/cut-multi-process.xml:24(returnvalue)
#: xml/cut-multi-process.xml:100(link) xml/cut-multi-process.xml:902(title)
#: xml/cut-multi-process.xml:903(primary) xml/api-index-full.xml:588(link)
#: xml/api-index-1.0.4.xml:16(link)
msgid "CutSubProcess"
msgstr ""

#: xml/cut-multi-process.xml:24(entry)
#, fuzzy
msgid "<link linkend=\"CutSubProcess\"><placeholder-1/></link> *"
msgstr ""
"<link linkend=\"CutCallbackFunction\">CutCallbackFunction<type></type></link>"
"コールバック。"

#: xml/cut-multi-process.xml:25(link) xml/cut-multi-process.xml:126(primary)
#: xml/api-index-full.xml:632(link) xml/api-index-1.0.4.xml:48(link)
msgid "cut_take_new_sub_process"
msgstr ""

#: xml/cut-multi-process.xml:27(link) xml/cut-multi-process.xml:151(primary)
#: xml/api-index-full.xml:608(link) xml/api-index-1.0.4.xml:35(link)
msgid "cut_sub_process_run"
msgstr ""

#: xml/cut-multi-process.xml:29(link) xml/cut-multi-process.xml:175(primary)
#: xml/api-index-full.xml:609(link) xml/api-index-1.0.4.xml:36(link)
msgid "cut_sub_process_run_async"
msgstr ""

#: xml/cut-multi-process.xml:31(link) xml/cut-multi-process.xml:196(primary)
#: xml/api-index-full.xml:619(link) xml/api-index-1.0.4.xml:45(link)
msgid "cut_sub_process_wait"
msgstr ""

#: xml/cut-multi-process.xml:33(link) xml/cut-multi-process.xml:221(primary)
#: xml/api-index-full.xml:607(link) xml/api-index-1.0.4.xml:34(link)
msgid "cut_sub_process_is_success"
msgstr ""

#: xml/cut-multi-process.xml:35(link) xml/cut-multi-process.xml:247(primary)
#: xml/api-index-full.xml:606(link) xml/api-index-1.0.4.xml:33(link)
msgid "cut_sub_process_is_running"
msgstr ""

#: xml/cut-multi-process.xml:37(link) xml/cut-multi-process.xml:272(primary)
#: xml/api-index-full.xml:599(link) xml/api-index-1.0.4.xml:26(link)
msgid "cut_sub_process_get_test_directory"
msgstr ""

#: xml/cut-multi-process.xml:39(link) xml/cut-multi-process.xml:294(primary)
#: xml/api-index-full.xml:618(link) xml/api-index-1.0.4.xml:44(link)
msgid "cut_sub_process_set_test_directory"
msgstr ""

#: xml/cut-multi-process.xml:41(link) xml/cut-multi-process.xml:320(primary)
#: xml/api-index-full.xml:596(link) xml/api-index-1.0.4.xml:23(link)
msgid "cut_sub_process_get_source_directory"
msgstr ""

#: xml/cut-multi-process.xml:43(link) xml/cut-multi-process.xml:342(primary)
#: xml/api-index-full.xml:615(link) xml/api-index-1.0.4.xml:41(link)
msgid "cut_sub_process_set_source_directory"
msgstr ""

#: xml/cut-multi-process.xml:45(link) xml/cut-multi-process.xml:368(primary)
#: xml/api-index-full.xml:595(link) xml/api-index-1.0.4.xml:22(link)
msgid "cut_sub_process_get_multi_thread"
msgstr ""

#: xml/cut-multi-process.xml:47(link) xml/cut-multi-process.xml:393(primary)
#: xml/api-index-full.xml:614(link) xml/api-index-1.0.4.xml:40(link)
msgid "cut_sub_process_set_multi_thread"
msgstr ""

#: xml/cut-multi-process.xml:48(returnvalue)
msgid "int"
msgstr ""

#: xml/cut-multi-process.xml:49(link) xml/cut-multi-process.xml:418(primary)
#: xml/api-index-full.xml:594(link) xml/api-index-1.0.5.xml:57(link)
msgid "cut_sub_process_get_max_threads"
msgstr ""

#: xml/cut-multi-process.xml:51(link) xml/cut-multi-process.xml:444(primary)
#: xml/api-index-full.xml:613(link) xml/api-index-1.0.5.xml:58(link)
msgid "cut_sub_process_set_max_threads"
msgstr ""

#: xml/cut-multi-process.xml:52(entry) xml/cut-multi-process.xml:56(entry)
#: xml/cut-multi-process.xml:60(entry) xml/cut-multi-process.xml:64(entry)
#, fuzzy
msgid "const <link linkend=\"char\"><placeholder-1/></link> **"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/cut-multi-process.xml:53(link) xml/cut-multi-process.xml:471(primary)
#: xml/api-index-full.xml:592(link) xml/api-index-1.0.4.xml:20(link)
msgid "cut_sub_process_get_exclude_files"
msgstr ""

#: xml/cut-multi-process.xml:55(link) xml/cut-multi-process.xml:494(primary)
#: xml/api-index-full.xml:611(link) xml/api-index-1.0.4.xml:38(link)
msgid "cut_sub_process_set_exclude_files"
msgstr ""

#: xml/cut-multi-process.xml:57(link) xml/cut-multi-process.xml:519(primary)
#: xml/api-index-full.xml:591(link) xml/api-index-1.0.4.xml:19(link)
msgid "cut_sub_process_get_exclude_directories"
msgstr ""

#: xml/cut-multi-process.xml:59(link) xml/cut-multi-process.xml:544(primary)
#: xml/api-index-full.xml:610(link) xml/api-index-1.0.4.xml:37(link)
msgid "cut_sub_process_set_exclude_directories"
msgstr ""

#: xml/cut-multi-process.xml:61(link) xml/cut-multi-process.xml:571(primary)
#: xml/api-index-full.xml:597(link) xml/api-index-1.0.4.xml:24(link)
msgid "cut_sub_process_get_target_test_case_names"
msgstr ""

#: xml/cut-multi-process.xml:63(link) xml/cut-multi-process.xml:594(primary)
#: xml/api-index-full.xml:616(link) xml/api-index-1.0.4.xml:42(link)
msgid "cut_sub_process_set_target_test_case_names"
msgstr ""

#: xml/cut-multi-process.xml:65(link) xml/cut-multi-process.xml:619(primary)
#: xml/api-index-full.xml:598(link) xml/api-index-1.0.4.xml:25(link)
msgid "cut_sub_process_get_target_test_names"
msgstr ""

#: xml/cut-multi-process.xml:67(link) xml/cut-multi-process.xml:641(primary)
#: xml/api-index-full.xml:617(link) xml/api-index-1.0.4.xml:43(link)
msgid "cut_sub_process_set_target_test_names"
msgstr ""

#: xml/cut-multi-process.xml:68(returnvalue)
#: xml/cut-multi-process.xml:70(returnvalue)
msgid "double"
msgstr ""

#: xml/cut-multi-process.xml:69(link) xml/cut-multi-process.xml:665(primary)
#: xml/api-index-full.xml:590(link) xml/api-index-1.0.4.xml:18(link)
msgid "cut_sub_process_get_elapsed"
msgstr ""

#: xml/cut-multi-process.xml:71(link) xml/cut-multi-process.xml:689(primary)
#: xml/api-index-full.xml:600(link) xml/api-index-1.0.4.xml:27(link)
msgid "cut_sub_process_get_total_elapsed"
msgstr ""

#: xml/cut-multi-process.xml:73(link) xml/cut-multi-process.xml:711(primary)
#: xml/api-index-full.xml:605(link) xml/api-index-1.0.4.xml:32(link)
msgid "cut_sub_process_is_crashed"
msgstr ""

#: xml/cut-multi-process.xml:75(link) xml/cut-multi-process.xml:736(primary)
#: xml/api-index-full.xml:593(link) xml/api-index-1.0.4.xml:21(link)
msgid "cut_sub_process_get_fatal_failures"
msgstr ""

#: xml/cut-multi-process.xml:77(link) xml/cut-multi-process.xml:763(primary)
#: xml/api-index-full.xml:612(link) xml/api-index-1.0.4.xml:39(link)
msgid "cut_sub_process_set_fatal_failures"
msgstr ""

#: xml/cut-multi-process.xml:78(returnvalue)
#: xml/cut-multi-process.xml:101(link) xml/cut-multi-process.xml:919(title)
#: xml/cut-multi-process.xml:920(primary) xml/api-index-full.xml:589(link)
#: xml/api-index-1.0.4.xml:17(link)
msgid "CutSubProcessGroup"
msgstr ""

#: xml/cut-multi-process.xml:78(entry)
#, fuzzy
msgid "<link linkend=\"CutSubProcessGroup\"><placeholder-1/></link> *"
msgstr ""
"<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>オ"
"ブジェクト。"

#: xml/cut-multi-process.xml:79(link) xml/cut-multi-process.xml:791(primary)
#: xml/api-index-full.xml:633(link) xml/api-index-1.0.4.xml:49(link)
msgid "cut_take_new_sub_process_group"
msgstr ""

#: xml/cut-multi-process.xml:81(link) xml/cut-multi-process.xml:802(primary)
#: xml/api-index-full.xml:601(link) xml/api-index-1.0.4.xml:28(link)
msgid "cut_sub_process_group_add"
msgstr ""

#: xml/cut-multi-process.xml:83(link) xml/cut-multi-process.xml:827(primary)
#: xml/api-index-full.xml:602(link) xml/api-index-1.0.4.xml:29(link)
msgid "cut_sub_process_group_run"
msgstr ""

#: xml/cut-multi-process.xml:85(link) xml/cut-multi-process.xml:852(primary)
#: xml/api-index-full.xml:603(link) xml/api-index-1.0.4.xml:30(link)
msgid "cut_sub_process_group_run_async"
msgstr ""

#: xml/cut-multi-process.xml:87(link) xml/cut-multi-process.xml:874(primary)
#: xml/api-index-full.xml:604(link) xml/api-index-1.0.4.xml:31(link)
msgid "cut_sub_process_group_wait"
msgstr ""

#: xml/cut-multi-process.xml:111(para)
msgid ""
"If your test target supports multi-process and/or multi-thread, you need to "
"test them. You can use <link linkend=\"CutSubProcess\"><type>CutSubProcess</"
"type></link> and <link linkend=\"CutSubProcessGroup"
"\"><type>CutSubProcessGroup</type></link> to do it."
msgstr ""
"もしテスト対象のソフトウェアがマルチプロセスやマルチスレッドでの使用をサポー"
"トしているなら、それらの機能をテストする必要があります。そのようなテストため"
"に、<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>と<link "
"linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>を使うこ"
"とができます。"

#: xml/cut-multi-process.xml:114(para)
msgid ""
"<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> runs your "
"test on another process and forwards results of it to a test on your main "
"process. You will get results of test on another process as results of test "
"on your main process."
msgstr ""
"<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>はテストを別"
"のプロセスで走らせ、その結果をメインプロセスに転送します。このため、別のプロ"
"セス上でのテスト結果もメインプロセス上でのテスト結果と同じように見えます。"

#: xml/cut-multi-process.xml:118(para)
msgid ""
"<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link> "
"is a convenience object to run some <link linkend=\"CutSubProcess"
"\"><type>CutSubProcess</type></link>."
msgstr ""
"<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>は"
"いくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>を"
"まとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:125(title)
#, fuzzy
msgid "cut_take_new_sub_process ()"
msgstr "cut_take_memdup ()"

#: xml/cut-multi-process.xml:127(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutSubProcess\"><returnvalue>CutSubProcess</returnvalue></link> *\n"
"cut_take_new_sub_process (<parameter>const <link linkend=\"char\"><type>char</type></link> *test_directory</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:129(para)
msgid ""
"Creates sub cutter process that runs tests under <parameter>test_directory</"
"parameter> and returns it. A created sub process is owned by Cutter."
msgstr ""
"<parameter>test_directory</parameter>以下のテストを実行するサブcutterプロセス"
"を作り、それを返します。返されたサブcutterプロセスの所有者はCutterです。"

#: xml/cut-multi-process.xml:141(para) xml/cut-multi-process.xml:313(para)
#, fuzzy
msgid "test_directory"
msgstr "テストディレクトリ"

#: xml/cut-multi-process.xml:142(para)
msgid "a directory includes sub process test."
msgstr "サブcutterプロセスのテストがあるディレクトリ。"

#: xml/cut-multi-process.xml:147(para) xml/cut-multi-process.xml:164(para)
#: xml/cut-multi-process.xml:190(para) xml/cut-multi-process.xml:210(para)
#: xml/cut-multi-process.xml:236(para) xml/cut-multi-process.xml:261(para)
#: xml/cut-multi-process.xml:285(para) xml/cut-multi-process.xml:311(para)
#: xml/cut-multi-process.xml:333(para) xml/cut-multi-process.xml:359(para)
#: xml/cut-multi-process.xml:382(para) xml/cut-multi-process.xml:409(para)
#: xml/cut-multi-process.xml:433(para) xml/cut-multi-process.xml:461(para)
#: xml/cut-multi-process.xml:485(para) xml/cut-multi-process.xml:509(para)
#: xml/cut-multi-process.xml:534(para) xml/cut-multi-process.xml:561(para)
#: xml/cut-multi-process.xml:585(para) xml/cut-multi-process.xml:610(para)
#: xml/cut-multi-process.xml:632(para) xml/cut-multi-process.xml:656(para)
#: xml/cut-multi-process.xml:679(para) xml/cut-multi-process.xml:702(para)
#: xml/cut-multi-process.xml:725(para) xml/cut-multi-process.xml:752(para)
#: xml/cut-multi-process.xml:782(para) xml/cut-multi-process.xml:821(para)
msgid "a <link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>."
msgstr ""
"<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>オブジェク"
"ト。"

#: xml/cut-multi-process.xml:150(title)
msgid "cut_sub_process_run ()"
msgstr ""

#: xml/cut-multi-process.xml:152(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"cut-boolean\"><returnvalue>cut_boolean</returnvalue></link>\n"
"cut_sub_process_run (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:154(para)
msgid "Runs sub cutter process."
msgstr "サブcutterプロセスを実行します。"

#: xml/cut-multi-process.xml:163(para) xml/cut-multi-process.xml:189(para)
#: xml/cut-multi-process.xml:209(para) xml/cut-multi-process.xml:235(para)
#: xml/cut-multi-process.xml:260(para) xml/cut-multi-process.xml:284(para)
#: xml/cut-multi-process.xml:310(para) xml/cut-multi-process.xml:332(para)
#: xml/cut-multi-process.xml:358(para) xml/cut-multi-process.xml:381(para)
#: xml/cut-multi-process.xml:408(para) xml/cut-multi-process.xml:432(para)
#: xml/cut-multi-process.xml:460(para) xml/cut-multi-process.xml:484(para)
#: xml/cut-multi-process.xml:508(para) xml/cut-multi-process.xml:533(para)
#: xml/cut-multi-process.xml:560(para) xml/cut-multi-process.xml:584(para)
#: xml/cut-multi-process.xml:609(para) xml/cut-multi-process.xml:631(para)
#: xml/cut-multi-process.xml:655(para) xml/cut-multi-process.xml:678(para)
#: xml/cut-multi-process.xml:701(para) xml/cut-multi-process.xml:724(para)
#: xml/cut-multi-process.xml:751(para) xml/cut-multi-process.xml:781(para)
#: xml/cut-multi-process.xml:820(para)
msgid "sub_process"
msgstr ""

#: xml/cut-multi-process.xml:169(para) xml/cut-multi-process.xml:215(para)
#: xml/cut-multi-process.xml:241(para)
msgid ""
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link> if "
"<parameter>sub_process</parameter> is completed successfully, <link linkend="
"\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link> otherwise."
msgstr ""
"もし、<parameter>sub_process</parameter>が正常に終了した場合は<link linkend="
"\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link>、そうでない場合は<link "
"linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link>。"

#: xml/cut-multi-process.xml:174(title)
msgid "cut_sub_process_run_async ()"
msgstr ""

#: xml/cut-multi-process.xml:176(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_sub_process_run_async (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:178(para)
msgid ""
"Runs sub cutter process asynchronously. The result of "
"<parameter>sub_process</parameter> can be gotten by <link linkend=\"cut-sub-"
"process-wait\"><function>cut_sub_process_wait()</function></link>."
msgstr ""
"非同期でサブcutterコマンドを実行します。<parameter>sub_process</parameter>の"
"結果は<link linkend=\"cut-sub-process-wait"
"\"><function>cut_sub_process_wait()</function></link>で取得できます。"

#: xml/cut-multi-process.xml:195(title)
msgid "cut_sub_process_wait ()"
msgstr ""

#: xml/cut-multi-process.xml:197(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"cut-boolean\"><returnvalue>cut_boolean</returnvalue></link>\n"
"cut_sub_process_wait (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:199(para)
msgid ""
"Waits for sub cutter process that is ran asynchronously to complete and "
"returns the result."
msgstr "非同期で実行されたサブcutterプロセスの終了を待ち、結果を返します。"

#: xml/cut-multi-process.xml:220(title)
msgid "cut_sub_process_is_success ()"
msgstr ""

#: xml/cut-multi-process.xml:222(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"cut-boolean\"><returnvalue>cut_boolean</returnvalue></link>\n"
"cut_sub_process_is_success (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:224(para)
msgid ""
"Returns whether <parameter>sub_process</parameter> is completed successfully "
"or not."
msgstr "<parameter>sub_process</parameter>が正常に終了したかどうかを返します。"

#: xml/cut-multi-process.xml:246(title)
msgid "cut_sub_process_is_running ()"
msgstr ""

#: xml/cut-multi-process.xml:248(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"cut-boolean\"><returnvalue>cut_boolean</returnvalue></link>\n"
"cut_sub_process_is_running (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:250(para)
msgid "Returns whether <parameter>sub_process</parameter> is running or not."
msgstr "<parameter>sub_process</parameter>が実行中かどうかを返します。"

#: xml/cut-multi-process.xml:266(para)
msgid ""
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link> if "
"<parameter>sub_process</parameter> is running, <link linkend=\"CUT-FALSE:CAPS"
"\"><literal>CUT_FALSE</literal></link> otherwise."
msgstr ""
"<parameter>sub_process</parameter>が実行中の場合は<link linkend=\"CUT-TRUE:"
"CAPS\"><literal>CUT_TRUE</literal></link>、そうでない場合は<link linkend="
"\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link>。"

#: xml/cut-multi-process.xml:271(title)
msgid "cut_sub_process_get_test_directory ()"
msgstr ""

#: xml/cut-multi-process.xml:273(programlisting)
#, fuzzy, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_sub_process_get_test_directory (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:275(para)
msgid "Returns a test directory that has tests to be ran."
msgstr "実行対象のテストがあるディレクトリを返します。"

#: xml/cut-multi-process.xml:290(para) xml/cut-multi-process.xml:314(para)
msgid "a test directory."
msgstr "テストディレクトリ"

#: xml/cut-multi-process.xml:293(title)
msgid "cut_sub_process_set_test_directory ()"
msgstr ""

#: xml/cut-multi-process.xml:295(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_sub_process_set_test_directory (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>,\n"
"                                    <parameter>const <link linkend=\"char\"><type>char</type></link> *test_directory</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:298(para)
msgid ""
"Sets <parameter>test_directory</parameter> as a test directory that has "
"tests to be ran. This is same as TEST_DIRECTORY required command line "
"argument."
msgstr ""
"実行対象のテストがあるディレクトリとして<parameter>test_directory</parameter>"
"を指定します。これは必須のコマンドライン引数であるTEST_DIRECTORYと同じ意味を"
"持ちます。"

#: xml/cut-multi-process.xml:319(title)
msgid "cut_sub_process_get_source_directory ()"
msgstr ""

#: xml/cut-multi-process.xml:321(programlisting)
#, fuzzy, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_sub_process_get_source_directory (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:323(para)
msgid "Returns a source directory that has source files."
msgstr "ソースファイルがあるディレクトリを返します。"

#: xml/cut-multi-process.xml:338(para) xml/cut-multi-process.xml:362(para)
msgid "a source directory."
msgstr "ソースディレクトリ。"

#: xml/cut-multi-process.xml:341(title)
msgid "cut_sub_process_set_source_directory ()"
msgstr ""

#: xml/cut-multi-process.xml:343(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_sub_process_set_source_directory (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>,\n"
"                                      <parameter>const <link linkend=\"char\"><type>char</type></link> *source_directory</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:346(para)
msgid ""
"Sets <parameter>source_directory</parameter> as a source directory that has "
"source files. This is same as --source-directory command line option."
msgstr ""
"ソースファイルがあるディレクトリとして<parameter>source_directory</parameter>"
"を指定します。これは--source-directoryコマンドラインオプションと同じ意味を持"
"ちます。"

#: xml/cut-multi-process.xml:361(para)
#, fuzzy
msgid "source_directory"
msgstr "ソースディレクトリ。"

#: xml/cut-multi-process.xml:367(title)
msgid "cut_sub_process_get_multi_thread ()"
msgstr ""

#: xml/cut-multi-process.xml:369(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"cut-boolean\"><returnvalue>cut_boolean</returnvalue></link>\n"
"cut_sub_process_get_multi_thread (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:371(para)
msgid ""
"Returns whether <parameter>sub_process</parameter> is ran in multi-thread "
"mode."
msgstr ""
"<parameter>sub_process</parameter>をマルチスレッドモードで実行するかどうかを"
"返します。"

#: xml/cut-multi-process.xml:387(para)
msgid ""
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link> if "
"<parameter>sub_process</parameter> is ran in multi-thread mode, <link "
"linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link> otherwise."
msgstr ""
"<parameter>sub_process</parameter>がマルチスレッドモードで実行されるなら"
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link>、そうでな"
"ければ<link linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link>。"

#: xml/cut-multi-process.xml:392(title)
msgid "cut_sub_process_set_multi_thread ()"
msgstr ""

#: xml/cut-multi-process.xml:394(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_sub_process_set_multi_thread (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>,\n"
"                                  <parameter><link linkend=\"cut-boolean\"><type>cut_boolean</type></link> multi_thread</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:397(para)
msgid ""
"Sets whether <parameter>sub_process</parameter> is ran in multi-thread mode "
"or not. This is same as --multi-thread command line option."
msgstr ""
"<parameter>sub_process</parameter>がマルチスレッドモードで実行されるかどうか"
"を指定します。これは--multi-threadコマンドラインオプションと同じ意味を持ちま"
"す。"

#: xml/cut-multi-process.xml:411(para)
msgid "multi_thread"
msgstr ""

#: xml/cut-multi-process.xml:412(para)
msgid ""
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link> to be ran "
"in multi-thread mode."
msgstr ""
"マルチスレッドモードで実行するなら<link linkend=\"CUT-TRUE:CAPS"
"\"><literal>CUT_TRUE</literal></link>。"

#: xml/cut-multi-process.xml:417(title)
msgid "cut_sub_process_get_max_threads ()"
msgstr ""

#: xml/cut-multi-process.xml:419(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"int\"><returnvalue>int</returnvalue></link>\n"
"cut_sub_process_get_max_threads (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:421(para)
#, fuzzy
msgid ""
"Returns how many threads are used concurrently at a maximum in "
"<parameter>sub_process</parameter> ."
msgstr ""
"<parameter>sub_process</parameter>中で同時に動く最大スレッド数を返します。"

#: xml/cut-multi-process.xml:438(para)
#, fuzzy
msgid ""
"max number of threads used concurrently at a maximum in "
"<parameter>sub_process</parameter> ."
msgstr "<parameter>sub_process</parameter>中で同時に動く最大スレッド数。"

#: xml/cut-multi-process.xml:443(title)
msgid "cut_sub_process_set_max_threads ()"
msgstr ""

#: xml/cut-multi-process.xml:445(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_sub_process_set_max_threads (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>,\n"
"                                 <parameter><link linkend=\"int\"><type>int</type></link> max_threads</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:448(para)
#, fuzzy
msgid ""
"Sets how many threads are used concurrently at a maximum in "
"<parameter>sub_process</parameter> . -1 means no limit. This is same as --"
"max-threads command line option."
msgstr ""
"<parameter>sub_process</parameter>中で同時に動く最大スレッド数を設定しま"
"す。-1は制限がないことを意味します。これは--max-threadsコマンドラインオプショ"
"ンと同じ意味を持ちます。"

#: xml/cut-multi-process.xml:463(para)
msgid "max_threads"
msgstr ""

#: xml/cut-multi-process.xml:464(para)
msgid "max number of threads used concurrently at a maximum."
msgstr "同時に動く最大スレッド数。"

#: xml/cut-multi-process.xml:470(title)
msgid "cut_sub_process_get_exclude_files ()"
msgstr ""

#: xml/cut-multi-process.xml:472(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> **\n"
"cut_sub_process_get_exclude_files (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:474(para)
msgid "Returns file names that are excluded from target test files."
msgstr "テスト対象ファイルから除外されるファイル名を返します。"

#: xml/cut-multi-process.xml:490(para) xml/cut-multi-process.xml:512(para)
msgid "file names that are excluded from target test files."
msgstr "テスト対象ファイルから除外されるファイル名。"

#: xml/cut-multi-process.xml:493(title)
msgid "cut_sub_process_set_exclude_files ()"
msgstr ""

#: xml/cut-multi-process.xml:495(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_sub_process_set_exclude_files (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>,\n"
"                                   <parameter>const <link linkend=\"char\"><type>char</type></link> **files</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:498(para)
msgid ""
"Sets file names that are excluded from target test files. This is same as --"
"exclude-file command line option."
msgstr ""
"テスト対象から除外されるファイル名を指定します。これは--exclude-fileコマンド"
"ラインオプションと同じ意味を持ちます。"

#: xml/cut-multi-process.xml:511(para)
msgid "files"
msgstr ""

#: xml/cut-multi-process.xml:518(title)
msgid "cut_sub_process_get_exclude_directories ()"
msgstr ""

#: xml/cut-multi-process.xml:520(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> **\n"
"cut_sub_process_get_exclude_directories\n"
"                               (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:523(para)
msgid "Returns directory names that are excluded from target test directories."
msgstr "テスト対象ディレクトリから除外されるディレクトリ名を返します。"

#: xml/cut-multi-process.xml:539(para) xml/cut-multi-process.xml:564(para)
msgid "directory names that are excluded from target test directories."
msgstr "テスト対象ディレクトリから除外されるディレクトリ名。"

#: xml/cut-multi-process.xml:543(title)
msgid "cut_sub_process_set_exclude_directories ()"
msgstr ""

#: xml/cut-multi-process.xml:545(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_sub_process_set_exclude_directories\n"
"                               (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>,\n"
"                                <parameter>const <link linkend=\"char\"><type>char</type></link> **directories</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:549(para)
msgid ""
"Sets directory names that are excluded from target test directories. This is "
"same as --exclude-directory command line option."
msgstr ""
"テスト対象ディレクトリから除外されるディレクトリ名を指定します。これは--"
"exclude-directoryコマンドラインオプションと同じ意味を持ちます。"

#: xml/cut-multi-process.xml:563(para)
msgid "directories"
msgstr ""

#: xml/cut-multi-process.xml:570(title)
msgid "cut_sub_process_get_target_test_case_names ()"
msgstr ""

#: xml/cut-multi-process.xml:572(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> **\n"
"cut_sub_process_get_target_test_case_names\n"
"                               (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:575(para)
msgid "Returns test case names that are ran."
msgstr "実行されるテストケース名を返します。"

#: xml/cut-multi-process.xml:590(para) xml/cut-multi-process.xml:613(para)
msgid "test case names that are ran."
msgstr "実行されるテストケース名。"

#: xml/cut-multi-process.xml:593(title)
msgid "cut_sub_process_set_target_test_case_names ()"
msgstr ""

#: xml/cut-multi-process.xml:595(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_sub_process_set_target_test_case_names\n"
"                               (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>,\n"
"                                <parameter>const <link linkend=\"char\"><type>char</type></link> **names</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:599(para)
msgid ""
"Sets test case names that are ran. This is same as --test-case command line "
"option."
msgstr ""
"実行されるテストケース名を指定します。これは--test-caseコマンドラインオプショ"
"ンと同じ意味を持ちます。"

#: xml/cut-multi-process.xml:612(para) xml/cut-multi-process.xml:658(para)
msgid "names"
msgstr ""

#: xml/cut-multi-process.xml:618(title)
msgid "cut_sub_process_get_target_test_names ()"
msgstr ""

#: xml/cut-multi-process.xml:620(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> **\n"
"cut_sub_process_get_target_test_names (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:622(para)
msgid "Returns test names that are ran."
msgstr "実行されるテスト名を返します。"

#: xml/cut-multi-process.xml:637(para) xml/cut-multi-process.xml:659(para)
msgid "test names that are ran."
msgstr "実行されるテスト名。"

#: xml/cut-multi-process.xml:640(title)
msgid "cut_sub_process_set_target_test_names ()"
msgstr ""

#: xml/cut-multi-process.xml:642(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_sub_process_set_target_test_names (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>,\n"
"                                       <parameter>const <link linkend=\"char\"><type>char</type></link> **names</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:645(para)
msgid ""
"Sets test names that are ran. This is same as --test command line option."
msgstr ""
"実行されるテスト名を指定します。これは--testコマンドラインオプションと同じ意"
"味を持ちます。"

#: xml/cut-multi-process.xml:664(title)
msgid "cut_sub_process_get_elapsed ()"
msgstr ""

#: xml/cut-multi-process.xml:666(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"double\"><returnvalue>double</returnvalue></link>\n"
"cut_sub_process_get_elapsed (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:668(para)
msgid "Gets the time while <parameter>sub_process</parameter> was running."
msgstr "<parameter>sub_process</parameter>を実行していた間の時間を取得します。"

#: xml/cut-multi-process.xml:684(para)
msgid "the time while <parameter>sub_process</parameter> was running."
msgstr "<parameter>sub_process</parameter>を実行していた間の時間。"

#: xml/cut-multi-process.xml:688(title)
msgid "cut_sub_process_get_total_elapsed ()"
msgstr ""

#: xml/cut-multi-process.xml:690(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"double\"><returnvalue>double</returnvalue></link>\n"
"cut_sub_process_get_total_elapsed (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:692(para)
msgid "Gets the sum of times that are used by each test."
msgstr "各テストで使われた時間の合計を返します。"

#: xml/cut-multi-process.xml:707(para)
msgid "the sum of times that are used by each test."
msgstr "各テストで使われた時間の合計。"

#: xml/cut-multi-process.xml:710(title)
msgid "cut_sub_process_is_crashed ()"
msgstr ""

#: xml/cut-multi-process.xml:712(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"cut-boolean\"><returnvalue>cut_boolean</returnvalue></link>\n"
"cut_sub_process_is_crashed (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:714(para)
msgid "Returns whether <parameter>sub_process</parameter> was crashed or not."
msgstr "<parameter>sub_process</parameter>が異常終了したかどうかを返します。"

#: xml/cut-multi-process.xml:730(para)
msgid ""
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link> if "
"<parameter>sub_process</parameter> was crashed, <link linkend=\"CUT-FALSE:"
"CAPS\"><literal>CUT_FALSE</literal></link> otherwise."
msgstr ""
"<parameter>sub_process</parameter>が異常終了したときは<link linkend=\"CUT-"
"TRUE:CAPS\"><literal>CUT_TRUE</literal></link>、そうでない場合は<link "
"linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link>。"

#: xml/cut-multi-process.xml:735(title)
msgid "cut_sub_process_get_fatal_failures ()"
msgstr ""

#: xml/cut-multi-process.xml:737(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"cut-boolean\"><returnvalue>cut_boolean</returnvalue></link>\n"
"cut_sub_process_get_fatal_failures (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:739(para)
msgid ""
"Returns whether <parameter>sub_process</parameter> is ran in fatal-failures "
"mode. See <link linkend=\"cut-sub-process-set-fatal-failures"
"\"><function>cut_sub_process_set_fatal_failures()</function></link> more "
"details of fatal-failures mode."
msgstr ""
"<parameter>sub_process</parameter>が「失敗は致命的」モードで動くかどうかを返"
"します。「失敗は致命的」モードの詳細は<link linkend=\"cut-sub-process-set-"
"fatal-failures\"><function>cut_sub_process_set_fatal_failures()</function></"
"link>を見てください。"

#: xml/cut-multi-process.xml:757(para)
msgid ""
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link> if "
"<parameter>sub_process</parameter> is ran in fatal-failures mode, <link "
"linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link> otherwise."
msgstr ""
"<parameter>sub_process</parameter>が「失敗は致命的」モードで実行されるなら"
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link>、そうでな"
"ければ<link linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link>。"

#: xml/cut-multi-process.xml:762(title)
msgid "cut_sub_process_set_fatal_failures ()"
msgstr ""

#: xml/cut-multi-process.xml:764(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_sub_process_set_fatal_failures (<parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>,\n"
"                                    <parameter><link linkend=\"cut-boolean\"><type>cut_boolean</type></link> fatal_failures</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:767(para)
msgid ""
"Sets whether <parameter>sub_process</parameter> is ran in fatal-failures "
"mode or not. In this mode, all failures are treated as fatal problems. It "
"means that test is aborted on failure. On some environments, breakpoint is "
"set."
msgstr ""
"<parameter>sub_process</parameter>が「失敗は致命的」モードで実行されるかどう"
"かを設定します。このモードではすべての失敗は致命的な問題として扱われます。つ"
"まり、失敗時にテストが異常終了します。いくつかの環境ではブレークポイントが設"
"定されます。"

#: xml/cut-multi-process.xml:772(para)
msgid "This is same as --fatal-failures command line option."
msgstr "--fatal-failuresコマンドラインオプションと同じ意味を持ちます。"

#: xml/cut-multi-process.xml:784(para)
msgid "fatal_failures"
msgstr ""

#: xml/cut-multi-process.xml:785(para)
msgid ""
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link> to be ran "
"in fatal-failures mode."
msgstr ""
"「失敗は致命的」モードで実行するなら<link linkend=\"CUT-TRUE:CAPS"
"\"><literal>CUT_TRUE</literal></link>。"

#: xml/cut-multi-process.xml:790(title)
msgid "cut_take_new_sub_process_group ()"
msgstr ""

#: xml/cut-multi-process.xml:792(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutSubProcessGroup\"><returnvalue>CutSubProcessGroup</returnvalue></link> *\n"
"cut_take_new_sub_process_group (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:794(para)
msgid ""
"Creates a group of sub cutter process. A created group is owned by Cutter."
msgstr ""
"サブcuterプロセスのグループを作ります。作られたグループの所有者はCutterです。"

#: xml/cut-multi-process.xml:798(para) xml/cut-multi-process.xml:818(para)
#: xml/cut-multi-process.xml:842(para) xml/cut-multi-process.xml:868(para)
#: xml/cut-multi-process.xml:889(para)
msgid ""
"a <link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></"
"link>."
msgstr ""
"<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>オ"
"ブジェクト。"

#: xml/cut-multi-process.xml:801(title)
msgid "cut_sub_process_group_add ()"
msgstr ""

#: xml/cut-multi-process.xml:803(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_sub_process_group_add (<parameter><link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link> *group</parameter>,\n"
"                           <parameter><link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link> *sub_process</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:806(para)
#, fuzzy
msgid ""
"Adds <parameter>sub_process</parameter> to <parameter>group</parameter> ."
msgstr ""
"<parameter>sub_process</parameter>を<parameter>group</parameter>に追加しま"
"す。"

#: xml/cut-multi-process.xml:817(para) xml/cut-multi-process.xml:841(para)
#: xml/cut-multi-process.xml:867(para) xml/cut-multi-process.xml:888(para)
msgid "group"
msgstr ""

#: xml/cut-multi-process.xml:826(title)
msgid "cut_sub_process_group_run ()"
msgstr ""

#: xml/cut-multi-process.xml:828(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"cut-boolean\"><returnvalue>cut_boolean</returnvalue></link>\n"
"cut_sub_process_group_run (<parameter><link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link> *group</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:830(para)
msgid ""
"Runs all sub cutter processes of <parameter>group</parameter> and returns "
"the result of them."
msgstr ""
"<parameter>group</parameter>内のすべてのサブcutterプロセスを実行し、その結果"
"を返します。"

#: xml/cut-multi-process.xml:847(para) xml/cut-multi-process.xml:894(para)
msgid ""
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link> if all "
"sub cutter processes of <parameter>group</parameter> are completed "
"successfully, <link linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></"
"link> otherwise."
msgstr ""
"<parameter>group</parameter>内のすべてのサブcutterプロセスが正常終了したら"
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link>、そうでな"
"い場合は<link linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></"
"link>。"

#: xml/cut-multi-process.xml:851(title)
msgid "cut_sub_process_group_run_async ()"
msgstr ""

#: xml/cut-multi-process.xml:853(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_sub_process_group_run_async (<parameter><link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link> *group</parameter>);"
msgstr ""

#: xml/cut-multi-process.xml:855(para)
msgid ""
"Runs all sub cutter processes of <parameter>group</parameter> "
"asynchronously. The result of them can be gotten by <link linkend=\"cut-sub-"
"process-group-wait\"><function>cut_sub_process_group_wait()</function></"
"link>."
msgstr ""
"<parameter>group</parameter>内のすべてのサブcutterプロセスを非同期で実行しま"
"す。実行結果は<link linkend=\"cut-sub-process-group-wait"
"\"><function>cut_sub_process_group_wait()</function></link>で取得できます。"

#: xml/cut-multi-process.xml:873(title)
msgid "cut_sub_process_group_wait ()"
msgstr ""

#: xml/cut-multi-process.xml:875(programlisting)
#, fuzzy, no-wrap
msgid ""
"<link linkend=\"cut-boolean\"><returnvalue>cut_boolean</returnvalue></link>\n"
"cut_sub_process_group_wait (<parameter><link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link> *group</parameter>);"
msgstr "<link linkend=\"CutSubProcessGroup\"><type>CutSubProcessGroup</type></link>はいくつかの<link linkend=\"CutSubProcess\"><type>CutSubProcess</type></link>をまとめて実行するための便利オブジェクトです。"

#: xml/cut-multi-process.xml:877(para)
msgid ""
"Waits for all sub cutter processes of <parameter>group</parameter> that are "
"ran asynchronously to complete and returns the result."
msgstr ""
"<parameter>group</parameter>内の非同期で実行されたすべてのサブcutterプロセス"
"の終了を待ち、終了結果を返します。"

#: xml/cut-multi-process.xml:904(programlisting)
#, no-wrap
msgid "typedef struct _CutSubProcess CutSubProcess;"
msgstr ""

#: xml/cut-multi-process.xml:905(para)
msgid ""
"An object to represent sub cutter process. It contains sub cutter process's "
"parameters and results of sub cutter process."
msgstr ""
"サブcutterプロセスを表現するオブジェクトです。サブcutterプロセスのパラメタと"
"テスト結果を持っています。"

#: xml/cut-multi-process.xml:921(programlisting)
#, no-wrap
msgid "typedef struct _CutSubProcessGroup CutSubProcessGroup;"
msgstr ""

#: xml/cut-multi-process.xml:922(para)
msgid "An object to run sub cutter processes. This is just for convenience."
msgstr ""
"サブcutterプロセスを実行するオブジェクトです。このオブジェクトは便利にテスト"
"を書くために導入されています。"

#: xml/cut-logger.xml:7(refentrytitle) xml/cut-logger.xml:12(refname)
#: xml/cut-logger.xml:53(returnvalue) xml/cut-logger.xml:57(returnvalue)
#: xml/api-index-full.xml:160(link) xml/api-index-full.xml:161(link)
#: xml/api-index-full.xml:162(link) xml/api-index-full.xml:173(link)
#: xml/api-index-full.xml:174(link) xml/api-index-full.xml:175(link)
#: xml/api-index-full.xml:455(link) xml/api-index-full.xml:456(link)
#: xml/api-index-full.xml:461(link) xml/api-index-full.xml:462(link)
#: xml/api-index-full.xml:487(link) xml/api-index-full.xml:488(link)
#: xml/api-index-full.xml:489(link) xml/api-index-full.xml:490(link)
#: xml/api-index-full.xml:491(link) xml/api-index-full.xml:492(link)
#: xml/api-index-full.xml:493(link) xml/api-index-full.xml:494(link)
#: xml/api-index-full.xml:495(link) xml/api-index-full.xml:496(link)
#: xml/api-index-full.xml:497(link) xml/api-index-full.xml:498(link)
#: xml/api-index-full.xml:499(link) xml/api-index-full.xml:500(link)
#: xml/api-index-full.xml:501(link) xml/api-index-full.xml:502(link)
#: xml/api-index-full.xml:503(link) xml/api-index-full.xml:504(link)
#: xml/api-index-full.xml:505(link) xml/api-index-full.xml:506(link)
#: xml/api-index-full.xml:507(link) xml/api-index-full.xml:508(link)
#: xml/api-index-full.xml:509(link) xml/api-index-full.xml:510(link)
#: xml/api-index-full.xml:511(link) xml/api-index-full.xml:512(link)
#: xml/api-index-full.xml:513(link) xml/api-index-full.xml:514(link)
#: xml/api-index-full.xml:515(link) xml/api-index-full.xml:516(link)
#: xml/api-index-full.xml:517(link) xml/api-index-full.xml:518(link)
#: xml/api-index-full.xml:519(link) xml/api-index-full.xml:527(link)
#: xml/api-index-full.xml:528(link) xml/api-index-full.xml:529(link)
#: xml/api-index-full.xml:530(link) xml/api-index-full.xml:531(link)
#: xml/api-index-full.xml:532(link) xml/api-index-full.xml:533(link)
#: xml/api-index-full.xml:534(link) xml/api-index-full.xml:559(link)
msgid "CutLogger"
msgstr ""

#: xml/cut-logger.xml:23(link) xml/cut-logger.xml:126(primary)
#: xml/api-index-full.xml:487(link)
msgid "cut_log"
msgstr ""

#: xml/cut-logger.xml:24(link) xml/cut-logger.xml:133(primary)
#: xml/api-index-full.xml:508(link)
msgid "cut_log_critical"
msgstr ""

#: xml/cut-logger.xml:25(link) xml/cut-logger.xml:140(primary)
#: xml/api-index-full.xml:510(link)
msgid "cut_log_error"
msgstr ""

#: xml/cut-logger.xml:26(link) xml/cut-logger.xml:147(primary)
#: xml/api-index-full.xml:519(link)
msgid "cut_log_warning"
msgstr ""

#: xml/cut-logger.xml:27(link) xml/cut-logger.xml:154(primary)
#: xml/api-index-full.xml:516(link)
msgid "cut_log_message"
msgstr ""

#: xml/cut-logger.xml:28(link) xml/cut-logger.xml:161(primary)
#: xml/api-index-full.xml:511(link)
msgid "cut_log_info"
msgstr ""

#: xml/cut-logger.xml:29(link) xml/cut-logger.xml:168(primary)
#: xml/api-index-full.xml:509(link)
msgid "cut_log_debug"
msgstr ""

#: xml/cut-logger.xml:30(link) xml/cut-logger.xml:175(primary)
#: xml/api-index-full.xml:518(link)
msgid "cut_log_trace"
msgstr ""

#: xml/cut-logger.xml:31(link) xml/cut-logger.xml:182(primary)
#: xml/api-index-full.xml:559(link)
msgid "cut_set_log_level"
msgstr ""

#: xml/cut-logger.xml:32(link) xml/cut-logger.xml:188(title)
#: xml/cut-logger.xml:189(primary) xml/api-index-full.xml:456(link)
msgid "cut_get_log_level"
msgstr ""

#: xml/cut-logger.xml:33(link) xml/cut-logger.xml:195(title)
#: xml/cut-logger.xml:196(primary) xml/api-index-full.xml:455(link)
msgid "cut_get_interesting_log_level"
msgstr ""

#: xml/cut-logger.xml:34(link) xml/cut-logger.xml:203(primary)
#: xml/api-index-full.xml:531(link)
msgid "cut_need_log"
msgstr ""

#: xml/cut-logger.xml:35(link) xml/cut-logger.xml:209(title)
#: xml/cut-logger.xml:210(primary) xml/api-index-full.xml:527(link)
msgid "cut_need_critical_log"
msgstr ""

#: xml/cut-logger.xml:36(link) xml/cut-logger.xml:216(title)
#: xml/cut-logger.xml:217(primary) xml/api-index-full.xml:529(link)
msgid "cut_need_error_log"
msgstr ""

#: xml/cut-logger.xml:37(link) xml/cut-logger.xml:223(title)
#: xml/cut-logger.xml:224(primary) xml/api-index-full.xml:534(link)
msgid "cut_need_warning_log"
msgstr ""

#: xml/cut-logger.xml:38(link) xml/cut-logger.xml:230(title)
#: xml/cut-logger.xml:231(primary) xml/api-index-full.xml:532(link)
msgid "cut_need_message_log"
msgstr ""

#: xml/cut-logger.xml:39(link) xml/cut-logger.xml:237(title)
#: xml/cut-logger.xml:238(primary) xml/api-index-full.xml:530(link)
msgid "cut_need_info_log"
msgstr ""

#: xml/cut-logger.xml:40(link) xml/cut-logger.xml:244(title)
#: xml/cut-logger.xml:245(primary) xml/api-index-full.xml:528(link)
msgid "cut_need_debug_log"
msgstr ""

#: xml/cut-logger.xml:41(link) xml/cut-logger.xml:251(title)
#: xml/cut-logger.xml:252(primary) xml/api-index-full.xml:533(link)
msgid "cut_need_trace_log"
msgstr ""

#: xml/cut-logger.xml:42(link) xml/cut-logger.xml:259(primary)
#: xml/api-index-full.xml:517(link)
msgid "CUT_LOG_NULL_SAFE_STRING"
msgstr ""

#: xml/cut-logger.xml:44(link) xml/cut-logger.xml:267(primary)
#: xml/api-index-full.xml:162(link)
msgid "cut_enum_error_quark"
msgstr ""

#: xml/cut-logger.xml:46(link) xml/cut-logger.xml:275(primary)
#: xml/api-index-full.xml:175(link)
msgid "cut_flags_error_quark"
msgstr ""

#: xml/cut-logger.xml:48(link) xml/cut-logger.xml:283(primary)
#: xml/api-index-full.xml:493(link)
msgid "cut_logger_error_quark"
msgstr ""

#: xml/cut-logger.xml:49(returnvalue) xml/cut-logger.xml:63(returnvalue)
#: xml/cut-logger.xml:65(returnvalue) xml/cut-logger.xml:73(returnvalue)
#: xml/cut-logger.xml:100(link) xml/cut-logger.xml:491(primary)
#: xml/api-index-full.xml:507(link)
msgid "CutLogLevelFlags"
msgstr ""

#: xml/cut-logger.xml:50(link) xml/cut-logger.xml:291(primary)
#: xml/api-index-full.xml:515(link)
msgid "cut_log_level_flags_from_string"
msgstr ""

#: xml/cut-logger.xml:51(returnvalue) xml/cut-logger.xml:75(returnvalue)
#: xml/cut-logger.xml:102(link) xml/cut-logger.xml:549(primary)
#: xml/api-index-full.xml:506(link)
msgid "CutLogItemFlags"
msgstr ""

#: xml/cut-logger.xml:52(link) xml/cut-logger.xml:301(primary)
#: xml/api-index-full.xml:513(link)
msgid "cut_log_item_flags_from_string"
msgstr ""

#: xml/cut-logger.xml:53(entry) xml/cut-logger.xml:57(entry)
#, fuzzy
msgid "<link linkend=\"CutLogger\"><placeholder-1/></link> *"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/cut-logger.xml:54(link) xml/cut-logger.xml:311(primary)
#: xml/api-index-full.xml:489(link)
msgid "cut_logger"
msgstr ""

#: xml/cut-logger.xml:56(link) xml/cut-logger.xml:319(primary)
#: xml/api-index-full.xml:491(link)
msgid "cut_logger_default_log_handler"
msgstr ""

#: xml/cut-logger.xml:58(link) xml/cut-logger.xml:335(primary)
#: xml/api-index-full.xml:500(link)
msgid "cut_logger_new"
msgstr ""

#: xml/cut-logger.xml:60(link) xml/cut-logger.xml:343(primary)
#: xml/api-index-full.xml:498(link)
msgid "cut_logger_log"
msgstr ""

#: xml/cut-logger.xml:62(link) xml/cut-logger.xml:358(primary)
#: xml/api-index-full.xml:499(link)
msgid "cut_logger_log_va_list"
msgstr ""

#: xml/cut-logger.xml:64(link) xml/cut-logger.xml:373(primary)
#: xml/api-index-full.xml:497(link)
msgid "cut_logger_get_target_level"
msgstr ""

#: xml/cut-logger.xml:66(link) xml/cut-logger.xml:381(primary)
#: xml/api-index-full.xml:495(link)
msgid "cut_logger_get_resolved_target_level"
msgstr ""

#: xml/cut-logger.xml:68(link) xml/cut-logger.xml:389(primary)
#: xml/api-index-full.xml:504(link)
msgid "cut_logger_set_target_level"
msgstr ""

#: xml/cut-logger.xml:70(link) xml/cut-logger.xml:398(primary)
#: xml/api-index-full.xml:505(link)
msgid "cut_logger_set_target_level_by_string"
msgstr ""

#: xml/cut-logger.xml:72(link) xml/cut-logger.xml:408(primary)
#: xml/api-index-full.xml:501(link)
msgid "cut_logger_set_interesting_level"
msgstr ""

#: xml/cut-logger.xml:74(link) xml/cut-logger.xml:418(primary)
#: xml/api-index-full.xml:494(link)
msgid "cut_logger_get_interesting_level"
msgstr ""

#: xml/cut-logger.xml:76(link) xml/cut-logger.xml:426(primary)
#: xml/api-index-full.xml:496(link)
msgid "cut_logger_get_target_item"
msgstr ""

#: xml/cut-logger.xml:78(link) xml/cut-logger.xml:434(primary)
#: xml/api-index-full.xml:502(link)
msgid "cut_logger_set_target_item"
msgstr ""

#: xml/cut-logger.xml:80(link) xml/cut-logger.xml:443(primary)
#: xml/api-index-full.xml:503(link)
msgid "cut_logger_set_target_item_by_string"
msgstr ""

#: xml/cut-logger.xml:82(link) xml/cut-logger.xml:453(primary)
#: xml/api-index-full.xml:490(link)
msgid "cut_logger_connect_default_handler"
msgstr ""

#: xml/cut-logger.xml:84(link) xml/cut-logger.xml:461(primary)
#: xml/api-index-full.xml:492(link)
msgid "cut_logger_disconnect_default_handler"
msgstr ""

#: xml/cut-logger.xml:85(link) xml/cut-logger.xml:469(primary)
#: xml/api-index-full.xml:461(link)
msgid "CUT_GLIB_LOG_DELEGATE"
msgstr ""

#: xml/cut-logger.xml:87(link) xml/cut-logger.xml:476(primary)
#: xml/api-index-full.xml:462(link)
msgid "cut_glib_log_handler"
msgstr ""

#: xml/cut-logger.xml:101(link) xml/cut-logger.xml:541(title)
#: xml/cut-logger.xml:542(primary) xml/api-index-full.xml:514(link)
msgid "CUT_LOG_LEVEL_ALL"
msgstr ""

#: xml/cut-logger.xml:103(link) xml/cut-logger.xml:595(title)
#: xml/cut-logger.xml:596(primary) xml/api-index-full.xml:512(link)
msgid "CUT_LOG_ITEM_ALL"
msgstr ""

#: xml/cut-logger.xml:104(link) xml/cut-logger.xml:603(primary)
#: xml/api-index-full.xml:488(link)
msgid "CutLogColorize"
msgstr ""

#: xml/cut-logger.xml:105(link) xml/cut-logger.xml:629(title)
#: xml/cut-logger.xml:630(primary) xml/api-index-full.xml:161(link)
msgid "CUT_ENUM_ERROR"
msgstr ""

#: xml/cut-logger.xml:106(link) xml/cut-logger.xml:637(title)
#: xml/cut-logger.xml:638(primary) xml/api-index-full.xml:174(link)
msgid "CUT_FLAGS_ERROR"
msgstr ""

#: xml/cut-logger.xml:107(link) xml/cut-logger.xml:646(primary)
#: xml/api-index-full.xml:160(link)
msgid "CutEnumError"
msgstr ""

#: xml/cut-logger.xml:108(link) xml/cut-logger.xml:669(primary)
#: xml/api-index-full.xml:173(link)
msgid "CutFlagsError"
msgstr ""

#: xml/cut-logger.xml:125(title)
msgid "cut_log()"
msgstr ""

#: xml/cut-logger.xml:127(programlisting)
#, no-wrap
msgid "#define             cut_log(level, format, ...)"
msgstr ""

#: xml/cut-logger.xml:132(title)
msgid "cut_log_critical()"
msgstr ""

#: xml/cut-logger.xml:134(programlisting)
#, no-wrap
msgid "#define             cut_log_critical(format, ...)"
msgstr ""

#: xml/cut-logger.xml:139(title)
msgid "cut_log_error()"
msgstr ""

#: xml/cut-logger.xml:141(programlisting)
#, no-wrap
msgid "#define             cut_log_error(format, ...)"
msgstr ""

#: xml/cut-logger.xml:146(title)
msgid "cut_log_warning()"
msgstr ""

#: xml/cut-logger.xml:148(programlisting)
#, no-wrap
msgid "#define             cut_log_warning(format, ...)"
msgstr ""

#: xml/cut-logger.xml:153(title)
msgid "cut_log_message()"
msgstr ""

#: xml/cut-logger.xml:155(programlisting)
#, no-wrap
msgid "#define             cut_log_message(format, ...)"
msgstr ""

#: xml/cut-logger.xml:160(title)
msgid "cut_log_info()"
msgstr ""

#: xml/cut-logger.xml:162(programlisting)
#, no-wrap
msgid "#define             cut_log_info(format, ...)"
msgstr ""

#: xml/cut-logger.xml:167(title)
msgid "cut_log_debug()"
msgstr ""

#: xml/cut-logger.xml:169(programlisting)
#, no-wrap
msgid "#define             cut_log_debug(format, ...)"
msgstr ""

#: xml/cut-logger.xml:174(title)
msgid "cut_log_trace()"
msgstr ""

#: xml/cut-logger.xml:176(programlisting)
#, no-wrap
msgid "#define             cut_log_trace(format, ...)"
msgstr ""

#: xml/cut-logger.xml:181(title)
msgid "cut_set_log_level()"
msgstr ""

#: xml/cut-logger.xml:183(programlisting)
#, no-wrap
msgid "#define             cut_set_log_level(level)"
msgstr ""

#: xml/cut-logger.xml:190(programlisting)
#, no-wrap
msgid "#define             cut_get_log_level()"
msgstr ""

#: xml/cut-logger.xml:197(programlisting)
#, no-wrap
msgid "#define             cut_get_interesting_log_level()"
msgstr ""

#: xml/cut-logger.xml:202(title)
msgid "cut_need_log()"
msgstr ""

#: xml/cut-logger.xml:204(programlisting)
#, no-wrap
msgid "#define             cut_need_log(level)"
msgstr ""

#: xml/cut-logger.xml:211(programlisting)
#, no-wrap
msgid "#define             cut_need_critical_log()"
msgstr ""

#: xml/cut-logger.xml:218(programlisting)
#, no-wrap
msgid "#define             cut_need_error_log()"
msgstr ""

#: xml/cut-logger.xml:225(programlisting)
#, no-wrap
msgid "#define             cut_need_warning_log()"
msgstr ""

#: xml/cut-logger.xml:232(programlisting)
#, no-wrap
msgid "#define             cut_need_message_log()"
msgstr ""

#: xml/cut-logger.xml:239(programlisting)
#, no-wrap
msgid "#define             cut_need_info_log()"
msgstr ""

#: xml/cut-logger.xml:246(programlisting)
#, no-wrap
msgid "#define             cut_need_debug_log()"
msgstr ""

#: xml/cut-logger.xml:253(programlisting)
#, no-wrap
msgid "#define             cut_need_trace_log()"
msgstr ""

#: xml/cut-logger.xml:258(title)
msgid "CUT_LOG_NULL_SAFE_STRING()"
msgstr ""

#: xml/cut-logger.xml:260(programlisting)
#, no-wrap
msgid "#define CUT_LOG_NULL_SAFE_STRING(string) ((string) ? (string) : \"(null)\")\n"
msgstr ""

#: xml/cut-logger.xml:266(title)
msgid "cut_enum_error_quark ()"
msgstr ""

#: xml/cut-logger.xml:268(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GQuark\"><returnvalue>GQuark</returnvalue></link>\n"
"cut_enum_error_quark (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-logger.xml:274(title)
msgid "cut_flags_error_quark ()"
msgstr ""

#: xml/cut-logger.xml:276(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GQuark\"><returnvalue>GQuark</returnvalue></link>\n"
"cut_flags_error_quark (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-logger.xml:282(title)
msgid "cut_logger_error_quark ()"
msgstr ""

#: xml/cut-logger.xml:284(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GQuark\"><returnvalue>GQuark</returnvalue></link>\n"
"cut_logger_error_quark (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-logger.xml:290(title)
msgid "cut_log_level_flags_from_string ()"
msgstr ""

#: xml/cut-logger.xml:292(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutLogLevelFlags\"><returnvalue>CutLogLevelFlags</returnvalue></link>\n"
"cut_log_level_flags_from_string (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *level_name</parameter>,\n"
"                                 <parameter><link linkend=\"CutLogLevelFlags\"><type>CutLogLevelFlags</type></link> base_flags</parameter>,\n"
"                                 <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/cut-logger.xml:300(title)
msgid "cut_log_item_flags_from_string ()"
msgstr ""

#: xml/cut-logger.xml:302(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutLogItemFlags\"><returnvalue>CutLogItemFlags</returnvalue></link>\n"
"cut_log_item_flags_from_string (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *item_name</parameter>,\n"
"                                <parameter><link linkend=\"CutLogItemFlags\"><type>CutLogItemFlags</type></link> base_flags</parameter>,\n"
"                                <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/cut-logger.xml:310(title)
msgid "cut_logger ()"
msgstr ""

#: xml/cut-logger.xml:312(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutLogger\"><returnvalue>CutLogger</returnvalue></link> *\n"
"cut_logger (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-logger.xml:318(title)
msgid "cut_logger_default_log_handler ()"
msgstr ""

#: xml/cut-logger.xml:320(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_logger_default_log_handler (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *domain</parameter>,\n"
"                                <parameter><link linkend=\"CutLogLevelFlags\"><type>CutLogLevelFlags</type></link> level</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *file</parameter>,\n"
"                                <parameter><link linkend=\"guint\"><type>guint</type></link> line</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *function</parameter>,\n"
"                                <parameter><link linkend=\"GTimeVal\"><type>GTimeVal</type></link> *time_value</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *message</parameter>,\n"
"                                <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/cut-logger.xml:334(title)
msgid "cut_logger_new ()"
msgstr ""

#: xml/cut-logger.xml:336(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutLogger\"><returnvalue>CutLogger</returnvalue></link> *\n"
"cut_logger_new (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-logger.xml:342(title)
msgid "cut_logger_log ()"
msgstr ""

#: xml/cut-logger.xml:344(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_logger_log (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>,\n"
"                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *domain</parameter>,\n"
"                <parameter><link linkend=\"CutLogLevelFlags\"><type>CutLogLevelFlags</type></link> level</parameter>,\n"
"                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *file</parameter>,\n"
"                <parameter><link linkend=\"guint\"><type>guint</type></link> line</parameter>,\n"
"                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *function</parameter>,\n"
"                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *format</parameter>,\n"
"                <parameter>...</parameter>);"
msgstr ""

#: xml/cut-logger.xml:357(title)
msgid "cut_logger_log_va_list ()"
msgstr ""

#: xml/cut-logger.xml:359(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_logger_log_va_list (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>,\n"
"                        <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *domain</parameter>,\n"
"                        <parameter><link linkend=\"CutLogLevelFlags\"><type>CutLogLevelFlags</type></link> level</parameter>,\n"
"                        <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *file</parameter>,\n"
"                        <parameter><link linkend=\"guint\"><type>guint</type></link> line</parameter>,\n"
"                        <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *function</parameter>,\n"
"                        <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *format</parameter>,\n"
"                        <parameter><link linkend=\"va-list\"><type>va_list</type></link> args</parameter>);"
msgstr ""

#: xml/cut-logger.xml:372(title)
msgid "cut_logger_get_target_level ()"
msgstr ""

#: xml/cut-logger.xml:374(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutLogLevelFlags\"><returnvalue>CutLogLevelFlags</returnvalue></link>\n"
"cut_logger_get_target_level (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>);"
msgstr ""

#: xml/cut-logger.xml:380(title)
msgid "cut_logger_get_resolved_target_level ()"
msgstr ""

#: xml/cut-logger.xml:382(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutLogLevelFlags\"><returnvalue>CutLogLevelFlags</returnvalue></link>\n"
"cut_logger_get_resolved_target_level (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>);"
msgstr ""

#: xml/cut-logger.xml:388(title)
msgid "cut_logger_set_target_level ()"
msgstr ""

#: xml/cut-logger.xml:390(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_logger_set_target_level (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>,\n"
"                             <parameter><link linkend=\"CutLogLevelFlags\"><type>CutLogLevelFlags</type></link> level</parameter>);"
msgstr ""

#: xml/cut-logger.xml:397(title)
msgid "cut_logger_set_target_level_by_string ()"
msgstr ""

#: xml/cut-logger.xml:399(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"cut_logger_set_target_level_by_string (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>,\n"
"                                       <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *level_name</parameter>,\n"
"                                       <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/cut-logger.xml:407(title)
msgid "cut_logger_set_interesting_level ()"
msgstr ""

#: xml/cut-logger.xml:409(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_logger_set_interesting_level (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>,\n"
"                                  <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *key</parameter>,\n"
"                                  <parameter><link linkend=\"CutLogLevelFlags\"><type>CutLogLevelFlags</type></link> level</parameter>);"
msgstr ""

#: xml/cut-logger.xml:417(title)
msgid "cut_logger_get_interesting_level ()"
msgstr ""

#: xml/cut-logger.xml:419(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutLogLevelFlags\"><returnvalue>CutLogLevelFlags</returnvalue></link>\n"
"cut_logger_get_interesting_level (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>);"
msgstr ""

#: xml/cut-logger.xml:425(title)
msgid "cut_logger_get_target_item ()"
msgstr ""

#: xml/cut-logger.xml:427(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutLogItemFlags\"><returnvalue>CutLogItemFlags</returnvalue></link>\n"
"cut_logger_get_target_item (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>);"
msgstr ""

#: xml/cut-logger.xml:433(title)
msgid "cut_logger_set_target_item ()"
msgstr ""

#: xml/cut-logger.xml:435(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_logger_set_target_item (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>,\n"
"                            <parameter><link linkend=\"CutLogItemFlags\"><type>CutLogItemFlags</type></link> item</parameter>);"
msgstr ""

#: xml/cut-logger.xml:442(title)
msgid "cut_logger_set_target_item_by_string ()"
msgstr ""

#: xml/cut-logger.xml:444(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"cut_logger_set_target_item_by_string (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>,\n"
"                                      <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *item_name</parameter>,\n"
"                                      <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/cut-logger.xml:452(title)
msgid "cut_logger_connect_default_handler ()"
msgstr ""

#: xml/cut-logger.xml:454(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_logger_connect_default_handler (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>);"
msgstr ""

#: xml/cut-logger.xml:460(title)
msgid "cut_logger_disconnect_default_handler ()"
msgstr ""

#: xml/cut-logger.xml:462(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_logger_disconnect_default_handler (<parameter><link linkend=\"CutLogger\"><type>CutLogger</type></link> *logger</parameter>);"
msgstr ""

#: xml/cut-logger.xml:468(title)
msgid "CUT_GLIB_LOG_DELEGATE()"
msgstr ""

#: xml/cut-logger.xml:470(programlisting)
#, no-wrap
msgid "#define             CUT_GLIB_LOG_DELEGATE(domain)"
msgstr ""

#: xml/cut-logger.xml:475(title)
msgid "cut_glib_log_handler ()"
msgstr ""

#: xml/cut-logger.xml:477(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_glib_log_handler (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *log_domain</parameter>,\n"
"                      <parameter><link linkend=\"GLogLevelFlags\"><type>GLogLevelFlags</type></link> log_level</parameter>,\n"
"                      <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *message</parameter>,\n"
"                      <parameter><link linkend=\"gpointer\"><type>gpointer</type></link> user_data</parameter>);"
msgstr ""

#: xml/cut-logger.xml:490(title)
msgid "enum CutLogLevelFlags"
msgstr ""

#: xml/cut-logger.xml:502(para)
msgid "CUT_LOG_LEVEL_DEFAULT"
msgstr ""

#: xml/cut-logger.xml:506(para)
msgid "CUT_LOG_LEVEL_NONE"
msgstr ""

#: xml/cut-logger.xml:510(para)
msgid "CUT_LOG_LEVEL_CRITICAL"
msgstr ""

#: xml/cut-logger.xml:514(para)
msgid "CUT_LOG_LEVEL_ERROR"
msgstr ""

#: xml/cut-logger.xml:518(para)
msgid "CUT_LOG_LEVEL_WARNING"
msgstr ""

#: xml/cut-logger.xml:522(para)
msgid "CUT_LOG_LEVEL_MESSAGE"
msgstr ""

#: xml/cut-logger.xml:526(para)
msgid "CUT_LOG_LEVEL_INFO"
msgstr ""

#: xml/cut-logger.xml:530(para)
msgid "CUT_LOG_LEVEL_DEBUG"
msgstr ""

#: xml/cut-logger.xml:534(para)
msgid "CUT_LOG_LEVEL_TRACE"
msgstr ""

#: xml/cut-logger.xml:543(programlisting)
#, no-wrap
msgid "#define             CUT_LOG_LEVEL_ALL"
msgstr ""

#: xml/cut-logger.xml:548(title)
msgid "enum CutLogItemFlags"
msgstr ""

#: xml/cut-logger.xml:560(para)
msgid "CUT_LOG_ITEM_DEFAULT"
msgstr ""

#: xml/cut-logger.xml:564(para)
msgid "CUT_LOG_ITEM_NONE"
msgstr ""

#: xml/cut-logger.xml:568(para)
msgid "CUT_LOG_ITEM_DOMAIN"
msgstr ""

#: xml/cut-logger.xml:572(para)
msgid "CUT_LOG_ITEM_LEVEL"
msgstr ""

#: xml/cut-logger.xml:576(para)
msgid "CUT_LOG_ITEM_LOCATION"
msgstr ""

#: xml/cut-logger.xml:580(para)
msgid "CUT_LOG_ITEM_TIME"
msgstr ""

#: xml/cut-logger.xml:584(para)
msgid "CUT_LOG_ITEM_NAME"
msgstr ""

#: xml/cut-logger.xml:588(para)
msgid "CUT_LOG_ITEM_PID"
msgstr ""

#: xml/cut-logger.xml:597(programlisting)
#, no-wrap
msgid "#define             CUT_LOG_ITEM_ALL"
msgstr ""

#: xml/cut-logger.xml:602(title)
msgid "enum CutLogColorize"
msgstr ""

#: xml/cut-logger.xml:614(para)
msgid "CUT_LOG_COLORIZE_DEFAULT"
msgstr ""

#: xml/cut-logger.xml:618(para)
msgid "CUT_LOG_COLORIZE_NONE"
msgstr ""

#: xml/cut-logger.xml:622(para)
msgid "CUT_LOG_COLORIZE_CONSOLE"
msgstr ""

#: xml/cut-logger.xml:631(programlisting)
#, no-wrap
msgid "#define CUT_ENUM_ERROR           (cut_enum_error_quark())\n"
msgstr ""

#: xml/cut-logger.xml:639(programlisting)
#, no-wrap
msgid "#define CUT_FLAGS_ERROR          (cut_flags_error_quark())\n"
msgstr ""

#: xml/cut-logger.xml:645(title)
msgid "enum CutEnumError"
msgstr ""

#: xml/cut-logger.xml:657(para)
msgid "CUT_ENUM_ERROR_NULL_NAME"
msgstr ""

#: xml/cut-logger.xml:661(para)
msgid "CUT_ENUM_ERROR_UNKNOWN_NAME"
msgstr ""

#: xml/cut-logger.xml:668(title)
msgid "enum CutFlagsError"
msgstr ""

#: xml/cut-logger.xml:680(para)
msgid "CUT_FLAGS_ERROR_NULL_NAME"
msgstr ""

#: xml/cut-logger.xml:684(para)
msgid "CUT_FLAGS_ERROR_UNKNOWN_NAMES"
msgstr ""

#: xml/cut-loader-customizer.xml:7(refentrytitle)
#: xml/cut-loader-customizer.xml:12(refname)
#: xml/cut-loader-customizer.xml:23(returnvalue)
#: xml/api-index-full.xml:485(link) xml/api-index-full.xml:486(link)
msgid "CutLoaderCustomizer"
msgstr ""

#: xml/cut-loader-customizer.xml:23(entry)
#, fuzzy
msgid "<link linkend=\"CutLoaderCustomizer\"><placeholder-1/></link> *"
msgstr ""
"<link linkend=\"CutCallbackFunction\">CutCallbackFunction<type></type></link>"
"コールバック。"

#: xml/cut-loader-customizer.xml:24(link)
#: xml/cut-loader-customizer.xml:44(primary) xml/api-index-full.xml:486(link)
msgid "cut_loader_customizer_new"
msgstr ""

#: xml/cut-loader-customizer.xml:26(link)
#: xml/cut-loader-customizer.xml:54(primary) xml/api-index-full.xml:485(link)
msgid "cut_loader_customizer_customize"
msgstr ""

#: xml/cut-loader-customizer.xml:43(title)
msgid "cut_loader_customizer_new ()"
msgstr ""

#: xml/cut-loader-customizer.xml:45(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutLoaderCustomizer\"><returnvalue>CutLoaderCustomizer</returnvalue></link> *\n"
"cut_loader_customizer_new (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *name</parameter>,\n"
"                           <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *first_property</parameter>,\n"
"                           <parameter>...</parameter>);"
msgstr ""

#: xml/cut-loader-customizer.xml:53(title)
msgid "cut_loader_customizer_customize ()"
msgstr ""

#: xml/cut-loader-customizer.xml:55(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_loader_customizer_customize (<parameter><link linkend=\"CutLoaderCustomizer\"><type>CutLoaderCustomizer</type></link> *customizer</parameter>,\n"
"                                 <parameter><link linkend=\"CutLoader\"><type>CutLoader</type></link> *loader</parameter>);"
msgstr ""

#: xml/cut-loader-customizer-factory-builder.xml:7(refentrytitle)
#: xml/cut-loader-customizer-factory-builder.xml:12(refname)
msgid "CutLoaderCustomizerFactoryBuilder"
msgstr ""

#: xml/cut-helper.xml:7(refentrytitle) xml/cut-helper.xml:12(refname)
#: xml/api-index-full.xml:9(link) xml/api-index-full.xml:163(link)
#: xml/api-index-full.xml:164(link) xml/api-index-full.xml:165(link)
#: xml/api-index-full.xml:457(link) xml/api-index-full.xml:458(link)
#: xml/api-index-full.xml:477(link) xml/api-index-full.xml:478(link)
#: xml/api-index-full.xml:543(link) xml/api-index-full.xml:544(link)
#: xml/api-index-full.xml:547(link) xml/api-index-full.xml:554(link)
#: xml/api-index-full.xml:557(link) xml/api-index-full.xml:652(link)
#: xml/api-index-full.xml:653(link) xml/api-index-full.xml:654(link)
#: xml/api-index-full.xml:655(link) xml/api-index-full.xml:656(link)
#: xml/api-index-deprecated.xml:8(link) xml/api-index-deprecated.xml:75(link)
#: xml/api-index-1.1.5.xml:52(link) xml/api-index-1.1.4.xml:13(link)
#: xml/api-index-1.1.1.xml:10(link) xml/api-index-1.1.1.xml:19(link)
#: xml/api-index-1.0.9.xml:16(link) xml/api-index-1.0.9.xml:17(link)
#: xml/api-index-1.0.6.xml:77(link) xml/api-index-1.0.6.xml:78(link)
#: xml/api-index-1.0.6.xml:81(link) xml/api-index-1.0.5.xml:12(link)
#: xml/api-index-1.0.5.xml:13(link) xml/api-index-1.0.5.xml:66(link)
#: xml/api-index-1.0.5.xml:67(link) xml/api-index-1.0.5.xml:68(link)
#: xml/api-index-1.0.5.xml:69(link) xml/api-index-1.0.5.xml:70(link)
#: xml/api-index-1.0.3.xml:8(link)
msgid "Assertion writing helper"
msgstr "検証作成の補助"

#: xml/cut-helper.xml:13(refpurpose)
msgid "Symbols in this section help you writing your own assertions."
msgstr "このセクションにあるシンボルは独自検証を作成することを補助します。"

#: xml/cut-helper.xml:25(link) xml/cut-helper.xml:145(primary)
#: xml/api-index-full.xml:654(link) xml/api-index-1.0.5.xml:68(link)
msgid "cut_test_pass"
msgstr ""

#: xml/cut-helper.xml:27(link) xml/cut-helper.xml:153(primary)
#: xml/api-index-full.xml:652(link) xml/api-index-1.0.5.xml:66(link)
msgid "cut_test_fail"
msgstr ""

#: xml/cut-helper.xml:29(link) xml/cut-helper.xml:180(primary)
#: xml/api-index-full.xml:653(link) xml/api-index-deprecated.xml:75(link)
#: xml/api-index-1.0.5.xml:67(link)
msgid "cut_test_fail_va_list"
msgstr ""

#: xml/cut-helper.xml:31(link) xml/cut-helper.xml:224(primary)
#: xml/api-index-full.xml:544(link) xml/api-index-1.0.6.xml:78(link)
msgid "cut_push_backtrace"
msgstr ""

#: xml/cut-helper.xml:33(link) xml/cut-helper.xml:247(primary)
#: xml/api-index-full.xml:543(link) xml/api-index-1.0.6.xml:77(link)
msgid "cut_pop_backtrace"
msgstr ""

#: xml/cut-helper.xml:34(link) xml/cut-helper.xml:256(primary)
#: xml/api-index-full.xml:655(link) xml/api-index-1.0.5.xml:69(link)
msgid "cut_trace"
msgstr ""

#: xml/cut-helper.xml:35(link) xml/cut-helper.xml:328(primary)
#: xml/api-index-full.xml:656(link) xml/api-index-1.0.5.xml:70(link)
msgid "cut_trace_with_info_expression"
msgstr ""

#: xml/cut-helper.xml:37(link) xml/cut-helper.xml:396(primary)
#: xml/api-index-full.xml:9(link) xml/api-index-deprecated.xml:8(link)
#: xml/api-index-1.0.3.xml:8(link)
msgid "cut_append_diff"
msgstr ""

#: xml/cut-helper.xml:38(link) xml/cut-helper.xml:438(primary)
#: xml/api-index-full.xml:557(link) xml/api-index-1.0.9.xml:17(link)
msgid "cut_set_expected"
msgstr ""

#: xml/cut-helper.xml:39(link) xml/cut-helper.xml:460(primary)
#: xml/api-index-full.xml:554(link) xml/api-index-1.0.9.xml:16(link)
msgid "cut_set_actual"
msgstr ""

#: xml/cut-helper.xml:41(link) xml/cut-helper.xml:482(primary)
#: xml/api-index-full.xml:478(link)
msgid "cut_inspect_string_array"
msgstr ""

#: xml/cut-helper.xml:43(link) xml/cut-helper.xml:505(primary)
#: xml/api-index-full.xml:165(link) xml/api-index-1.0.5.xml:13(link)
msgid "cut_equal_string"
msgstr ""

#: xml/cut-helper.xml:45(link) xml/cut-helper.xml:539(primary)
#: xml/api-index-full.xml:163(link) xml/api-index-1.0.5.xml:12(link)
msgid "cut_equal_double"
msgstr ""

#: xml/cut-helper.xml:46(link) xml/cut-helper.xml:576(primary)
#: xml/api-index-full.xml:164(link) xml/api-index-1.1.1.xml:10(link)
msgid "cut_equal_sockaddr"
msgstr ""

#: xml/cut-helper.xml:47(link) xml/cut-helper.xml:607(primary)
#: xml/api-index-full.xml:477(link) xml/api-index-1.1.1.xml:19(link)
msgid "cut_inspect_sockaddr"
msgstr ""

#: xml/cut-helper.xml:49(link) xml/cut-helper.xml:631(primary)
#: xml/api-index-full.xml:458(link) xml/api-index-1.1.4.xml:13(link)
msgid "cut_get_test_directory"
msgstr ""

#: xml/cut-helper.xml:51(link) xml/cut-helper.xml:641(primary)
#: xml/api-index-full.xml:457(link) xml/api-index-1.1.5.xml:52(link)
msgid "cut_get_source_directory"
msgstr ""

#: xml/cut-helper.xml:64(link) xml/cut-helper.xml:654(title)
#: xml/cut-helper.xml:655(primary) xml/api-index-full.xml:547(link)
#: xml/api-index-1.0.6.xml:81(link)
msgid "CUT_RELATIVE_PATH"
msgstr ""

#: xml/cut-helper.xml:74(para)
msgid ""
"You will need to write your own assertions for writing easy to read test. "
"Symbols in this section help you writing your own assertions."
msgstr ""
"読みやすいテストを書くために独自の検証を作成する必要があるでしょう。このセク"
"ションのシンボルは独自の検証作成を補助します。"

#: xml/cut-helper.xml:78(para)
#, fuzzy
msgid "my-assertions.h:"
msgstr "検証"

#: xml/cut-helper.xml:107(para)
#, fuzzy
msgid "my-assertions.c:"
msgstr "検証"

#: xml/cut-helper.xml:144(title)
msgid "cut_test_pass ()"
msgstr ""

#: xml/cut-helper.xml:146(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_test_pass (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-helper.xml:148(para)
msgid ""
"Call <link linkend=\"cut-test-pass\"><function>cut_test_pass()</function></"
"link> if an assertion is passed. <link linkend=\"cut-test-pass"
"\"><function>cut_test_pass()</function></link> counts up n-assertions."
msgstr ""
"検証をパスしたら<link linkend=\"cut-test-pass\"><function>cut_test_pass()</"
"function></link>を呼んでください。<link linkend=\"cut-test-pass"
"\"><function>cut_test_pass()</function></link>は検証数を増やします。"

#: xml/cut-helper.xml:152(title)
msgid "cut_test_fail ()"
msgstr ""

#: xml/cut-helper.xml:154(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_test_fail (<parameter>const <link linkend=\"char\"><type>char</type></link> *system_message</parameter>,\n"
"               <parameter>...</parameter>);"
msgstr ""

#: xml/cut-helper.xml:157(para)
msgid ""
"Call <link linkend=\"cut-test-fail\"><function>cut_test_fail()</function></"
"link> if an assertion is failed. <link linkend=\"cut-test-fail"
"\"><function>cut_test_fail()</function></link> counts up n-failures and "
"terminate the current test."
msgstr ""
"検証が失敗したら<link linkend=\"cut-test-fail\"><function>cut_test_fail()</"
"function></link>を呼んでください。<link linkend=\"cut-test-fail"
"\"><function>cut_test_fail()</function></link>は失敗数を増やし、現在のテスト"
"を中断します。"

#: xml/cut-helper.xml:168(para) xml/cut-helper.xml:213(para)
msgid "system_message"
msgstr ""

#: xml/cut-helper.xml:169(para) xml/cut-helper.xml:214(para)
msgid "a failure message from testing system."
msgstr "テストフレームワーク指定の失敗メッセージ。"

#: xml/cut-helper.xml:172(para)
msgid ""
"optional format string, followed by parameters to insert into the format "
"string. (as with <link linkend=\"printf\"><function>printf()</function></"
"link>) This is deprecated since 0.1.6. Use <link linkend=\"cut-set-message"
"\"><function>cut_set_message()</function></link> instead."
msgstr ""
"省略可能な整形文字列。以降のパラメータが整形文字列に挿入されます。（<link "
"linkend=\"printf\"><function>printf()</function></link>と同じ。）このパラメー"
"タは0.1.6から非推奨となっています。代わりに<link linkend=\"cut-set-message"
"\"><function>cut_set_message()</function></link>を使ってください。"

#: xml/cut-helper.xml:179(title)
msgid "cut_test_fail_va_list ()"
msgstr ""

#: xml/cut-helper.xml:181(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_test_fail_va_list (<parameter>const <link linkend=\"char\"><type>char</type></link> *system_message</parameter>,\n"
"                       <parameter>const <link linkend=\"char\"><type>char</type></link> *user_message_format</parameter>);"
msgstr ""

#: xml/cut-helper.xml:184(para)
#, fuzzy
msgid ""
"<literal>cut_test_fail_va_list</literal> has been deprecated since version "
"1.0.6 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/cut-helper.xml:184(para)
#, fuzzy
msgid ""
"Use <link linkend=\"cut-test-fail\"><function>cut_test_fail()</function></"
"link> instead."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/cut-helper.xml:186(para)
msgid ""
"See <link linkend=\"cut-test-fail\"><function>cut_test_fail()</function></"
"link> for <link linkend=\"cut-test-fail-va-list"
"\"><function>cut_test_fail_va_list()</function></link>'s behavior. "
"<parameter>user_message_format</parameter> is the prior variable of variable "
"length arguments."
msgstr ""
"<link linkend=\"cut-test-fail-va-list\"><function>cut_test_fail_va_list()</"
"function></link>の動作については<link linkend=\"cut-test-fail"
"\"><function>cut_test_fail()</function></link>を見てください。"
"<parameter>user_message_format</parameter>は可変長引数の1つ前の引数です。"

#: xml/cut-helper.xml:217(para)
msgid "user_message_format"
msgstr ""

#: xml/cut-helper.xml:218(para)
msgid "a failure message from user."
msgstr "ユーザ指定の失敗メッセージ。"

#: xml/cut-helper.xml:223(title)
#, fuzzy
msgid "cut_push_backtrace ()"
msgstr "cut_push_backtrace ()"

#: xml/cut-helper.xml:225(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_push_backtrace (<parameter>const <link linkend=\"char\"><type>char</type></link> *expression</parameter>);"
msgstr ""

#: xml/cut-helper.xml:227(para)
msgid ""
"Pushes <parameter>expression</parameter> and the current source place to the "
"backtrace stack."
msgstr ""
"<parameter>expression</parameter>と現在のソースの場所をバックトレーススタック"
"にプッシュします。"

#: xml/cut-helper.xml:230(para) xml/cut-helper.xml:251(para)
msgid ""
"Normally, you don't need to use it directory. <link linkend=\"cut-trace"
"\"><function>cut_trace()</function></link> is enough."
msgstr ""
"通常は直接使う必要はありません。<link linkend=\"cut-trace"
"\"><function>cut_trace()</function></link>で十分です。"

#: xml/cut-helper.xml:240(para) xml/cut-helper.xml:321(para)
#: xml/cut-helper.xml:386(para) xml/cut-assertions.xml:212(para)
#: xml/cut-assertions.xml:236(para) xml/cut-assertions.xml:260(para)
#: xml/cut-assertions.xml:364(para) xml/cut-assertions.xml:412(para)
#, fuzzy
msgid "expression"
msgstr "呼び出されたと記録される式。"

#: xml/cut-helper.xml:241(para) xml/cut-helper.xml:322(para)
#: xml/cut-helper.xml:387(para)
msgid "an expression to be traced."
msgstr "呼び出されたことを記録される式。"

#: xml/cut-helper.xml:246(title)
#, fuzzy
msgid "cut_pop_backtrace ()"
msgstr "cut_push_backtrace ()"

#: xml/cut-helper.xml:248(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_pop_backtrace (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-helper.xml:250(para)
msgid "Pops a backtrace from the backtrace stack."
msgstr "バックトレーススタックからバックトレースをポップします。"

#: xml/cut-helper.xml:255(title)
msgid "cut_trace()"
msgstr ""

#: xml/cut-helper.xml:257(programlisting)
#, no-wrap
msgid "#define             cut_trace(expression)"
msgstr ""

#: xml/cut-helper.xml:258(para)
#, fuzzy
msgid ""
"Mark the current file, line, function and <parameter>expression</parameter> "
"and show it when assertion is failed in <parameter>expression</parameter> . "
"Most of <parameter>expression</parameter> will be function call."
msgstr ""
"現在のファイル名、行番号、関数名、<parameter>expression</parameter>を記憶し、"
"<parameter>expression</parameter>内で検証が失敗した場合に表示します。"
"<parameter>expression</parameter>の多くは関数呼び出しになるでしょう。"

#: xml/cut-helper.xml:264(para)
#, fuzzy
msgid ""
"Note that you can't get return value of <parameter>expression</parameter> ."
msgstr ""
"<parameter>expression</parameter>の戻り値を取得できないことに注意してくださ"
"い。"

#: xml/cut-helper.xml:266(para)
msgid ""
"Here is an example of <link linkend=\"cut-trace\"><function>cut_trace()</"
"function></link>. If cut_assert_not_null(object) is failed, you will get a "
"backtrace that contains two line; cut_assert_not_null(object) and "
"create_my_object(\"my-name\")."
msgstr ""
"<link linkend=\"cut-trace\"><function>cut_trace()</function></link>は以下の通"
"りです。もし、cut_assert_not_null(object)が失敗したら、バックトレースには2行"
"含まれます。cut_assert_not_null(object)とcreate_my_object(\"my-name\")です。"

#: xml/cut-helper.xml:290(para)
#, fuzzy
msgid ""
"You will use <link linkend=\"cut-trace\"><function>cut_trace()</function></"
"link> with macro for test readability:"
msgstr ""
"テストを読みやすくするために<link linkend=\"cut-trace"
"\"><function>cut_trace()</function></link>を使ったマクロを書くかもしれませ"
"ん: <placeholder-1/>"

#: xml/cut-helper.xml:327(title)
msgid "cut_trace_with_info_expression()"
msgstr ""

#: xml/cut-helper.xml:329(programlisting)
#, no-wrap
msgid "#define             cut_trace_with_info_expression(expression, info_expression)"
msgstr ""

#: xml/cut-helper.xml:330(para)
msgid ""
"It's difference between <link linkend=\"cut-trace\"><function>cut_trace()</"
"function></link> and <link linkend=\"cut-trace-with-info-expression"
"\"><function>cut_trace_with_info_expression()</function></link> that traced "
"expression is the same expression as <parameter>expression</parameter> or "
"not. <link linkend=\"cut-trace-with-info-expression"
"\"><function>cut_trace_with_info_expression()</function></link> is useful "
"when you want to hide some information in <parameter>expression</parameter> "
"for backtrace readability."
msgstr ""
"<link linkend=\"cut-trace\"><function>cut_trace()</function></link>と<link "
"linkend=\"cut-trace-with-info-expression"
"\"><function>cut_trace_with_info_expression()</function></link>の違いは記録さ"
"れる式が<parameter>expression</parameter>と同じかどうかです。<link linkend="
"\"cut-trace-with-info-expression"
"\"><function>cut_trace_with_info_expression()</function></link>はバックトレー"
"スの読みやすさのために<parameter>expression</parameter>から情報を隠したいとき"
"に便利です。"

#: xml/cut-helper.xml:338(para)
#, fuzzy
msgid ""
"Here is an example of <link linkend=\"cut-trace-with-info-expression"
"\"><function>cut_trace_with_info_expression()</function></link>. If "
"cut_assert_not_null(object) is failed, you will get a backtrace that "
"contains two line:"
msgstr ""
"<link linkend=\"cut-trace\"><function>cut_trace()</function></link>は以下の通"
"りです。もし、cut_assert_not_null(object)が失敗したら、バックトレースには2行"
"含まれます。cut_assert_not_null(object)とcreate_my_object(\"my-name\")です。"

#: xml/cut-helper.xml:343(para)
msgid "cut_assert_not_null(object)"
msgstr ""

#: xml/cut-helper.xml:344(para)
msgid "create_my_object(\"my-name\") not create_my_object_helper(\"my-name\")"
msgstr ""
"create_my_object_helper(\"my-name\")ではなくcreate_my_object(\"my-name\")"

#: xml/cut-helper.xml:347(para)
#, fuzzy
msgid ""
"If you use <link linkend=\"cut-trace\"><function>cut_trace()</function></"
"link> instead of <link linkend=\"cut-trace-with-info-expression"
"\"><function>cut_trace_with_info_expression()</function></link>, you will "
"get create_my_object_helper(\"my-name\"). You may be confused about 'Where "
"is create_my_object_helper(\"my-name\") from? <link linkend=\"test-my-object-"
"name\"><function>test_my_object_name()</function></link> uses "
"create_my_object(\"my-name\") but does not use create_my_object_helper(\"my-"
"name\").'."
msgstr ""
"<link linkend=\"cut-trace-with-info-expression"
"\"><function>cut_trace_with_info_expression()</function></link>の例です。"
"cut_assert_not_null(object)が失敗すると以下の2行を含んだバックトレースが得ら"
"れます:<placeholder-1/>もし、<link linkend=\"cut-trace-with-info-expression"
"\"><function>cut_trace_with_info_expression()</function></link>ではなく<link "
"linkend=\"cut-trace\"><function>cut_trace()</function></link>を使った場合は"
"create_my_object_helper(\"my-name\")になります。もし、"
"create_my_object_helper(\"my-name\")が得られたら以下のように混乱してしまうか"
"もしれません。「create_my_object_helper(\"my-name\")はどこからきたんだ？"
"<link linkend=\"test-my-object-name\"><function>test_my_object_name()</"
"function></link>はcreate_my_object(\"my-name\")は使っているけど、"
"create_my_object_helper(\"my-name\")は使っていないぞ。」"

#: xml/cut-helper.xml:389(para)
msgid "info_expression"
msgstr ""

#: xml/cut-helper.xml:390(para)
msgid "a traced expression."
msgstr "呼び出されたと記録される式。"

#: xml/cut-helper.xml:395(title)
msgid "cut_append_diff ()"
msgstr ""

#: xml/cut-helper.xml:397(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_append_diff (<parameter>const <link linkend=\"char\"><type>char</type></link> *message</parameter>,\n"
"                 <parameter>const <link linkend=\"char\"><type>char</type></link> *from</parameter>,\n"
"                 <parameter>const <link linkend=\"char\"><type>char</type></link> *to</parameter>);"
msgstr ""

#: xml/cut-helper.xml:401(para)
#, fuzzy
msgid ""
"<literal>cut_append_diff</literal> has been deprecated since version 1.0.9 "
"and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/cut-helper.xml:401(para)
#, fuzzy
msgid ""
"Use <link linkend=\"cut-set-expected\"><function>cut_set_expected()</"
"function></link> and <link linkend=\"cut-set-actual"
"\"><function>cut_set_actual()</function></link> instead."
msgstr ""
"<literal>cut_append_diff</literal>はバージョン1.0.9から非推奨になりました。新"
"しく書くコードでは使わないでください。代わりに<link linkend=\"cut-set-"
"expected\"><function>cut_set_expected()</function></link>と<link linkend="
"\"cut-set-actual\"><function>cut_set_actual()</function></link>を使ってくださ"
"い。"

#: xml/cut-helper.xml:404(para)
#, fuzzy
msgid ""
"Computes diff between <parameter>from</parameter> and <parameter>to</"
"parameter> and append the diff to <parameter>message</parameter> . Returned "
"string is owned by Cutter."
msgstr ""
"<parameter>from</parameter>と<parameter>to</parameter>のdiffを計算し、その"
"diffを<parameter>message</parameter>に追加します。戻り値の文字列の所有者は"
"Cutterです。"

#: xml/cut-helper.xml:418(para)
msgid "the string to be appended diff."
msgstr "diffが追加される文字列。"

#: xml/cut-helper.xml:429(para)
msgid ""
"<parameter>message</parameter> with diff between <parameter>from</parameter> "
"and <parameter>to</parameter> or same as <parameter>message</parameter> if "
"the diff not interested. Don't free it."
msgstr ""
"<parameter>from</parameter>と<parameter>to</parameter>間のdiff付きの"
"<parameter>message</parameter>。必要なさそうなdiffであれば"
"<parameter>message</parameter>と同じ。開放しないでください。"

#: xml/cut-helper.xml:437(title)
msgid "cut_set_expected()"
msgstr ""

#: xml/cut-helper.xml:439(programlisting)
#, no-wrap
msgid "#define             cut_set_expected(expected)"
msgstr ""

#: xml/cut-helper.xml:440(para)
msgid "Sets an inspected expected object to be used by the next assertion."
msgstr "次の検証で使う詳細化した期待値オブジェクトを設定します。"

#: xml/cut-helper.xml:442(para) xml/cut-helper.xml:464(para)
msgid ""
"If both of expected and actual object are set and diff of them is needed, "
"the diff is generated automatically."
msgstr ""
"期待値オブジェクトと実際値オブジェクトの両方が設定され、それらのdiffが必要な"
"場合は自動的にdiffを生成します。"

#: xml/cut-helper.xml:444(para)
msgid ""
"See also <link linkend=\"cut-set-actual\"><function>cut_set_actual()</"
"function></link>."
msgstr ""
"<link linkend=\"cut-set-actual\"><function>cut_set_actual()</function></link>"
"も見てください。"

#: xml/cut-helper.xml:454(para)
msgid "the inspected expected object."
msgstr "期待値オブジェクトの詳細。"

#: xml/cut-helper.xml:459(title)
msgid "cut_set_actual()"
msgstr ""

#: xml/cut-helper.xml:461(programlisting)
#, no-wrap
msgid "#define             cut_set_actual(actual)"
msgstr ""

#: xml/cut-helper.xml:462(para)
msgid "Sets an inspected actual object to be used by the next assertion."
msgstr "次の検証で使う詳細化した実際値オブジェクトを設定します。"

#: xml/cut-helper.xml:466(para)
msgid ""
"See also <link linkend=\"cut-set-expected\"><function>cut_set_expected()</"
"function></link>."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/cut-helper.xml:476(para)
msgid "the inspected actual object."
msgstr "実測値オブジェクトの詳細。"

#: xml/cut-helper.xml:481(title)
msgid "cut_inspect_string_array ()"
msgstr ""

#: xml/cut-helper.xml:483(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_inspect_string_array (<parameter>const <link linkend=\"char\"><type>char</type></link> **strings</parameter>);"
msgstr ""

#: xml/cut-helper.xml:485(para)
msgid ""
"Formats <parameter>strings</parameter> as human readable string that is "
"owned by Cutter."
msgstr ""
"<parameter>strings</parameter>を人が読みやすい文字列に整形します。整形された"
"文字列の所有者はCutterです。"

#: xml/cut-helper.xml:496(para)
msgid "the array of strings to be inspected."
msgstr "整形される文字列の配列。"

#: xml/cut-helper.xml:504(title)
msgid "cut_equal_string ()"
msgstr ""

#: xml/cut-helper.xml:506(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"cut-boolean\"><returnvalue>cut_boolean</returnvalue></link>\n"
"cut_equal_string (<parameter>const <link linkend=\"char\"><type>char</type></link> *string1</parameter>,\n"
"                  <parameter>const <link linkend=\"char\"><type>char</type></link> *string2</parameter>);"
msgstr ""

#: xml/cut-helper.xml:509(para)
#, fuzzy
msgid ""
"Compare <parameter>string1</parameter> to <parameter>string2</parameter> . "
"<parameter>string1</parameter> and/or <parameter>string2</parameter> maybe "
"<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>."
msgstr ""
"<parameter>string1</parameter>と<parameter>string2</parameter>を比較します。"
"<parameter>string1</parameter>あるいは<parameter>string2</parameter>、または"
"両方が<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>でもかまいま"
"せん。"

#: xml/cut-helper.xml:524(para) xml/cut-helper.xml:527(para)
msgid "a string."
msgstr "文字列。"

#: xml/cut-helper.xml:532(para)
msgid ""
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link> if both "
"<parameter>string1</parameter> and <parameter>string2</parameter> are <link "
"linkend=\"NULL:CAPS\"><literal>NULL</literal></link> or have the same "
"contents; <link linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></"
"link> otherwise."
msgstr ""
"<parameter>string1</parameter>と<parameter>string2</parameter>が両方<link "
"linkend=\"NULL:CAPS\"><literal>NULL</literal></link>、あるいは同じ内容の場合"
"は<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link>、そうで"
"ない場合は<link linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></"
"link>。"

#: xml/cut-helper.xml:538(title)
msgid "cut_equal_double ()"
msgstr ""

#: xml/cut-helper.xml:540(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"cut-boolean\"><returnvalue>cut_boolean</returnvalue></link>\n"
"cut_equal_double (<parameter><link linkend=\"double\"><type>double</type></link> double1</parameter>,\n"
"                  <parameter><link linkend=\"double\"><type>double</type></link> double2</parameter>,\n"
"                  <parameter><link linkend=\"double\"><type>double</type></link> error</parameter>);"
msgstr ""

#: xml/cut-helper.xml:544(para)
msgid ""
"Compare <parameter>double1</parameter> to <parameter>double2</parameter> "
"with <parameter>error</parameter> range."
msgstr ""
"<parameter>double1</parameter>と<parameter>double2</parameter>を誤差範囲"
"<parameter>error</parameter>で比較します。"

#: xml/cut-helper.xml:556(para)
msgid "double1"
msgstr ""

#: xml/cut-helper.xml:557(para) xml/cut-helper.xml:560(para)
msgid "a double value."
msgstr "浮動小数点値。"

#: xml/cut-helper.xml:559(para)
msgid "double2"
msgstr ""

#: xml/cut-helper.xml:563(para)
msgid "a double value that specifies error range."
msgstr "誤差範囲を示す浮動小数点数。"

#: xml/cut-helper.xml:568(para)
#, fuzzy
msgid ""
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link> if |"
"<parameter>double1</parameter> - <parameter>double2</parameter> | &lt;= "
"<parameter>error</parameter> ; <link linkend=\"CUT-FALSE:CAPS"
"\"><literal>CUT_FALSE</literal></link> otherwise."
msgstr ""
"|<parameter>double1</parameter> - <parameter>double2</parameter>| &lt;= "
"<parameter>error</parameter>なら<link linkend=\"CUT-TRUE:CAPS"
"\"><literal>CUT_TRUE</literal></link>、そうでなければ<link linkend=\"CUT-"
"FALSE:CAPS\"><literal>CUT_FALSE</literal></link>。"

#: xml/cut-helper.xml:575(title)
msgid "cut_equal_sockaddr()"
msgstr ""

#: xml/cut-helper.xml:577(programlisting)
#, no-wrap
msgid "#define cut_equal_sockaddr(address1, address2) CUT_FALSE\n"
msgstr ""

#: xml/cut-helper.xml:579(para)
#, fuzzy
msgid ""
"Compare <parameter>address1</parameter> to <parameter>address2</parameter> ."
msgstr ""
"<parameter>address1</parameter>と<parameter>address2</parameter>を比較しま"
"す。"

#: xml/cut-helper.xml:582(para) xml/cut-helper.xml:612(para)
msgid "This function can be disabled by defining CUT_DISABLE_SOCKET_SUPPORT."
msgstr "この関数はCUT_DISABLE_SOCKET_SUPPORTを定義すると無効にできます。"

#: xml/cut-helper.xml:591(para)
msgid "address1"
msgstr ""

#: xml/cut-helper.xml:592(para) xml/cut-helper.xml:595(para)
msgid "a socket address."
msgstr "ソケットアドレス。"

#: xml/cut-helper.xml:594(para)
msgid "address2"
msgstr ""

#: xml/cut-helper.xml:600(para)
#, fuzzy
msgid ""
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link> if "
"<parameter>address1</parameter> == <parameter>address2</parameter> , <link "
"linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link> otherwise."
msgstr ""
"<parameter>sub_process</parameter>が異常終了したときは<link linkend=\"CUT-"
"TRUE:CAPS\"><literal>CUT_TRUE</literal></link>、そうでない場合は<link "
"linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link>。"

#: xml/cut-helper.xml:606(title)
msgid "cut_inspect_sockaddr()"
msgstr ""

#: xml/cut-helper.xml:608(programlisting)
#, no-wrap
msgid "#define             cut_inspect_sockaddr(address)"
msgstr ""

#: xml/cut-helper.xml:609(para)
msgid ""
"Formats <parameter>address</parameter> as human readable string that is "
"owned by Cutter."
msgstr ""
"<parameter>address</parameter>を人が読みやすい文字列に整形します。整形された"
"文字列の所有者はCutterです。"

#: xml/cut-helper.xml:621(para)
msgid "address"
msgstr ""

#: xml/cut-helper.xml:622(para)
msgid "the socket address to be inspected."
msgstr "詳細化されるソケットアドレス。"

#: xml/cut-helper.xml:627(para)
msgid "a inspected socket address owned by Cutter. Don't free it."
msgstr "Cutterが所有する整形されたソケットアドレス。解放しないで下さい。"

#: xml/cut-helper.xml:630(title)
#, fuzzy
msgid "cut_get_test_directory ()"
msgstr "テストディレクトリ"

#: xml/cut-helper.xml:632(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_get_test_directory (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-helper.xml:634(para)
msgid "Gets the test directory name which is specified by command line."
msgstr "コマンドラインで指定されたテストディレクトリ名を返します。"

#: xml/cut-helper.xml:637(para) xml/cut-helper.xml:647(para)
msgid "a string owned by Cutter that must not be modified or freed."
msgstr "Cutterが所有する文字列。解放しないで下さい。"

#: xml/cut-helper.xml:640(title)
#, fuzzy
msgid "cut_get_source_directory ()"
msgstr "ソースディレクトリ。"

#: xml/cut-helper.xml:642(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"char\"><returnvalue>char</returnvalue></link> *\n"
"cut_get_source_directory (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-helper.xml:644(para)
msgid "Gets the source directory name which is specified by command line."
msgstr "コマンドラインで指定されたソースディレクトリ名を返します。"

#: xml/cut-helper.xml:656(programlisting)
#, no-wrap
msgid "#  define CUT_RELATIVE_PATH NULL\n"
msgstr ""

#: xml/cut-helper.xml:658(para)
msgid ""
"Define this macro in a source code or build option (e.g. -DCUT_RELATIVE_PATH="
"\\\"\"sub/dir/\"\\\") if the source code is built as shared library and used "
"it as helper library of your test. If this path isn't set, you can't get "
"correct path from <link linkend=\"cut-trace\"><function>cut_trace()</"
"function></link> and <link linkend=\"cut-trace-with-info-expression"
"\"><function>cut_trace_with_info_expression()</function></link>."
msgstr ""
"もし、テスト用の補助ライブラリを共有ライブラリとして使っている場合は、補助ラ"
"イブラリのソースコード中またはビルドオプション（例: -DCUT_RELATIVE_PATH=\\"
"\"\"sub/dir/\"\\\"）でこのマクロを定義してください。もし、このパスが設定され"
"ていない場合は<link linkend=\"cut-trace\"><function>cut_trace()</function></"
"link>と<link linkend=\"cut-trace-with-info-expression"
"\"><function>cut_trace_with_info_expression()</function></link>で正しいパスが"
"得られません。"

#: xml/cut-helper.xml:664(para)
msgid "Here is an example structure for explain:"
msgstr "説明用のディレクト構成例です。"

#: xml/cut-helper.xml:689(para)
msgid ""
"In the above example structure, you need to define <link linkend=\"CUT-"
"RELATIVE-PATH:CAPS\"><literal>CUT_RELATIVE_PATH</literal></link> as \"lib\" "
"in test/lib/my-assertions.c because my-assertions.c is in lib/ directory "
"from source directory \"test\" specified by command line option --source-"
"directory."
msgstr ""
"上記の構成例では、test/lib/my-assertions.cでは<link linkend=\"CUT-RELATIVE-"
"PATH:CAPS\"><literal>CUT_RELATIVE_PATH</literal></link>を\"lib\"と定義しなけ"
"ればいけません。これは、:source-directoryコマンドラインオプションで指定した"
"\"test\"ソースディレクトリからみてlib/ディレクトリにmy-assertions.cがあるから"
"です。"

#: xml/cut-helper.xml:694(para)
msgid "Here are example code and build option:"
msgstr "コードとビルドオプションの例です。"

#: xml/cut-glib-compatible.xml:7(refentrytitle)
#: xml/cut-glib-compatible.xml:12(refname) xml/api-index-full.xml:459(link)
#: xml/api-index-full.xml:460(link) xml/api-index-full.xml:463(link)
#: xml/api-index-full.xml:464(link) xml/api-index-full.xml:465(link)
#: xml/api-index-full.xml:466(link) xml/api-index-full.xml:467(link)
#: xml/api-index-full.xml:468(link)
msgid "cut-glib-compatible"
msgstr ""

#: xml/cut-glib-compatible.xml:23(link) xml/cut-glib-compatible.xml:62(primary)
#: xml/api-index-full.xml:467(link)
msgid "G_PRIVATE_INIT"
msgstr ""

#: xml/cut-glib-compatible.xml:24(link) xml/cut-glib-compatible.xml:70(primary)
#: xml/api-index-full.xml:466(link)
msgid "g_private_get"
msgstr ""

#: xml/cut-glib-compatible.xml:25(link) xml/cut-glib-compatible.xml:77(primary)
#: xml/api-index-full.xml:468(link)
msgid "g_private_set"
msgstr ""

#: xml/cut-glib-compatible.xml:26(link) xml/cut-glib-compatible.xml:83(title)
#: xml/cut-glib-compatible.xml:84(primary) xml/api-index-full.xml:465(link)
msgid "g_mutex_new"
msgstr ""

#: xml/cut-glib-compatible.xml:27(link) xml/cut-glib-compatible.xml:91(primary)
#: xml/api-index-full.xml:464(link)
msgid "g_mutex_free"
msgstr ""

#: xml/cut-glib-compatible.xml:28(returnvalue)
msgid "GMutex"
msgstr ""

#: xml/cut-glib-compatible.xml:28(entry)
#, fuzzy
msgid "<link linkend=\"GMutex\"><placeholder-1/></link> *"
msgstr "<link linkend=\"gchar\"><type>gchar</type></link>の値。"

#: xml/cut-glib-compatible.xml:29(link) xml/cut-glib-compatible.xml:98(primary)
#: xml/api-index-full.xml:460(link)
msgid "cut_glib_compatible_mutex_new"
msgstr ""

#: xml/cut-glib-compatible.xml:31(link)
#: xml/cut-glib-compatible.xml:106(primary) xml/api-index-full.xml:459(link)
msgid "cut_glib_compatible_mutex_free"
msgstr ""

#: xml/cut-glib-compatible.xml:44(link) xml/cut-glib-compatible.xml:117(title)
#: xml/cut-glib-compatible.xml:118(primary) xml/api-index-full.xml:463(link)
msgid "GPrivate"
msgstr ""

#: xml/cut-glib-compatible.xml:61(title)
msgid "G_PRIVATE_INIT()"
msgstr ""

#: xml/cut-glib-compatible.xml:63(programlisting)
#, no-wrap
msgid "#  define G_PRIVATE_INIT(notify)    G_STATIC_PRIVATE_INIT\n"
msgstr ""

#: xml/cut-glib-compatible.xml:69(title)
msgid "g_private_get()"
msgstr ""

#: xml/cut-glib-compatible.xml:71(programlisting)
#, no-wrap
msgid "#define             g_private_get(key)"
msgstr ""

#: xml/cut-glib-compatible.xml:76(title)
msgid "g_private_set()"
msgstr ""

#: xml/cut-glib-compatible.xml:78(programlisting)
#, no-wrap
msgid "#define             g_private_set(key, value)"
msgstr ""

#: xml/cut-glib-compatible.xml:85(programlisting)
#, no-wrap
msgid "#define             g_mutex_new()"
msgstr ""

#: xml/cut-glib-compatible.xml:90(title)
msgid "g_mutex_free()"
msgstr ""

#: xml/cut-glib-compatible.xml:92(programlisting)
#, no-wrap
msgid "#define             g_mutex_free(mutex)"
msgstr ""

#: xml/cut-glib-compatible.xml:97(title)
msgid "cut_glib_compatible_mutex_new ()"
msgstr ""

#: xml/cut-glib-compatible.xml:99(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"GMutex\"><returnvalue>GMutex</returnvalue></link> *\n"
"cut_glib_compatible_mutex_new (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-glib-compatible.xml:105(title)
msgid "cut_glib_compatible_mutex_free ()"
msgstr ""

#: xml/cut-glib-compatible.xml:107(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_glib_compatible_mutex_free (<parameter><link linkend=\"GMutex\"><type>GMutex</type></link> *mutex</parameter>);"
msgstr ""

#: xml/cut-glib-compatible.xml:119(programlisting)
#, no-wrap
msgid "#  define GPrivate                  GStaticPrivate\n"
msgstr ""

#: xml/cut-features.xml:7(refentrytitle) xml/cut-features.xml:12(refname)
#: xml/api-index-full.xml:620(link) xml/api-index-full.xml:621(link)
#: xml/api-index-full.xml:622(link) xml/api-index-full.xml:623(link)
msgid "Available features"
msgstr "利用可能な機能一覧"

#: xml/cut-features.xml:13(refpurpose)
msgid "Available features in the installed Cutter."
msgstr "インストールされているCutterで利用可能な機能一覧。"

#: xml/cut-features.xml:23(link) xml/cut-features.xml:47(title)
#: xml/cut-features.xml:48(primary) xml/api-index-full.xml:623(link)
msgid "CUT_SUPPORT_GLIB"
msgstr ""

#: xml/cut-features.xml:24(link) xml/cut-features.xml:55(title)
#: xml/cut-features.xml:56(primary) xml/api-index-full.xml:621(link)
msgid "CUT_SUPPORT_GDK_PIXBUF"
msgstr ""

#: xml/cut-features.xml:25(link) xml/cut-features.xml:63(title)
#: xml/cut-features.xml:64(primary) xml/api-index-full.xml:622(link)
msgid "CUT_SUPPORT_GIO"
msgstr ""

#: xml/cut-features.xml:26(link) xml/cut-features.xml:70(title)
#: xml/cut-features.xml:71(primary) xml/api-index-full.xml:620(link)
msgid "CUT_SUPPORT_C99_STDINT_TYPES"
msgstr ""

#: xml/cut-features.xml:36(para)
msgid ""
"There are some macros to check a feature is available in the installed "
"Cutter."
msgstr ""
"インストールされているCutterで利用可能な機能かどうかを確認するマクロがありま"
"す。"

#: xml/cut-features.xml:49(programlisting)
#, no-wrap
msgid "#define CUT_SUPPORT_GLIB 1\n"
msgstr ""

#: xml/cut-features.xml:51(para)
msgid ""
"Shows GLib support is available. That is, we can use &lt;gcutter.h&gt;. It "
"is always defined."
msgstr ""
"GLibサポートが利用可能であることを示します。つまり、&lt;gcutter.h&gt;を使える"
"ということです。このマクロは常に定義されます。"

#: xml/cut-features.xml:57(programlisting)
#, no-wrap
msgid "#define CUT_SUPPORT_GDK_PIXBUF 1\n"
msgstr ""

#: xml/cut-features.xml:59(para)
msgid ""
"Shows GdkPixbuf support is available. That is, we can use &lt;gdkcutter-"
"pixbuf.h&gt;."
msgstr ""
"GdkPixbufサポートが利用可能であることを示します。つまり、&lt;gdkcutter-"
"pixbuf.h&gt;を使えるということです。"

#: xml/cut-features.xml:65(programlisting)
#, no-wrap
msgid "#define CUT_SUPPORT_GIO 1\n"
msgstr ""

#: xml/cut-features.xml:67(para)
msgid "Shows GIO support is available."
msgstr ""

#: xml/cut-features.xml:72(programlisting)
#, no-wrap
msgid "#define CUT_SUPPORT_C99_STDINT_TYPES 1\n"
msgstr ""

#: xml/cut-features.xml:74(para)
msgid ""
"Shows C99 stdint types support is available. That is, we can use assertions "
"that use C99 stdint types. e.g. <link linkend=\"cut-assert-equal-int-"
"least8\"><function>cut_assert_equal_int_least8()</function></link>."
msgstr ""
"C99の整数型のサポートが利用可能であることを示します。つまり、C99の整数型を利"
"用した検証を利用できるということです。例えば、<link linkend=\"cut-assert-"
"equal-int-least8\"><function>cut_assert_equal_int_least8()</function></link>"
"がC99の整数型を利用した検証です。"

#: xml/cut-experimental.xml:7(refentrytitle)
#: xml/cut-experimental.xml:12(refname) xml/api-index-full.xml:176(link)
#: xml/api-index-full.xml:177(link) xml/api-index-full.xml:178(link)
#: xml/api-index-full.xml:660(link) xml/api-index-0.8.xml:12(link)
#: xml/api-index-0.8.xml:13(link) xml/api-index-0.8.xml:14(link)
#: xml/api-index-0.8.xml:20(link)
msgid "Experimental"
msgstr "実験"

#: xml/cut-experimental.xml:13(refpurpose)
msgid "Experimental API."
msgstr "実験的なAPI"

#: xml/cut-experimental.xml:23(link) xml/cut-experimental.xml:42(title)
#: xml/cut-experimental.xml:43(primary) xml/api-index-full.xml:176(link)
#: xml/api-index-0.8.xml:12(link)
msgid "cut_fork"
msgstr ""

#: xml/cut-experimental.xml:24(link) xml/cut-experimental.xml:66(primary)
#: xml/api-index-full.xml:660(link) xml/api-index-0.8.xml:20(link)
msgid "cut_wait_process"
msgstr ""

#: xml/cut-experimental.xml:25(link) xml/cut-experimental.xml:103(primary)
#: xml/api-index-full.xml:178(link) xml/api-index-0.8.xml:14(link)
msgid "cut_fork_get_stdout_message"
msgstr ""

#: xml/cut-experimental.xml:26(link) xml/cut-experimental.xml:141(primary)
#: xml/api-index-full.xml:177(link) xml/api-index-0.8.xml:13(link)
msgid "cut_fork_get_stderr_message"
msgstr ""

#: xml/cut-experimental.xml:36(para)
msgid "This API may be changed in the future."
msgstr "将来、このAPIは変更されるかもしれません。"

#: xml/cut-experimental.xml:44(programlisting)
#, no-wrap
msgid "#define             cut_fork()"
msgstr ""

#: xml/cut-experimental.xml:45(para)
msgid "Makes child process."
msgstr "子プロセスを生成します。"

#: xml/cut-experimental.xml:62(para) xml/cut-experimental.xml:131(para)
#: xml/cut-experimental.xml:169(para)
msgid "Process ID."
msgstr "プロセスID。"

#: xml/cut-experimental.xml:65(title)
msgid "cut_wait_process()"
msgstr ""

#: xml/cut-experimental.xml:67(programlisting)
#, no-wrap
msgid "#define             cut_wait_process(pid, usec_timeout)"
msgstr ""

#: xml/cut-experimental.xml:68(para)
#, fuzzy
msgid "Waits a process specified by <parameter>pid</parameter> ."
msgstr "<parameter>pid</parameter>で指定されたプロセスの終了を待ちます。"

#: xml/cut-experimental.xml:94(para)
msgid "Process ID to wait."
msgstr "終了を待つプロセスのID。"

#: xml/cut-experimental.xml:96(para)
#, fuzzy
msgid "usec_timeout"
msgstr "タイムアウト。"

#: xml/cut-experimental.xml:97(para)
msgid "Timeout in usec."
msgstr "タイムアウトする時間。100万分の1秒単位で指定。"

#: xml/cut-experimental.xml:102(title)
msgid "cut_fork_get_stdout_message()"
msgstr ""

#: xml/cut-experimental.xml:104(programlisting)
#, no-wrap
msgid "#define             cut_fork_get_stdout_message(pid)"
msgstr ""

#: xml/cut-experimental.xml:105(para) xml/cut-experimental.xml:143(para)
#, fuzzy
msgid ""
"Reads a message from a process specified by <parameter>pid</parameter> ."
msgstr ""
"<parameter>pid</parameter>で指定されたプロセスからメッセージを読みます。"

#: xml/cut-experimental.xml:136(para)
#, fuzzy
msgid ""
"a message read from stdout of a process specified by <parameter>pid</"
"parameter> ."
msgstr ""
"<parameter>pid</parameter>で指定されたプロセスの標準出力から読み込まれたメッ"
"セージ。"

#: xml/cut-experimental.xml:140(title)
msgid "cut_fork_get_stderr_message()"
msgstr ""

#: xml/cut-experimental.xml:142(programlisting)
#, no-wrap
msgid "#define             cut_fork_get_stderr_message(pid)"
msgstr ""

#: xml/cut-experimental.xml:174(para)
#, fuzzy
msgid ""
"a message read from stderr of a process specified by <parameter>pid</"
"parameter> ."
msgstr ""
"<parameter>pid</parameter>で指定されたプロセスの標準エラー出力から読み込まれ"
"たメッセージ。"

#: xml/cut-console.xml:7(refentrytitle) xml/cut-console.xml:12(refname)
#: xml/api-index-full.xml:113(link) xml/api-index-full.xml:114(link)
#: xml/api-index-full.xml:115(link) xml/api-index-full.xml:116(link)
#: xml/api-index-full.xml:117(link) xml/api-index-full.xml:118(link)
#: xml/api-index-full.xml:119(link) xml/api-index-full.xml:120(link)
#: xml/api-index-full.xml:121(link) xml/api-index-full.xml:122(link)
#: xml/api-index-full.xml:123(link) xml/api-index-full.xml:124(link)
#: xml/api-index-full.xml:125(link) xml/api-index-full.xml:126(link)
#: xml/api-index-full.xml:140(link) xml/api-index-full.xml:141(link)
msgid "cut-console"
msgstr ""

#: xml/cut-console.xml:24(link) xml/cut-console.xml:70(primary)
#: xml/api-index-full.xml:140(link)
msgid "cut_console_guess_color_usability"
msgstr ""

#: xml/cut-console.xml:26(link) xml/cut-console.xml:78(primary)
#: xml/api-index-full.xml:141(link)
msgid "cut_console_parse_color_arg"
msgstr ""

#: xml/cut-console.xml:39(link) xml/cut-console.xml:92(title)
#: xml/cut-console.xml:93(primary) xml/api-index-full.xml:122(link)
msgid "CUT_CONSOLE_COLOR_RED"
msgstr ""

#: xml/cut-console.xml:40(link) xml/cut-console.xml:100(title)
#: xml/cut-console.xml:101(primary) xml/api-index-full.xml:123(link)
msgid "CUT_CONSOLE_COLOR_RED_BACK"
msgstr ""

#: xml/cut-console.xml:41(link) xml/cut-console.xml:108(title)
#: xml/cut-console.xml:109(primary) xml/api-index-full.xml:118(link)
msgid "CUT_CONSOLE_COLOR_GREEN"
msgstr ""

#: xml/cut-console.xml:42(link) xml/cut-console.xml:116(title)
#: xml/cut-console.xml:117(primary) xml/api-index-full.xml:119(link)
msgid "CUT_CONSOLE_COLOR_GREEN_BACK"
msgstr ""

#: xml/cut-console.xml:43(link) xml/cut-console.xml:124(title)
#: xml/cut-console.xml:125(primary) xml/api-index-full.xml:126(link)
msgid "CUT_CONSOLE_COLOR_YELLOW"
msgstr ""

#: xml/cut-console.xml:44(link) xml/cut-console.xml:132(title)
#: xml/cut-console.xml:133(primary) xml/api-index-full.xml:114(link)
msgid "CUT_CONSOLE_COLOR_BLUE"
msgstr ""

#: xml/cut-console.xml:45(link) xml/cut-console.xml:140(title)
#: xml/cut-console.xml:141(primary) xml/api-index-full.xml:115(link)
msgid "CUT_CONSOLE_COLOR_BLUE_BACK"
msgstr ""

#: xml/cut-console.xml:46(link) xml/cut-console.xml:148(title)
#: xml/cut-console.xml:149(primary) xml/api-index-full.xml:120(link)
msgid "CUT_CONSOLE_COLOR_MAGENTA"
msgstr ""

#: xml/cut-console.xml:47(link) xml/cut-console.xml:156(title)
#: xml/cut-console.xml:157(primary) xml/api-index-full.xml:116(link)
msgid "CUT_CONSOLE_COLOR_CYAN"
msgstr ""

#: xml/cut-console.xml:48(link) xml/cut-console.xml:164(title)
#: xml/cut-console.xml:165(primary) xml/api-index-full.xml:117(link)
msgid "CUT_CONSOLE_COLOR_CYAN_BACK"
msgstr ""

#: xml/cut-console.xml:49(link) xml/cut-console.xml:172(title)
#: xml/cut-console.xml:173(primary) xml/api-index-full.xml:124(link)
msgid "CUT_CONSOLE_COLOR_WHITE"
msgstr ""

#: xml/cut-console.xml:50(link) xml/cut-console.xml:180(title)
#: xml/cut-console.xml:181(primary) xml/api-index-full.xml:125(link)
msgid "CUT_CONSOLE_COLOR_WHITE_BACK"
msgstr ""

#: xml/cut-console.xml:51(link) xml/cut-console.xml:188(title)
#: xml/cut-console.xml:189(primary) xml/api-index-full.xml:113(link)
msgid "CUT_CONSOLE_COLOR_BLACK_BACK"
msgstr ""

#: xml/cut-console.xml:52(link) xml/cut-console.xml:196(title)
#: xml/cut-console.xml:197(primary) xml/api-index-full.xml:121(link)
msgid "CUT_CONSOLE_COLOR_NORMAL"
msgstr ""

#: xml/cut-console.xml:69(title)
msgid "cut_console_guess_color_usability ()"
msgstr ""

#: xml/cut-console.xml:71(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"cut_console_guess_color_usability (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-console.xml:77(title)
msgid "cut_console_parse_color_arg ()"
msgstr ""

#: xml/cut-console.xml:79(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"gboolean\"><returnvalue>gboolean</returnvalue></link>\n"
"cut_console_parse_color_arg (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *option_name</parameter>,\n"
"                             <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *value</parameter>,\n"
"                             <parameter><link linkend=\"gboolean\"><type>gboolean</type></link> *use_color</parameter>,\n"
"                             <parameter><link linkend=\"GError\"><type>GError</type></link> **error</parameter>);"
msgstr ""

#: xml/cut-console.xml:94(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_RED \"\\033[01;31m\"\n"
msgstr ""

#: xml/cut-console.xml:102(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_RED_BACK \"\\033[41m\"\n"
msgstr ""

#: xml/cut-console.xml:110(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_GREEN \"\\033[01;32m\"\n"
msgstr ""

#: xml/cut-console.xml:118(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_GREEN_BACK \"\\033[01;42m\"\n"
msgstr ""

#: xml/cut-console.xml:126(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_YELLOW \"\\033[01;33m\"\n"
msgstr ""

#: xml/cut-console.xml:134(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_BLUE \"\\033[01;34m\"\n"
msgstr ""

#: xml/cut-console.xml:142(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_BLUE_BACK \"\\033[01;44m\"\n"
msgstr ""

#: xml/cut-console.xml:150(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_MAGENTA \"\\033[01;35m\"\n"
msgstr ""

#: xml/cut-console.xml:158(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_CYAN \"\\033[01;36m\"\n"
msgstr ""

#: xml/cut-console.xml:166(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_CYAN_BACK \"\\033[01;46m\"\n"
msgstr ""

#: xml/cut-console.xml:174(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_WHITE \"\\033[01;37m\"\n"
msgstr ""

#: xml/cut-console.xml:182(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_WHITE_BACK \"\\033[01;47m\"\n"
msgstr ""

#: xml/cut-console.xml:190(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_BLACK_BACK \"\\033[01;40m\"\n"
msgstr ""

#: xml/cut-console.xml:198(programlisting)
#, no-wrap
msgid "#define CUT_CONSOLE_COLOR_NORMAL \"\\033[00m\"\n"
msgstr ""

#: xml/cut-console-diff-writer.xml:7(refentrytitle)
#: xml/cut-console-diff-writer.xml:12(refname) xml/api-index-full.xml:127(link)
#: xml/api-index-full.xml:128(link) xml/api-index-full.xml:129(link)
#: xml/api-index-full.xml:130(link) xml/api-index-full.xml:131(link)
#: xml/api-index-full.xml:132(link) xml/api-index-full.xml:133(link)
#: xml/api-index-full.xml:134(link) xml/api-index-full.xml:135(link)
#: xml/api-index-full.xml:136(link) xml/api-index-full.xml:137(link)
#: xml/api-index-full.xml:138(link) xml/api-index-full.xml:139(link)
msgid "CutConsoleDiffWriter"
msgstr ""

#: xml/cut-console-diff-writer.xml:24(link)
#: xml/cut-console-diff-writer.xml:66(primary) xml/api-index-full.xml:133(link)
msgid "cut_console_diff_writer_new"
msgstr ""

#: xml/cut-console-diff-writer.xml:26(link)
#: xml/cut-console-diff-writer.xml:74(primary) xml/api-index-full.xml:135(link)
msgid "cut_console_diff_writer_set_deleted_mark_color"
msgstr ""

#: xml/cut-console-diff-writer.xml:28(link)
#: xml/cut-console-diff-writer.xml:84(primary) xml/api-index-full.xml:128(link)
msgid "cut_console_diff_writer_get_deleted_mark_color"
msgstr ""

#: xml/cut-console-diff-writer.xml:30(link)
#: xml/cut-console-diff-writer.xml:93(primary) xml/api-index-full.xml:138(link)
msgid "cut_console_diff_writer_set_inserted_mark_color"
msgstr ""

#: xml/cut-console-diff-writer.xml:32(link)
#: xml/cut-console-diff-writer.xml:103(primary)
#: xml/api-index-full.xml:131(link)
msgid "cut_console_diff_writer_get_inserted_mark_color"
msgstr ""

#: xml/cut-console-diff-writer.xml:34(link)
#: xml/cut-console-diff-writer.xml:112(primary)
#: xml/api-index-full.xml:134(link)
msgid "cut_console_diff_writer_set_deleted_line_color"
msgstr ""

#: xml/cut-console-diff-writer.xml:36(link)
#: xml/cut-console-diff-writer.xml:122(primary)
#: xml/api-index-full.xml:127(link)
msgid "cut_console_diff_writer_get_deleted_line_color"
msgstr ""

#: xml/cut-console-diff-writer.xml:38(link)
#: xml/cut-console-diff-writer.xml:131(primary)
#: xml/api-index-full.xml:137(link)
msgid "cut_console_diff_writer_set_inserted_line_color"
msgstr ""

#: xml/cut-console-diff-writer.xml:40(link)
#: xml/cut-console-diff-writer.xml:141(primary)
#: xml/api-index-full.xml:130(link)
msgid "cut_console_diff_writer_get_inserted_line_color"
msgstr ""

#: xml/cut-console-diff-writer.xml:42(link)
#: xml/cut-console-diff-writer.xml:150(primary)
#: xml/api-index-full.xml:136(link)
msgid "cut_console_diff_writer_set_deleted_segment_color"
msgstr ""

#: xml/cut-console-diff-writer.xml:44(link)
#: xml/cut-console-diff-writer.xml:160(primary)
#: xml/api-index-full.xml:129(link)
msgid "cut_console_diff_writer_get_deleted_segment_color"
msgstr ""

#: xml/cut-console-diff-writer.xml:46(link)
#: xml/cut-console-diff-writer.xml:169(primary)
#: xml/api-index-full.xml:139(link)
msgid "cut_console_diff_writer_set_inserted_segment_color"
msgstr ""

#: xml/cut-console-diff-writer.xml:48(link)
#: xml/cut-console-diff-writer.xml:179(primary)
#: xml/api-index-full.xml:132(link)
msgid "cut_console_diff_writer_get_inserted_segment_color"
msgstr ""

#: xml/cut-console-diff-writer.xml:65(title)
msgid "cut_console_diff_writer_new ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:67(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CutDiffWriter\"><returnvalue>CutDiffWriter</returnvalue></link> *\n"
"cut_console_diff_writer_new (<parameter><link linkend=\"gboolean\"><type>gboolean</type></link> use_color</parameter>);"
msgstr ""

#: xml/cut-console-diff-writer.xml:73(title)
msgid "cut_console_diff_writer_set_deleted_mark_color ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:75(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_console_diff_writer_set_deleted_mark_color\n"
"                               (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *color</parameter>);"
msgstr ""

#: xml/cut-console-diff-writer.xml:83(title)
msgid "cut_console_diff_writer_get_deleted_mark_color ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:85(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"cut_console_diff_writer_get_deleted_mark_color\n"
"                               (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>);"
msgstr ""

#: xml/cut-console-diff-writer.xml:92(title)
msgid "cut_console_diff_writer_set_inserted_mark_color ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:94(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_console_diff_writer_set_inserted_mark_color\n"
"                               (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *color</parameter>);"
msgstr ""

#: xml/cut-console-diff-writer.xml:102(title)
msgid "cut_console_diff_writer_get_inserted_mark_color ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:104(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"cut_console_diff_writer_get_inserted_mark_color\n"
"                               (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>);"
msgstr ""

#: xml/cut-console-diff-writer.xml:111(title)
msgid "cut_console_diff_writer_set_deleted_line_color ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:113(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_console_diff_writer_set_deleted_line_color\n"
"                               (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *color</parameter>);"
msgstr ""

#: xml/cut-console-diff-writer.xml:121(title)
msgid "cut_console_diff_writer_get_deleted_line_color ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:123(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"cut_console_diff_writer_get_deleted_line_color\n"
"                               (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>);"
msgstr ""

#: xml/cut-console-diff-writer.xml:130(title)
msgid "cut_console_diff_writer_set_inserted_line_color ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:132(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_console_diff_writer_set_inserted_line_color\n"
"                               (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *color</parameter>);"
msgstr ""

#: xml/cut-console-diff-writer.xml:140(title)
msgid "cut_console_diff_writer_get_inserted_line_color ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:142(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"cut_console_diff_writer_get_inserted_line_color\n"
"                               (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>);"
msgstr ""

#: xml/cut-console-diff-writer.xml:149(title)
msgid "cut_console_diff_writer_set_deleted_segment_color ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:151(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_console_diff_writer_set_deleted_segment_color\n"
"                               (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *color</parameter>);"
msgstr ""

#: xml/cut-console-diff-writer.xml:159(title)
msgid "cut_console_diff_writer_get_deleted_segment_color ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:161(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"cut_console_diff_writer_get_deleted_segment_color\n"
"                               (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>);"
msgstr ""

#: xml/cut-console-diff-writer.xml:168(title)
msgid "cut_console_diff_writer_set_inserted_segment_color ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:170(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_console_diff_writer_set_inserted_segment_color\n"
"                               (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>,\n"
"                                <parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *color</parameter>);"
msgstr ""

#: xml/cut-console-diff-writer.xml:178(title)
msgid "cut_console_diff_writer_get_inserted_segment_color ()"
msgstr ""

#: xml/cut-console-diff-writer.xml:180(programlisting)
#, no-wrap
msgid ""
"const <link linkend=\"gchar\"><returnvalue>gchar</returnvalue></link> *\n"
"cut_console_diff_writer_get_inserted_segment_color\n"
"                               (<parameter><link linkend=\"CutDiffWriter\"><type>CutDiffWriter</type></link> *writer</parameter>);"
msgstr ""

#: xml/cut-config.xml:7(refentrytitle) xml/cut-config.xml:12(refname)
#: xml/api-index-full.xml:471(link) xml/api-index-full.xml:472(link)
#: xml/api-index-full.xml:473(link) xml/api-index-full.xml:474(link)
msgid "cut-config"
msgstr ""

#: xml/cut-config.xml:23(link) xml/cut-config.xml:47(title)
#: xml/cut-config.xml:48(primary) xml/api-index-full.xml:472(link)
msgid "CUT_HAVE_STDINT_H"
msgstr ""

#: xml/cut-config.xml:24(link) xml/cut-config.xml:55(title)
#: xml/cut-config.xml:56(primary) xml/api-index-full.xml:471(link)
msgid "CUT_HAVE_INTTYPES_H"
msgstr ""

#: xml/cut-config.xml:25(link) xml/cut-config.xml:63(title)
#: xml/cut-config.xml:64(primary) xml/api-index-full.xml:473(link)
msgid "CUT_HAVE_SYS_SOCKET_H"
msgstr ""

#: xml/cut-config.xml:26(link) xml/cut-config.xml:71(title)
#: xml/cut-config.xml:72(primary) xml/api-index-full.xml:474(link)
msgid "CUT_HAVE_SYS_UN_H"
msgstr ""

#: xml/cut-config.xml:49(programlisting)
#, no-wrap
msgid "#define CUT_HAVE_STDINT_H 1\n"
msgstr ""

#: xml/cut-config.xml:57(programlisting)
#, no-wrap
msgid "#define CUT_HAVE_INTTYPES_H 1\n"
msgstr ""

#: xml/cut-config.xml:65(programlisting)
#, no-wrap
msgid "#define CUT_HAVE_SYS_SOCKET_H 1\n"
msgstr ""

#: xml/cut-config.xml:73(programlisting)
#, no-wrap
msgid "#define CUT_HAVE_SYS_UN_H 1\n"
msgstr ""

#: xml/cut-assertions.xml:13(refpurpose)
msgid "Checks that your program works as you expect."
msgstr "あなたのプログラムが期待通りに動作しているかを検証します。"

#: xml/cut-assertions.xml:24(link) xml/cut-assertions.xml:185(primary)
#: xml/api-index-full.xml:10(link)
msgid "cut_assert"
msgstr ""

#: xml/cut-assertions.xml:26(link) xml/cut-assertions.xml:222(primary)
#: xml/api-index-full.xml:102(link) xml/api-index-0.9.xml:10(link)
msgid "cut_assert_true"
msgstr ""

#: xml/cut-assertions.xml:28(link) xml/cut-assertions.xml:246(primary)
#: xml/api-index-full.xml:55(link) xml/api-index-0.9.xml:8(link)
msgid "cut_assert_false"
msgstr ""

#: xml/cut-assertions.xml:30(link) xml/cut-assertions.xml:270(primary)
#: xml/api-index-full.xml:12(link) xml/api-index-1.0.7.xml:7(link)
msgid "cut_assert_equal_boolean"
msgstr ""

#: xml/cut-assertions.xml:32(link) xml/cut-assertions.xml:310(primary)
#: xml/api-index-full.xml:60(link) xml/api-index-1.0.7.xml:9(link)
msgid "cut_assert_not_equal_boolean"
msgstr ""

#: xml/cut-assertions.xml:34(link) xml/cut-assertions.xml:350(primary)
#: xml/api-index-full.xml:92(link)
msgid "cut_assert_null"
msgstr ""

#: xml/cut-assertions.xml:36(link) xml/cut-assertions.xml:374(primary)
#: xml/api-index-full.xml:93(link) xml/api-index-0.3.xml:8(link)
msgid "cut_assert_null_string"
msgstr ""

#: xml/cut-assertions.xml:38(link) xml/cut-assertions.xml:398(primary)
#: xml/api-index-full.xml:91(link)
msgid "cut_assert_not_null"
msgstr ""

#: xml/cut-assertions.xml:40(link) xml/cut-assertions.xml:422(primary)
#: xml/api-index-full.xml:21(link)
msgid "cut_assert_equal_int"
msgstr ""

#: xml/cut-assertions.xml:42(link) xml/cut-assertions.xml:451(primary)
#: xml/api-index-full.xml:64(link) xml/api-index-1.0.7.xml:11(link)
msgid "cut_assert_not_equal_int"
msgstr ""

#: xml/cut-assertions.xml:43(link) xml/cut-assertions.xml:480(primary)
#: xml/api-index-full.xml:31(link) xml/api-index-1.1.0.xml:16(link)
msgid "cut_assert_equal_int_least8"
msgstr ""

#: xml/cut-assertions.xml:44(link) xml/cut-assertions.xml:508(primary)
#: xml/api-index-full.xml:74(link) xml/api-index-1.1.0.xml:36(link)
msgid "cut_assert_not_equal_int_least8"
msgstr ""

#: xml/cut-assertions.xml:45(link) xml/cut-assertions.xml:536(primary)
#: xml/api-index-full.xml:28(link) xml/api-index-1.1.0.xml:13(link)
msgid "cut_assert_equal_int_least16"
msgstr ""

#: xml/cut-assertions.xml:46(link) xml/cut-assertions.xml:564(primary)
#: xml/api-index-full.xml:71(link) xml/api-index-1.1.0.xml:33(link)
msgid "cut_assert_not_equal_int_least16"
msgstr ""

#: xml/cut-assertions.xml:47(link) xml/cut-assertions.xml:592(primary)
#: xml/api-index-full.xml:29(link) xml/api-index-1.1.0.xml:14(link)
msgid "cut_assert_equal_int_least32"
msgstr ""

#: xml/cut-assertions.xml:48(link) xml/cut-assertions.xml:620(primary)
#: xml/api-index-full.xml:72(link) xml/api-index-1.1.0.xml:34(link)
msgid "cut_assert_not_equal_int_least32"
msgstr ""

#: xml/cut-assertions.xml:49(link) xml/cut-assertions.xml:648(primary)
#: xml/api-index-full.xml:30(link) xml/api-index-1.1.0.xml:15(link)
msgid "cut_assert_equal_int_least64"
msgstr ""

#: xml/cut-assertions.xml:50(link) xml/cut-assertions.xml:676(primary)
#: xml/api-index-full.xml:73(link) xml/api-index-1.1.0.xml:35(link)
msgid "cut_assert_not_equal_int_least64"
msgstr ""

#: xml/cut-assertions.xml:51(link) xml/cut-assertions.xml:704(primary)
#: xml/api-index-full.xml:27(link) xml/api-index-1.1.0.xml:12(link)
msgid "cut_assert_equal_int_fast8"
msgstr ""

#: xml/cut-assertions.xml:52(link) xml/cut-assertions.xml:732(primary)
#: xml/api-index-full.xml:70(link) xml/api-index-1.1.0.xml:32(link)
msgid "cut_assert_not_equal_int_fast8"
msgstr ""

#: xml/cut-assertions.xml:53(link) xml/cut-assertions.xml:760(primary)
#: xml/api-index-full.xml:24(link) xml/api-index-1.1.0.xml:9(link)
msgid "cut_assert_equal_int_fast16"
msgstr ""

#: xml/cut-assertions.xml:54(link) xml/cut-assertions.xml:788(primary)
#: xml/api-index-full.xml:67(link) xml/api-index-1.1.0.xml:29(link)
msgid "cut_assert_not_equal_int_fast16"
msgstr ""

#: xml/cut-assertions.xml:55(link) xml/cut-assertions.xml:816(primary)
#: xml/api-index-full.xml:25(link) xml/api-index-1.1.0.xml:10(link)
msgid "cut_assert_equal_int_fast32"
msgstr ""

#: xml/cut-assertions.xml:56(link) xml/cut-assertions.xml:844(primary)
#: xml/api-index-full.xml:68(link) xml/api-index-1.1.0.xml:30(link)
msgid "cut_assert_not_equal_int_fast32"
msgstr ""

#: xml/cut-assertions.xml:57(link) xml/cut-assertions.xml:872(primary)
#: xml/api-index-full.xml:26(link) xml/api-index-1.1.0.xml:11(link)
msgid "cut_assert_equal_int_fast64"
msgstr ""

#: xml/cut-assertions.xml:58(link) xml/cut-assertions.xml:900(primary)
#: xml/api-index-full.xml:69(link) xml/api-index-1.1.0.xml:31(link)
msgid "cut_assert_not_equal_int_fast64"
msgstr ""

#: xml/cut-assertions.xml:59(link) xml/cut-assertions.xml:928(primary)
#: xml/api-index-full.xml:23(link) xml/api-index-1.1.0.xml:8(link)
msgid "cut_assert_equal_intptr"
msgstr ""

#: xml/cut-assertions.xml:60(link) xml/cut-assertions.xml:956(primary)
#: xml/api-index-full.xml:66(link) xml/api-index-1.1.0.xml:28(link)
msgid "cut_assert_not_equal_intptr"
msgstr ""

#: xml/cut-assertions.xml:61(link) xml/cut-assertions.xml:984(primary)
#: xml/api-index-full.xml:22(link) xml/api-index-1.1.0.xml:7(link)
msgid "cut_assert_equal_intmax"
msgstr ""

#: xml/cut-assertions.xml:62(link) xml/cut-assertions.xml:1012(primary)
#: xml/api-index-full.xml:65(link) xml/api-index-1.1.0.xml:27(link)
msgid "cut_assert_not_equal_intmax"
msgstr ""

#: xml/cut-assertions.xml:64(link) xml/cut-assertions.xml:1040(primary)
#: xml/api-index-full.xml:42(link)
msgid "cut_assert_equal_uint"
msgstr ""

#: xml/cut-assertions.xml:66(link) xml/cut-assertions.xml:1069(primary)
#: xml/api-index-full.xml:79(link) xml/api-index-1.0.7.xml:16(link)
msgid "cut_assert_not_equal_uint"
msgstr ""

#: xml/cut-assertions.xml:67(link) xml/cut-assertions.xml:1098(primary)
#: xml/api-index-full.xml:52(link) xml/api-index-1.1.0.xml:26(link)
msgid "cut_assert_equal_uint_least8"
msgstr ""

#: xml/cut-assertions.xml:68(link) xml/cut-assertions.xml:1126(primary)
#: xml/api-index-full.xml:89(link) xml/api-index-1.1.0.xml:46(link)
msgid "cut_assert_not_equal_uint_least8"
msgstr ""

#: xml/cut-assertions.xml:69(link) xml/cut-assertions.xml:1154(primary)
#: xml/api-index-full.xml:49(link) xml/api-index-1.1.0.xml:23(link)
msgid "cut_assert_equal_uint_least16"
msgstr ""

#: xml/cut-assertions.xml:70(link) xml/cut-assertions.xml:1182(primary)
#: xml/api-index-full.xml:86(link) xml/api-index-1.1.0.xml:43(link)
msgid "cut_assert_not_equal_uint_least16"
msgstr ""

#: xml/cut-assertions.xml:71(link) xml/cut-assertions.xml:1210(primary)
#: xml/api-index-full.xml:50(link) xml/api-index-1.1.0.xml:24(link)
msgid "cut_assert_equal_uint_least32"
msgstr ""

#: xml/cut-assertions.xml:72(link) xml/cut-assertions.xml:1238(primary)
#: xml/api-index-full.xml:87(link) xml/api-index-1.1.0.xml:44(link)
msgid "cut_assert_not_equal_uint_least32"
msgstr ""

#: xml/cut-assertions.xml:73(link) xml/cut-assertions.xml:1266(primary)
#: xml/api-index-full.xml:51(link) xml/api-index-1.1.0.xml:25(link)
msgid "cut_assert_equal_uint_least64"
msgstr ""

#: xml/cut-assertions.xml:74(link) xml/cut-assertions.xml:1294(primary)
#: xml/api-index-full.xml:88(link) xml/api-index-1.1.0.xml:45(link)
msgid "cut_assert_not_equal_uint_least64"
msgstr ""

#: xml/cut-assertions.xml:75(link) xml/cut-assertions.xml:1322(primary)
#: xml/api-index-full.xml:48(link) xml/api-index-1.1.0.xml:22(link)
msgid "cut_assert_equal_uint_fast8"
msgstr ""

#: xml/cut-assertions.xml:76(link) xml/cut-assertions.xml:1350(primary)
#: xml/api-index-full.xml:85(link) xml/api-index-1.1.0.xml:42(link)
msgid "cut_assert_not_equal_uint_fast8"
msgstr ""

#: xml/cut-assertions.xml:77(link) xml/cut-assertions.xml:1378(primary)
#: xml/api-index-full.xml:45(link) xml/api-index-1.1.0.xml:19(link)
msgid "cut_assert_equal_uint_fast16"
msgstr ""

#: xml/cut-assertions.xml:78(link) xml/cut-assertions.xml:1406(primary)
#: xml/api-index-full.xml:82(link) xml/api-index-1.1.0.xml:39(link)
msgid "cut_assert_not_equal_uint_fast16"
msgstr ""

#: xml/cut-assertions.xml:79(link) xml/cut-assertions.xml:1434(primary)
#: xml/api-index-full.xml:46(link) xml/api-index-1.1.0.xml:20(link)
msgid "cut_assert_equal_uint_fast32"
msgstr ""

#: xml/cut-assertions.xml:80(link) xml/cut-assertions.xml:1462(primary)
#: xml/api-index-full.xml:83(link) xml/api-index-1.1.0.xml:40(link)
msgid "cut_assert_not_equal_uint_fast32"
msgstr ""

#: xml/cut-assertions.xml:81(link) xml/cut-assertions.xml:1490(primary)
#: xml/api-index-full.xml:47(link) xml/api-index-1.1.0.xml:21(link)
msgid "cut_assert_equal_uint_fast64"
msgstr ""

#: xml/cut-assertions.xml:82(link) xml/cut-assertions.xml:1518(primary)
#: xml/api-index-full.xml:84(link) xml/api-index-1.1.0.xml:41(link)
msgid "cut_assert_not_equal_uint_fast64"
msgstr ""

#: xml/cut-assertions.xml:83(link) xml/cut-assertions.xml:1546(primary)
#: xml/api-index-full.xml:44(link) xml/api-index-1.1.0.xml:18(link)
msgid "cut_assert_equal_uintptr"
msgstr ""

#: xml/cut-assertions.xml:84(link) xml/cut-assertions.xml:1574(primary)
#: xml/api-index-full.xml:81(link) xml/api-index-1.1.0.xml:38(link)
msgid "cut_assert_not_equal_uintptr"
msgstr ""

#: xml/cut-assertions.xml:85(link) xml/cut-assertions.xml:1602(primary)
#: xml/api-index-full.xml:43(link) xml/api-index-1.1.0.xml:17(link)
msgid "cut_assert_equal_uintmax"
msgstr ""

#: xml/cut-assertions.xml:86(link) xml/cut-assertions.xml:1630(primary)
#: xml/api-index-full.xml:80(link) xml/api-index-1.1.0.xml:37(link)
msgid "cut_assert_not_equal_uintmax"
msgstr ""

#: xml/cut-assertions.xml:88(link) xml/cut-assertions.xml:1658(primary)
#: xml/api-index-full.xml:34(link) xml/api-index-1.0.6.xml:7(link)
msgid "cut_assert_equal_size"
msgstr ""

#: xml/cut-assertions.xml:90(link) xml/cut-assertions.xml:1687(primary)
#: xml/api-index-full.xml:76(link) xml/api-index-1.0.7.xml:13(link)
msgid "cut_assert_not_equal_size"
msgstr ""

#: xml/cut-assertions.xml:92(link) xml/cut-assertions.xml:1716(primary)
#: xml/api-index-full.xml:14(link)
msgid "cut_assert_equal_double"
msgstr ""

#: xml/cut-assertions.xml:94(link) xml/cut-assertions.xml:1752(primary)
#: xml/api-index-full.xml:62(link) xml/api-index-1.0.7.xml:10(link)
msgid "cut_assert_not_equal_double"
msgstr ""

#: xml/cut-assertions.xml:95(link) xml/cut-assertions.xml:1789(primary)
#: xml/api-index-full.xml:13(link) xml/api-index-1.1.3.xml:7(link)
msgid "cut_assert_equal_char"
msgstr ""

#: xml/cut-assertions.xml:96(link) xml/cut-assertions.xml:1821(primary)
#: xml/api-index-full.xml:61(link) xml/api-index-1.1.3.xml:8(link)
msgid "cut_assert_not_equal_char"
msgstr ""

#: xml/cut-assertions.xml:98(link) xml/cut-assertions.xml:1853(primary)
#: xml/api-index-full.xml:36(link)
msgid "cut_assert_equal_string"
msgstr ""

#: xml/cut-assertions.xml:100(link) xml/cut-assertions.xml:1894(primary)
#: xml/api-index-full.xml:77(link) xml/api-index-1.0.7.xml:14(link)
msgid "cut_assert_not_equal_string"
msgstr ""

#: xml/cut-assertions.xml:102(link) xml/cut-assertions.xml:1935(primary)
#: xml/api-index-full.xml:40(link) xml/api-index-0.3.xml:7(link)
msgid "cut_assert_equal_string_with_free"
msgstr ""

#: xml/cut-assertions.xml:104(link) xml/cut-assertions.xml:1968(primary)
#: xml/api-index-full.xml:39(link) xml/api-index-deprecated.xml:13(link)
msgid "cut_assert_equal_string_or_null"
msgstr ""

#: xml/cut-assertions.xml:106(link) xml/cut-assertions.xml:1996(primary)
#: xml/api-index-full.xml:41(link) xml/api-index-1.0.7.xml:8(link)
msgid "cut_assert_equal_substring"
msgstr ""

#: xml/cut-assertions.xml:108(link) xml/cut-assertions.xml:2045(primary)
#: xml/api-index-full.xml:78(link) xml/api-index-1.0.7.xml:15(link)
msgid "cut_assert_not_equal_substring"
msgstr ""

#: xml/cut-assertions.xml:110(link) xml/cut-assertions.xml:2092(primary)
#: xml/api-index-full.xml:32(link)
msgid "cut_assert_equal_memory"
msgstr ""

#: xml/cut-assertions.xml:112(link) xml/cut-assertions.xml:2135(primary)
#: xml/api-index-full.xml:75(link) xml/api-index-1.0.7.xml:12(link)
msgid "cut_assert_not_equal_memory"
msgstr ""

#: xml/cut-assertions.xml:114(link) xml/cut-assertions.xml:2178(primary)
#: xml/api-index-full.xml:37(link)
msgid "cut_assert_equal_string_array"
msgstr ""

#: xml/cut-assertions.xml:116(link) xml/cut-assertions.xml:2208(primary)
#: xml/api-index-full.xml:38(link) xml/api-index-0.9.xml:7(link)
msgid "cut_assert_equal_string_array_with_free"
msgstr ""

#: xml/cut-assertions.xml:117(link) xml/cut-assertions.xml:2239(primary)
#: xml/api-index-full.xml:94(link)
msgid "cut_assert_operator"
msgstr ""

#: xml/cut-assertions.xml:118(link) xml/cut-assertions.xml:2274(primary)
#: xml/api-index-full.xml:96(link)
msgid "cut_assert_operator_int"
msgstr ""

#: xml/cut-assertions.xml:119(link) xml/cut-assertions.xml:2309(primary)
#: xml/api-index-full.xml:98(link) xml/api-index-1.0.5.xml:9(link)
msgid "cut_assert_operator_uint"
msgstr ""

#: xml/cut-assertions.xml:120(link) xml/cut-assertions.xml:2344(primary)
#: xml/api-index-full.xml:97(link) xml/api-index-1.0.5.xml:8(link)
msgid "cut_assert_operator_size"
msgstr ""

#: xml/cut-assertions.xml:121(link) xml/cut-assertions.xml:2379(primary)
#: xml/api-index-full.xml:95(link) xml/api-index-1.0.5.xml:7(link)
msgid "cut_assert_operator_double"
msgstr ""

#: xml/cut-assertions.xml:122(link) xml/cut-assertions.xml:2414(primary)
#: xml/api-index-full.xml:11(link)
msgid "cut_assert_equal"
msgstr ""

#: xml/cut-assertions.xml:124(link) xml/cut-assertions.xml:2451(primary)
#: xml/api-index-full.xml:53(link) xml/api-index-0.8.xml:9(link)
msgid "cut_assert_errno"
msgstr ""

#: xml/cut-assertions.xml:126(link) xml/cut-assertions.xml:2476(primary)
#: xml/api-index-full.xml:56(link) xml/api-index-deprecated.xml:14(link)
#: xml/api-index-0.9.xml:9(link)
msgid "cut_assert_file_exist"
msgstr ""

#: xml/cut-assertions.xml:128(link) xml/cut-assertions.xml:2508(primary)
#: xml/api-index-full.xml:99(link) xml/api-index-deprecated.xml:16(link)
#: xml/api-index-1.0.2.xml:8(link)
msgid "cut_assert_path_exist"
msgstr ""

#: xml/cut-assertions.xml:130(link) xml/cut-assertions.xml:2540(primary)
#: xml/api-index-full.xml:54(link) xml/api-index-1.1.5.xml:7(link)
msgid "cut_assert_exist_path"
msgstr ""

#: xml/cut-assertions.xml:132(link) xml/cut-assertions.xml:2570(primary)
#: xml/api-index-full.xml:100(link) xml/api-index-deprecated.xml:17(link)
#: xml/api-index-1.0.2.xml:9(link)
msgid "cut_assert_path_not_exist"
msgstr ""

#: xml/cut-assertions.xml:134(link) xml/cut-assertions.xml:2602(primary)
#: xml/api-index-full.xml:90(link) xml/api-index-1.1.5.xml:8(link)
msgid "cut_assert_not_exist_path"
msgstr ""

#: xml/cut-assertions.xml:136(link) xml/cut-assertions.xml:2632(primary)
#: xml/api-index-full.xml:58(link) xml/api-index-1.0.xml:9(link)
msgid "cut_assert_match"
msgstr ""

#: xml/cut-assertions.xml:138(link) xml/cut-assertions.xml:2667(primary)
#: xml/api-index-full.xml:59(link) xml/api-index-1.0.xml:10(link)
msgid "cut_assert_match_with_free"
msgstr ""

#: xml/cut-assertions.xml:140(link) xml/cut-assertions.xml:2697(primary)
#: xml/api-index-full.xml:33(link) xml/api-index-1.0.xml:7(link)
msgid "cut_assert_equal_pointer"
msgstr ""

#: xml/cut-assertions.xml:142(link) xml/cut-assertions.xml:2726(primary)
#: xml/api-index-full.xml:16(link) xml/api-index-1.0.2.xml:7(link)
msgid "cut_assert_equal_fixture_data_string"
msgstr ""

#: xml/cut-assertions.xml:143(link) xml/cut-assertions.xml:2755(primary)
#: xml/api-index-full.xml:35(link) xml/api-index-1.1.1.xml:7(link)
msgid "cut_assert_equal_sockaddr"
msgstr ""

#: xml/cut-assertions.xml:144(link) xml/cut-assertions.xml:2782(primary)
#: xml/api-index-full.xml:15(link) xml/api-index-1.1.4.xml:7(link)
msgid "cut_assert_equal_file_raw"
msgstr ""

#: xml/cut-assertions.xml:145(link) xml/cut-assertions.xml:2808(primary)
#: xml/api-index-full.xml:63(link) xml/api-index-1.1.4.xml:8(link)
msgid "cut_assert_not_equal_file_raw"
msgstr ""

#: xml/cut-assertions.xml:147(link) xml/cut-assertions.xml:2834(primary)
#: xml/api-index-full.xml:166(link)
msgid "cut_error"
msgstr ""

#: xml/cut-assertions.xml:149(link) xml/cut-assertions.xml:2857(primary)
#: xml/api-index-full.xml:167(link) xml/api-index-1.0.2.xml:16(link)
msgid "cut_error_errno"
msgstr ""

#: xml/cut-assertions.xml:151(link) xml/cut-assertions.xml:2886(primary)
#: xml/api-index-full.xml:171(link)
msgid "cut_fail"
msgstr ""

#: xml/cut-assertions.xml:153(link) xml/cut-assertions.xml:2909(primary)
#: xml/api-index-full.xml:541(link)
msgid "cut_pend"
msgstr ""

#: xml/cut-assertions.xml:155(link) xml/cut-assertions.xml:2933(primary)
#: xml/api-index-full.xml:542(link) xml/api-index-deprecated.xml:66(link)
msgid "cut_pending"
msgstr ""

#: xml/cut-assertions.xml:157(link) xml/cut-assertions.xml:2959(primary)
#: xml/api-index-full.xml:535(link)
msgid "cut_notify"
msgstr ""

#: xml/cut-assertions.xml:159(link) xml/cut-assertions.xml:2982(primary)
#: xml/api-index-full.xml:538(link) xml/api-index-0.8.xml:17(link)
msgid "cut_omit"
msgstr ""

#: xml/cut-assertions.xml:161(link) xml/cut-assertions.xml:3011(primary)
#: xml/api-index-full.xml:549(link) xml/api-index-1.0.6.xml:82(link)
msgid "cut_return"
msgstr ""

#: xml/cut-assertions.xml:171(para)
msgid ""
"To check that your program works as you expect, you use <link linkend=\"cut-"
"assert-XXX\"><function>cut_assert_XXX()</function></link> where you want to "
"check expected value is got."
msgstr ""
"あなたのプログラムが期待通りに動作しているかを検証するために、期待した値が得"
"られていることを検証したい箇所で<link linkend=\"cut-assert-XXX"
"\"><function>cut_assert_XXX()</function></link>を使います。"

#: xml/cut-assertions.xml:184(title)
msgid "cut_assert ()"
msgstr ""

#: xml/cut-assertions.xml:186(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert (<parameter><link linkend=\"cut-boolean\"><type>cut_boolean</type></link> expression</parameter>,\n"
"            <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:189(para)
msgid ""
"Passes if <parameter>expression</parameter> is not 0 or <link linkend=\"NULL:"
"CAPS\"><literal>NULL</literal></link>."
msgstr ""
"<parameter>expression</parameter>が0でも<link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>でもないとパスします。"

#: xml/cut-assertions.xml:213(para) xml/cut-assertions.xml:237(para)
#: xml/cut-assertions.xml:261(para) xml/cut-assertions.xml:365(para)
#: xml/cut-assertions.xml:413(para)
msgid "the expression to be checked."
msgstr "チェックする式。"

#: xml/cut-assertions.xml:221(title)
#, fuzzy
msgid "cut_assert_true ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:223(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_true (<parameter><link linkend=\"cut-boolean\"><type>cut_boolean</type></link> expression</parameter>,\n"
"                 <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:226(para)
msgid ""
"Passes if <parameter>expression</parameter> is <link linkend=\"CUT-TRUE:CAPS"
"\"><literal>CUT_TRUE</literal></link> value (not 0 or <link linkend=\"NULL:"
"CAPS\"><literal>NULL</literal></link>)."
msgstr ""
"<parameter>expression</parameter>が<link linkend=\"CUT-TRUE:CAPS"
"\"><literal>CUT_TRUE</literal></link>のとき（0でも<link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>でもないとき）パスします。"

#: xml/cut-assertions.xml:243(para) xml/cut-assertions.xml:267(para)
#: xml/cut-assertions.xml:2236(para) xml/cut-assertions.xml:2505(para)
msgid "Since: <link linkend=\"api-index-0.9\">0.9</link>"
msgstr ""

#: xml/cut-assertions.xml:245(title)
#, fuzzy
msgid "cut_assert_false ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:247(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_false (<parameter><link linkend=\"cut-boolean\"><type>cut_boolean</type></link> expression</parameter>,\n"
"                  <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:250(para)
msgid ""
"Passes if <parameter>expression</parameter> is 0 or <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>."
msgstr ""
"<parameter>expression</parameter>が0または<link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>のときパスします。"

#: xml/cut-assertions.xml:269(title)
msgid "cut_assert_equal_boolean ()"
msgstr ""

#: xml/cut-assertions.xml:271(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_boolean (<parameter><link linkend=\"cut-boolean\"><type>cut_boolean</type></link> expected</parameter>,\n"
"                          <parameter><link linkend=\"cut-boolean\"><type>cut_boolean</type></link> actual</parameter>,\n"
"                          <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:275(para)
msgid ""
"Passes if both of <parameter>expected</parameter> and <parameter>actual</"
"parameter> are <link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></"
"link> value or both of <parameter>expected</parameter> and "
"<parameter>actual</parameter> are <link linkend=\"CUT-FALSE:CAPS"
"\"><literal>CUT_FALSE</literal></link> value."
msgstr ""
"<parameter>expected</parameter>と<parameter>actual</parameter>が両方とも"
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link>の値か、両"
"方とも<link linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link>の"
"値のときパスします。"

#: xml/cut-assertions.xml:298(para) xml/cut-assertions.xml:338(para)
msgid "the expected boolean."
msgstr "期待する真偽値。"

#: xml/cut-assertions.xml:301(para) xml/cut-assertions.xml:341(para)
msgid "the actual boolean."
msgstr "実際の真偽値。"

#: xml/cut-assertions.xml:309(title)
msgid "cut_assert_not_equal_boolean ()"
msgstr ""

#: xml/cut-assertions.xml:311(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_not_equal_boolean (<parameter><link linkend=\"cut-boolean\"><type>cut_boolean</type></link> expected</parameter>,\n"
"                              <parameter><link linkend=\"cut-boolean\"><type>cut_boolean</type></link> actual</parameter>,\n"
"                              <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:315(para)
msgid ""
"Passes if <parameter>expected</parameter> is <link linkend=\"CUT-TRUE:CAPS"
"\"><literal>CUT_TRUE</literal></link> value but <parameter>actual</"
"parameter> is <link linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></"
"link> value or <parameter>expected</parameter> is <link linkend=\"CUT-FALSE:"
"CAPS\"><literal>CUT_FALSE</literal></link> value but <parameter>actual</"
"parameter> is <link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></"
"link> value."
msgstr ""
"<parameter>expected</parameter>が<link linkend=\"CUT-TRUE:CAPS"
"\"><literal>CUT_TRUE</literal></link>の値だが<parameter>actual</parameter>は"
"<link linkend=\"CUT-FALSE:CAPS\"><literal>CUT_FALSE</literal></link>の値のと"
"き、または、<parameter>expected</parameter>が<link linkend=\"CUT-FALSE:CAPS"
"\"><literal>CUT_FALSE</literal></link>の値だが<parameter>actual</parameter>は"
"<link linkend=\"CUT-TRUE:CAPS\"><literal>CUT_TRUE</literal></link>の値のとき"
"にパスします。"

#: xml/cut-assertions.xml:349(title)
msgid "cut_assert_null ()"
msgstr ""

#: xml/cut-assertions.xml:351(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_null (<parameter>const <link linkend=\"void\"><type>void</type></link> *expression</parameter>,\n"
"                 <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:354(para)
msgid ""
"Passes if <parameter>expression</parameter> is <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>."
msgstr ""
"<parameter>expression</parameter>が<link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>のときパスします。"

#: xml/cut-assertions.xml:373(title)
msgid "cut_assert_null_string ()"
msgstr ""

#: xml/cut-assertions.xml:375(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_null_string (<parameter>const <link linkend=\"char\"><type>char</type></link> *string</parameter>,\n"
"                        <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:378(para)
msgid ""
"Passes if <parameter>string</parameter> is <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>."
msgstr ""
"<parameter>string</parameter>が<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>のときパスします。"

#: xml/cut-assertions.xml:389(para)
msgid "the string to be checked."
msgstr "チェックする文字列。"

#: xml/cut-assertions.xml:395(para) xml/cut-assertions.xml:1965(para)
msgid "Since: <link linkend=\"api-index-0.3\">0.3</link>"
msgstr ""

#: xml/cut-assertions.xml:397(title)
msgid "cut_assert_not_null ()"
msgstr ""

#: xml/cut-assertions.xml:399(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_not_null (<parameter>const <link linkend=\"void\"><type>void</type></link> *expression</parameter>,\n"
"                     <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:402(para)
msgid ""
"Passes if <parameter>expression</parameter> is not <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>."
msgstr ""
"<parameter>expression</parameter>が<link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>以外のときパスします。"

#: xml/cut-assertions.xml:421(title)
#, fuzzy
msgid "cut_assert_equal_int ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:423(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_int (<parameter><link linkend=\"int\"><type>int</type></link> expected</parameter>,\n"
"                      <parameter><link linkend=\"int\"><type>int</type></link> actual</parameter>,\n"
"                      <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:439(para) xml/cut-assertions.xml:468(para)
#: xml/cut-assertions.xml:496(para) xml/cut-assertions.xml:524(para)
#: xml/cut-assertions.xml:552(para) xml/cut-assertions.xml:580(para)
#: xml/cut-assertions.xml:608(para) xml/cut-assertions.xml:636(para)
#: xml/cut-assertions.xml:664(para) xml/cut-assertions.xml:692(para)
#: xml/cut-assertions.xml:720(para) xml/cut-assertions.xml:748(para)
#: xml/cut-assertions.xml:776(para) xml/cut-assertions.xml:804(para)
#: xml/cut-assertions.xml:832(para) xml/cut-assertions.xml:860(para)
#: xml/cut-assertions.xml:888(para) xml/cut-assertions.xml:916(para)
#: xml/cut-assertions.xml:944(para) xml/cut-assertions.xml:972(para)
#: xml/cut-assertions.xml:1000(para) xml/cut-assertions.xml:1028(para)
msgid "an expected integer value."
msgstr "期待する整数の値。"

#: xml/cut-assertions.xml:442(para) xml/cut-assertions.xml:471(para)
#: xml/cut-assertions.xml:499(para) xml/cut-assertions.xml:527(para)
#: xml/cut-assertions.xml:555(para) xml/cut-assertions.xml:583(para)
#: xml/cut-assertions.xml:611(para) xml/cut-assertions.xml:639(para)
#: xml/cut-assertions.xml:667(para) xml/cut-assertions.xml:695(para)
#: xml/cut-assertions.xml:723(para) xml/cut-assertions.xml:751(para)
#: xml/cut-assertions.xml:779(para) xml/cut-assertions.xml:807(para)
#: xml/cut-assertions.xml:835(para) xml/cut-assertions.xml:863(para)
#: xml/cut-assertions.xml:891(para) xml/cut-assertions.xml:919(para)
#: xml/cut-assertions.xml:947(para) xml/cut-assertions.xml:975(para)
#: xml/cut-assertions.xml:1003(para) xml/cut-assertions.xml:1031(para)
msgid "an actual integer value."
msgstr "実際の整数の値。"

#: xml/cut-assertions.xml:450(title)
msgid "cut_assert_not_equal_int ()"
msgstr ""

#: xml/cut-assertions.xml:452(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_not_equal_int (<parameter><link linkend=\"int\"><type>int</type></link> expected</parameter>,\n"
"                          <parameter><link linkend=\"int\"><type>int</type></link> actual</parameter>,\n"
"                          <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:479(title)
msgid "cut_assert_equal_int_least8()"
msgstr ""

#: xml/cut-assertions.xml:481(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_int_least8(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:485(para) xml/cut-assertions.xml:513(para)
#: xml/cut-assertions.xml:541(para) xml/cut-assertions.xml:569(para)
#: xml/cut-assertions.xml:597(para) xml/cut-assertions.xml:625(para)
#: xml/cut-assertions.xml:653(para) xml/cut-assertions.xml:681(para)
#: xml/cut-assertions.xml:709(para) xml/cut-assertions.xml:737(para)
#: xml/cut-assertions.xml:765(para) xml/cut-assertions.xml:793(para)
#: xml/cut-assertions.xml:821(para) xml/cut-assertions.xml:849(para)
#: xml/cut-assertions.xml:877(para) xml/cut-assertions.xml:905(para)
#: xml/cut-assertions.xml:933(para) xml/cut-assertions.xml:961(para)
#: xml/cut-assertions.xml:989(para) xml/cut-assertions.xml:1017(para)
#: xml/cut-assertions.xml:1103(para) xml/cut-assertions.xml:1131(para)
#: xml/cut-assertions.xml:1159(para) xml/cut-assertions.xml:1187(para)
#: xml/cut-assertions.xml:1215(para) xml/cut-assertions.xml:1243(para)
#: xml/cut-assertions.xml:1271(para) xml/cut-assertions.xml:1299(para)
#: xml/cut-assertions.xml:1327(para) xml/cut-assertions.xml:1355(para)
#: xml/cut-assertions.xml:1383(para) xml/cut-assertions.xml:1411(para)
#: xml/cut-assertions.xml:1439(para) xml/cut-assertions.xml:1467(para)
#: xml/cut-assertions.xml:1495(para) xml/cut-assertions.xml:1523(para)
#: xml/cut-assertions.xml:1551(para) xml/cut-assertions.xml:1579(para)
#: xml/cut-assertions.xml:1607(para) xml/cut-assertions.xml:1635(para)
msgid ""
"This function is available only when CUT_SUPPORT_C99_STDINT_TYPES is defined."
msgstr ""
"この関数はCUT_SUPPORT_C99_STDINT_TYPESが定義されているときだけ使用できます。"

#: xml/cut-assertions.xml:507(title)
msgid "cut_assert_not_equal_int_least8()"
msgstr ""

#: xml/cut-assertions.xml:509(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_int_least8(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:535(title)
msgid "cut_assert_equal_int_least16()"
msgstr ""

#: xml/cut-assertions.xml:537(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_int_least16(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:563(title)
msgid "cut_assert_not_equal_int_least16()"
msgstr ""

#: xml/cut-assertions.xml:565(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_int_least16(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:591(title)
msgid "cut_assert_equal_int_least32()"
msgstr ""

#: xml/cut-assertions.xml:593(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_int_least32(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:619(title)
msgid "cut_assert_not_equal_int_least32()"
msgstr ""

#: xml/cut-assertions.xml:621(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_int_least32(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:647(title)
msgid "cut_assert_equal_int_least64()"
msgstr ""

#: xml/cut-assertions.xml:649(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_int_least64(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:675(title)
msgid "cut_assert_not_equal_int_least64()"
msgstr ""

#: xml/cut-assertions.xml:677(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_int_least64(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:703(title)
msgid "cut_assert_equal_int_fast8()"
msgstr ""

#: xml/cut-assertions.xml:705(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_int_fast8(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:731(title)
msgid "cut_assert_not_equal_int_fast8()"
msgstr ""

#: xml/cut-assertions.xml:733(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_int_fast8(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:759(title)
msgid "cut_assert_equal_int_fast16()"
msgstr ""

#: xml/cut-assertions.xml:761(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_int_fast16(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:787(title)
msgid "cut_assert_not_equal_int_fast16()"
msgstr ""

#: xml/cut-assertions.xml:789(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_int_fast16(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:815(title)
msgid "cut_assert_equal_int_fast32()"
msgstr ""

#: xml/cut-assertions.xml:817(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_int_fast32(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:843(title)
msgid "cut_assert_not_equal_int_fast32()"
msgstr ""

#: xml/cut-assertions.xml:845(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_int_fast32(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:871(title)
msgid "cut_assert_equal_int_fast64()"
msgstr ""

#: xml/cut-assertions.xml:873(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_int_fast64(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:899(title)
msgid "cut_assert_not_equal_int_fast64()"
msgstr ""

#: xml/cut-assertions.xml:901(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_int_fast64(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:927(title)
msgid "cut_assert_equal_intptr()"
msgstr ""

#: xml/cut-assertions.xml:929(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_intptr(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:955(title)
msgid "cut_assert_not_equal_intptr()"
msgstr ""

#: xml/cut-assertions.xml:957(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_intptr(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:983(title)
msgid "cut_assert_equal_intmax()"
msgstr ""

#: xml/cut-assertions.xml:985(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_intmax(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1011(title)
msgid "cut_assert_not_equal_intmax()"
msgstr ""

#: xml/cut-assertions.xml:1013(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_intmax(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1039(title)
#, fuzzy
msgid "cut_assert_equal_uint ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:1041(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_uint (<parameter>unsigned <link linkend=\"int\"><type>int</type></link> expected</parameter>,\n"
"                       <parameter>unsigned <link linkend=\"int\"><type>int</type></link> actual</parameter>,\n"
"                       <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:1057(para) xml/cut-assertions.xml:1086(para)
#: xml/cut-assertions.xml:1114(para) xml/cut-assertions.xml:1142(para)
#: xml/cut-assertions.xml:1170(para) xml/cut-assertions.xml:1198(para)
#: xml/cut-assertions.xml:1226(para) xml/cut-assertions.xml:1254(para)
#: xml/cut-assertions.xml:1282(para) xml/cut-assertions.xml:1310(para)
#: xml/cut-assertions.xml:1338(para) xml/cut-assertions.xml:1366(para)
#: xml/cut-assertions.xml:1394(para) xml/cut-assertions.xml:1422(para)
#: xml/cut-assertions.xml:1450(para) xml/cut-assertions.xml:1478(para)
#: xml/cut-assertions.xml:1506(para) xml/cut-assertions.xml:1534(para)
#: xml/cut-assertions.xml:1562(para) xml/cut-assertions.xml:1590(para)
#: xml/cut-assertions.xml:1618(para) xml/cut-assertions.xml:1646(para)
msgid "an expected unsigned integer value."
msgstr "期待する符号無し整数の値。"

#: xml/cut-assertions.xml:1060(para) xml/cut-assertions.xml:1089(para)
#: xml/cut-assertions.xml:1117(para) xml/cut-assertions.xml:1145(para)
#: xml/cut-assertions.xml:1173(para) xml/cut-assertions.xml:1201(para)
#: xml/cut-assertions.xml:1229(para) xml/cut-assertions.xml:1257(para)
#: xml/cut-assertions.xml:1285(para) xml/cut-assertions.xml:1313(para)
#: xml/cut-assertions.xml:1341(para) xml/cut-assertions.xml:1369(para)
#: xml/cut-assertions.xml:1397(para) xml/cut-assertions.xml:1425(para)
#: xml/cut-assertions.xml:1453(para) xml/cut-assertions.xml:1481(para)
#: xml/cut-assertions.xml:1509(para) xml/cut-assertions.xml:1537(para)
#: xml/cut-assertions.xml:1565(para) xml/cut-assertions.xml:1593(para)
#: xml/cut-assertions.xml:1621(para) xml/cut-assertions.xml:1649(para)
msgid "an actual unsigned integer value."
msgstr "実際の符号無し符号整数の値。"

#: xml/cut-assertions.xml:1068(title)
msgid "cut_assert_not_equal_uint ()"
msgstr ""

#: xml/cut-assertions.xml:1070(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_not_equal_uint (<parameter>unsigned <link linkend=\"int\"><type>int</type></link> expected</parameter>,\n"
"                           <parameter>unsigned <link linkend=\"int\"><type>int</type></link> actual</parameter>,\n"
"                           <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:1097(title)
msgid "cut_assert_equal_uint_least8()"
msgstr ""

#: xml/cut-assertions.xml:1099(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_uint_least8(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1125(title)
msgid "cut_assert_not_equal_uint_least8()"
msgstr ""

#: xml/cut-assertions.xml:1127(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_uint_least8(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1153(title)
msgid "cut_assert_equal_uint_least16()"
msgstr ""

#: xml/cut-assertions.xml:1155(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_uint_least16(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1181(title)
msgid "cut_assert_not_equal_uint_least16()"
msgstr ""

#: xml/cut-assertions.xml:1183(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_uint_least16(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1209(title)
msgid "cut_assert_equal_uint_least32()"
msgstr ""

#: xml/cut-assertions.xml:1211(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_uint_least32(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1237(title)
msgid "cut_assert_not_equal_uint_least32()"
msgstr ""

#: xml/cut-assertions.xml:1239(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_uint_least32(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1265(title)
msgid "cut_assert_equal_uint_least64()"
msgstr ""

#: xml/cut-assertions.xml:1267(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_uint_least64(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1293(title)
msgid "cut_assert_not_equal_uint_least64()"
msgstr ""

#: xml/cut-assertions.xml:1295(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_uint_least64(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1321(title)
msgid "cut_assert_equal_uint_fast8()"
msgstr ""

#: xml/cut-assertions.xml:1323(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_uint_fast8(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1349(title)
msgid "cut_assert_not_equal_uint_fast8()"
msgstr ""

#: xml/cut-assertions.xml:1351(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_uint_fast8(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1377(title)
msgid "cut_assert_equal_uint_fast16()"
msgstr ""

#: xml/cut-assertions.xml:1379(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_uint_fast16(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1405(title)
msgid "cut_assert_not_equal_uint_fast16()"
msgstr ""

#: xml/cut-assertions.xml:1407(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_uint_fast16(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1433(title)
msgid "cut_assert_equal_uint_fast32()"
msgstr ""

#: xml/cut-assertions.xml:1435(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_uint_fast32(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1461(title)
msgid "cut_assert_not_equal_uint_fast32()"
msgstr ""

#: xml/cut-assertions.xml:1463(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_uint_fast32(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1489(title)
msgid "cut_assert_equal_uint_fast64()"
msgstr ""

#: xml/cut-assertions.xml:1491(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_uint_fast64(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1517(title)
msgid "cut_assert_not_equal_uint_fast64()"
msgstr ""

#: xml/cut-assertions.xml:1519(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_uint_fast64(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1545(title)
msgid "cut_assert_equal_uintptr()"
msgstr ""

#: xml/cut-assertions.xml:1547(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_uintptr(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1573(title)
msgid "cut_assert_not_equal_uintptr()"
msgstr ""

#: xml/cut-assertions.xml:1575(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_uintptr(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1601(title)
msgid "cut_assert_equal_uintmax()"
msgstr ""

#: xml/cut-assertions.xml:1603(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_uintmax(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1629(title)
msgid "cut_assert_not_equal_uintmax()"
msgstr ""

#: xml/cut-assertions.xml:1631(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_uintmax(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1657(title)
#, fuzzy
msgid "cut_assert_equal_size ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:1659(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_size (<parameter><link linkend=\"size-t\"><type>size_t</type></link> expected</parameter>,\n"
"                       <parameter><link linkend=\"size-t\"><type>size_t</type></link> actual</parameter>,\n"
"                       <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:1675(para) xml/cut-assertions.xml:1704(para)
msgid "an expected size_t value."
msgstr "期待するsize_tの値。"

#: xml/cut-assertions.xml:1678(para) xml/cut-assertions.xml:1707(para)
msgid "an actual size_t value."
msgstr "実際のsize_tの値。"

#: xml/cut-assertions.xml:1686(title)
msgid "cut_assert_not_equal_size ()"
msgstr ""

#: xml/cut-assertions.xml:1688(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_not_equal_size (<parameter><link linkend=\"size-t\"><type>size_t</type></link> expected</parameter>,\n"
"                           <parameter><link linkend=\"size-t\"><type>size_t</type></link> actual</parameter>,\n"
"                           <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:1715(title)
msgid "cut_assert_equal_double ()"
msgstr ""

#: xml/cut-assertions.xml:1717(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_double (<parameter><link linkend=\"double\"><type>double</type></link> expected</parameter>,\n"
"                         <parameter><link linkend=\"double\"><type>double</type></link> error</parameter>,\n"
"                         <parameter><link linkend=\"double\"><type>double</type></link> actual</parameter>,\n"
"                         <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:1722(para)
#, fuzzy
msgid ""
"Passes if (<parameter>expected</parameter> - <parameter>error</parameter> ) "
"&lt;= <parameter>actual</parameter> &lt;= (<parameter>expected</parameter> + "
"<parameter>error</parameter> )."
msgstr ""
"(<parameter>expected</parameter> - <parameter>error</parameter>) &lt;= "
"<parameter>actual</parameter> &lt;= (<parameter>expected</parameter> + "
"<parameter>error</parameter>)が成り立つときパスします。"

#: xml/cut-assertions.xml:1737(para) xml/cut-assertions.xml:1774(para)
msgid "an expected float value."
msgstr "期待する浮動小数点数。"

#: xml/cut-assertions.xml:1740(para) xml/cut-assertions.xml:1777(para)
msgid "a float value that specifies error range."
msgstr "誤差範囲を示す浮動小数点数。"

#: xml/cut-assertions.xml:1743(para) xml/cut-assertions.xml:1780(para)
msgid "an actual float value."
msgstr "実際の浮動小数点数。"

#: xml/cut-assertions.xml:1751(title)
msgid "cut_assert_not_equal_double ()"
msgstr ""

#: xml/cut-assertions.xml:1753(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_not_equal_double (<parameter><link linkend=\"double\"><type>double</type></link> expected</parameter>,\n"
"                             <parameter><link linkend=\"double\"><type>double</type></link> error</parameter>,\n"
"                             <parameter><link linkend=\"double\"><type>double</type></link> actual</parameter>,\n"
"                             <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:1758(para)
#, fuzzy
msgid ""
"Passes if <parameter>actual</parameter> &lt; (<parameter>expected</"
"parameter> - <parameter>error</parameter> ) &amp;&amp; (<parameter>expected</"
"parameter> + <parameter>error</parameter> ) &lt; <parameter>actual</"
"parameter> ."
msgstr ""
"<parameter>actual</parameter> &lt; (<parameter>expected</parameter> - "
"<parameter>error</parameter>) &amp;&amp; (<parameter>expected</parameter> + "
"<parameter>error</parameter>) &lt; <parameter>actual</parameter>が成り立つと"
"きパスします。"

#: xml/cut-assertions.xml:1788(title)
msgid "cut_assert_equal_char()"
msgstr ""

#: xml/cut-assertions.xml:1790(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_char(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1809(para) xml/cut-assertions.xml:1841(para)
msgid "an expected char value."
msgstr "期待する文字。"

#: xml/cut-assertions.xml:1812(para) xml/cut-assertions.xml:1844(para)
msgid "an actual char value."
msgstr "実際の文字。"

#: xml/cut-assertions.xml:1820(title)
msgid "cut_assert_not_equal_char()"
msgstr ""

#: xml/cut-assertions.xml:1822(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_char(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:1852(title)
#, fuzzy
msgid "cut_assert_equal_string ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:1854(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_string (<parameter>const <link linkend=\"char\"><type>char</type></link> *expected</parameter>,\n"
"                         <parameter>const <link linkend=\"char\"><type>char</type></link> *actual</parameter>,\n"
"                         <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:1858(para) xml/cut-assertions.xml:1940(para)
#, fuzzy
msgid ""
"Passes if both <parameter>expected</parameter> and <parameter>actual</"
"parameter> are <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link> or "
"strcmp(<parameter>expected</parameter> , <parameter>actual</parameter> ) == "
"0."
msgstr ""
"<parameter>expected</parameter>と<parameter>actual</parameter>がどちらとも"
"<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>、あるいは"
"strcmp(<parameter>expected</parameter>, <parameter>actual</parameter>) == 0が"
"成り立つときにパスします。"

#: xml/cut-assertions.xml:1882(para) xml/cut-assertions.xml:1923(para)
#: xml/cut-assertions.xml:1956(para) xml/cut-assertions.xml:1984(para)
#: xml/cut-assertions.xml:2030(para) xml/cut-assertions.xml:2077(para)
msgid "an expected string value."
msgstr "期待する文字列。"

#: xml/cut-assertions.xml:1885(para) xml/cut-assertions.xml:1926(para)
#: xml/cut-assertions.xml:1987(para) xml/cut-assertions.xml:2033(para)
#: xml/cut-assertions.xml:2080(para)
msgid "an actual string value."
msgstr "実際の文字列の値。"

#: xml/cut-assertions.xml:1893(title)
msgid "cut_assert_not_equal_string ()"
msgstr ""

#: xml/cut-assertions.xml:1895(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_not_equal_string (<parameter>const <link linkend=\"char\"><type>char</type></link> *expected</parameter>,\n"
"                             <parameter>const <link linkend=\"char\"><type>char</type></link> *actual</parameter>,\n"
"                             <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:1899(para)
#, fuzzy
msgid ""
"Passes if one of <parameter>expected</parameter> and <parameter>actual</"
"parameter> is <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link> or "
"strcmp(<parameter>expected</parameter> , <parameter>actual</parameter> ) != "
"0."
msgstr ""
"<parameter>expected</parameter>か<parameter>actual</parameter>のどちらかが"
"<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>のとき、または、"
"strcmp(<parameter>expected</parameter>, <parameter>actual</parameter>) != 0の"
"ときパスします。"

#: xml/cut-assertions.xml:1934(title)
#, fuzzy
msgid "cut_assert_equal_string_with_free ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:1936(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_string_with_free (<parameter>const <link linkend=\"char\"><type>char</type></link> *expected</parameter>,\n"
"                                   <parameter>const <link linkend=\"char\"><type>char</type></link> *actual</parameter>,\n"
"                                   <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:1946(para)
msgid ""
"See also <link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link> for examples."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/cut-assertions.xml:1959(para)
msgid "an actual string value that is freed."
msgstr "実際の文字列の値。（チェック後に開放される）"

#: xml/cut-assertions.xml:1967(title)
msgid "cut_assert_equal_string_or_null ()"
msgstr ""

#: xml/cut-assertions.xml:1969(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_string_or_null (<parameter>const <link linkend=\"char\"><type>char</type></link> *expected</parameter>,\n"
"                                 <parameter>const <link linkend=\"char\"><type>char</type></link> *actual</parameter>,\n"
"                                 <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:1973(para)
#, fuzzy
msgid ""
"<literal>cut_assert_equal_string_or_null</literal> has been deprecated since "
"version 0.3 and should not be used in newly-written code."
msgstr ""
"<literal>gcut_egg_error_quark</literal>は非推奨です。新しいコードでは使わない"
"でください。"

#: xml/cut-assertions.xml:1973(para)
#, fuzzy
msgid ""
"Use <link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link> instead."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/cut-assertions.xml:1995(title)
msgid "cut_assert_equal_substring ()"
msgstr ""

#: xml/cut-assertions.xml:1997(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_substring (<parameter>const <link linkend=\"char\"><type>char</type></link> *expected</parameter>,\n"
"                            <parameter>const <link linkend=\"char\"><type>char</type></link> *actual</parameter>,\n"
"                            <parameter><link linkend=\"size-t\"><type>size_t</type></link> length</parameter>,\n"
"                            <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2002(para)
#, fuzzy
msgid ""
"Passes if (1) both <parameter>expected</parameter> and <parameter>actual</"
"parameter> are <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link> "
"and <parameter>length</parameter> == 1 or (2) strncmp(<parameter>expected</"
"parameter> , <parameter>actual</parameter> , <parameter>length</parameter> ) "
"== 0."
msgstr ""
"(1)<parameter>expected</parameter>と<parameter>actual</parameter>が両方とも"
"<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>で"
"<parameter>length</parameter> == 1が成り立つとき、または、(2) "
"strncmp(<parameter>expected</parameter>, <parameter>actual</parameter>, "
"<parameter>length</parameter>) == 0が成り立つときパスします。"

#: xml/cut-assertions.xml:2035(para) xml/cut-assertions.xml:2082(para)
msgid "length"
msgstr ""

#: xml/cut-assertions.xml:2036(para) xml/cut-assertions.xml:2083(para)
msgid "compared string length."
msgstr ""

#: xml/cut-assertions.xml:2044(title)
msgid "cut_assert_not_equal_substring ()"
msgstr ""

#: xml/cut-assertions.xml:2046(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_not_equal_substring (<parameter>const <link linkend=\"char\"><type>char</type></link> *expected</parameter>,\n"
"                                <parameter>const <link linkend=\"char\"><type>char</type></link> *actual</parameter>,\n"
"                                <parameter><link linkend=\"size-t\"><type>size_t</type></link> length</parameter>,\n"
"                                <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2051(para)
#, fuzzy
msgid ""
"Passes if (1) one of <parameter>expected</parameter> and <parameter>actual</"
"parameter> is <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link> or "
"(2) strncmp(<parameter>expected</parameter> , <parameter>actual</"
"parameter> , <parameter>length</parameter> ) != 0."
msgstr ""
"(1) <parameter>expected</parameter>と<parameter>actual</parameter>のどちらか"
"が<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>、または、(2) "
"strncmp(<parameter>expected</parameter>, <parameter>actual</parameter>, "
"<parameter>length</parameter>) != 0が成り立つときパスします。"

#: xml/cut-assertions.xml:2091(title)
msgid "cut_assert_equal_memory ()"
msgstr ""

#: xml/cut-assertions.xml:2093(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_memory (<parameter>const <link linkend=\"void\"><type>void</type></link> *expected</parameter>,\n"
"                         <parameter><link linkend=\"size-t\"><type>size_t</type></link> expected_size</parameter>,\n"
"                         <parameter>const <link linkend=\"void\"><type>void</type></link> *actual</parameter>,\n"
"                         <parameter><link linkend=\"size-t\"><type>size_t</type></link> actual_size</parameter>,\n"
"                         <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2099(para)
#, fuzzy
msgid ""
"Passes if <parameter>expected_size</parameter> == <parameter>actual_size</"
"parameter> and memcmp(<parameter>expected</parameter> , <parameter>actual</"
"parameter> , <parameter>expected_size</parameter> ) == 0."
msgstr ""
"<parameter>expected_size</parameter> == <parameter>actual_size</parameter>が"
"成り立ち、かつ、memcmp(<parameter>expected</parameter>, <parameter>actual</"
"parameter>, <parameter>expected_size</parameter>) == 0が成り立つときにパスし"
"ます。"

#: xml/cut-assertions.xml:2115(para) xml/cut-assertions.xml:2158(para)
msgid "an expected data."
msgstr "期待するデータ。"

#: xml/cut-assertions.xml:2117(para) xml/cut-assertions.xml:2160(para)
#, fuzzy
msgid "expected_size"
msgstr "期待するsize_tの値。"

#: xml/cut-assertions.xml:2118(para) xml/cut-assertions.xml:2161(para)
#, fuzzy
msgid "a size of <parameter>expected</parameter> ."
msgstr "<parameter>expected</parameter>のサイズ。"

#: xml/cut-assertions.xml:2122(para) xml/cut-assertions.xml:2165(para)
msgid "an actual data."
msgstr "実際のデータ。"

#: xml/cut-assertions.xml:2124(para) xml/cut-assertions.xml:2167(para)
msgid "actual_size"
msgstr ""

#: xml/cut-assertions.xml:2125(para) xml/cut-assertions.xml:2168(para)
#, fuzzy
msgid "a size of <parameter>actual</parameter> ."
msgstr "<parameter>actual</parameter>のサイズ。"

#: xml/cut-assertions.xml:2134(title)
msgid "cut_assert_not_equal_memory ()"
msgstr ""

#: xml/cut-assertions.xml:2136(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_not_equal_memory (<parameter>const <link linkend=\"void\"><type>void</type></link> *expected</parameter>,\n"
"                             <parameter><link linkend=\"size-t\"><type>size_t</type></link> expected_size</parameter>,\n"
"                             <parameter>const <link linkend=\"void\"><type>void</type></link> *actual</parameter>,\n"
"                             <parameter><link linkend=\"size-t\"><type>size_t</type></link> actual_size</parameter>,\n"
"                             <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2142(para)
#, fuzzy
msgid ""
"Passes if <parameter>expected_size</parameter> != <parameter>actual_size</"
"parameter> or memcmp(<parameter>expected</parameter> , <parameter>actual</"
"parameter> , <parameter>expected_size</parameter> ) != 0."
msgstr ""
"<parameter>expected_size</parameter> != <parameter>actual_size</parameter>ま"
"たはmemcmp(<parameter>expected</parameter>, <parameter>actual</parameter>, "
"<parameter>expected_size</parameter>) != 0が成り立つときパスします。"

#: xml/cut-assertions.xml:2177(title)
msgid "cut_assert_equal_string_array ()"
msgstr ""

#: xml/cut-assertions.xml:2179(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_string_array (<parameter><link linkend=\"char\"><type>char</type></link> **expected</parameter>,\n"
"                               <parameter><link linkend=\"char\"><type>char</type></link> **actual</parameter>,\n"
"                               <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2183(para) xml/cut-assertions.xml:2214(para)
msgid ""
"Passes if both <parameter>expected</parameter> and <parameter>actual</"
"parameter> are not <link linkend=\"NULL:CAPS\"><literal>NULL</literal></"
"link> and have same content (<link linkend=\"strcmp\"><function>strcmp()</"
"function></link> == 0) strings."
msgstr ""
"<parameter>expected</parameter>と<parameter>actual</parameter>がどちらとも"
"<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>ではなく、どちらも"
"同じ内容の文字列(<link linkend=\"strcmp\"><function>strcmp()</function></"
"link> == 0)を持つときにパスします。"

#: xml/cut-assertions.xml:2196(para) xml/cut-assertions.xml:2227(para)
msgid ""
"an expected <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>-"
"terminated array of strings."
msgstr ""
"期待する文字列の配列。配列は<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>終端。"

#: xml/cut-assertions.xml:2199(para)
msgid ""
"an actual <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>-"
"terminated array of strings."
msgstr ""
"実際の文字列の配列。配列は<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>終端。"

#: xml/cut-assertions.xml:2207(title)
#, fuzzy
msgid "cut_assert_equal_string_array_with_free ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:2209(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_string_array_with_free\n"
"                               (<parameter><link linkend=\"char\"><type>char</type></link> **expected</parameter>,\n"
"                                <parameter><link linkend=\"char\"><type>char</type></link> **actual</parameter>,\n"
"                                <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2230(para)
msgid ""
"an actual <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link>-"
"terminated array of strings that are freed."
msgstr ""
"実際の文字列の配列。配列は<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>終端。（チェック後に開放される）"

#: xml/cut-assertions.xml:2238(title)
msgid "cut_assert_operator()"
msgstr ""

#: xml/cut-assertions.xml:2240(programlisting)
#, no-wrap
msgid "#define             cut_assert_operator(lhs, operator, rhs, ...)"
msgstr ""

#: xml/cut-assertions.xml:2241(para) xml/cut-assertions.xml:2276(para)
#: xml/cut-assertions.xml:2311(para) xml/cut-assertions.xml:2346(para)
#: xml/cut-assertions.xml:2381(para) xml/cppcut-assertions.xml:192(para)
#, fuzzy
msgid ""
"Passes if (<parameter>lhs</parameter>\n"
" <parameter>operator</parameter>\n"
" <parameter>rhs</parameter> ) is TRUE."
msgstr ""
"(<parameter>lhs</parameter> <parameter>operator</parameter> <parameter>rhs</"
"parameter>)が真のときにパスします。"

#: xml/cut-assertions.xml:2258(para) xml/cut-assertions.xml:2293(para)
#: xml/cut-assertions.xml:2328(para) xml/cut-assertions.xml:2363(para)
#: xml/cut-assertions.xml:2398(para) xml/cppcut-assertions.xml:210(para)
msgid "lhs"
msgstr ""

#: xml/cut-assertions.xml:2259(para) xml/cppcut-assertions.xml:211(para)
msgid "a left hand side value."
msgstr "左辺値。"

#: xml/cut-assertions.xml:2261(para) xml/cut-assertions.xml:2296(para)
#: xml/cut-assertions.xml:2331(para) xml/cut-assertions.xml:2366(para)
#: xml/cut-assertions.xml:2401(para) xml/cppcut-assertions.xml:213(para)
#, fuzzy
msgid "operator"
msgstr "二項演算子。"

#: xml/cut-assertions.xml:2262(para) xml/cut-assertions.xml:2297(para)
#: xml/cut-assertions.xml:2332(para) xml/cut-assertions.xml:2367(para)
#: xml/cut-assertions.xml:2402(para) xml/cppcut-assertions.xml:214(para)
msgid "a binary operator."
msgstr "二項演算子。"

#: xml/cut-assertions.xml:2264(para) xml/cut-assertions.xml:2299(para)
#: xml/cut-assertions.xml:2334(para) xml/cut-assertions.xml:2369(para)
#: xml/cut-assertions.xml:2404(para) xml/cppcut-assertions.xml:216(para)
msgid "rhs"
msgstr ""

#: xml/cut-assertions.xml:2265(para) xml/cppcut-assertions.xml:217(para)
msgid "a right hand side value."
msgstr "右辺値。"

#: xml/cut-assertions.xml:2273(title)
msgid "cut_assert_operator_int()"
msgstr ""

#: xml/cut-assertions.xml:2275(programlisting)
#, no-wrap
msgid "#define             cut_assert_operator_int(lhs, operator, rhs, ...)"
msgstr ""

#: xml/cut-assertions.xml:2294(para)
msgid "a left hand side integer value."
msgstr "左辺の整数の値。"

#: xml/cut-assertions.xml:2300(para)
msgid "a right hand side integer value."
msgstr "右辺の整数の値。"

#: xml/cut-assertions.xml:2308(title)
msgid "cut_assert_operator_uint()"
msgstr ""

#: xml/cut-assertions.xml:2310(programlisting)
#, no-wrap
msgid "#define             cut_assert_operator_uint(lhs, operator, rhs, ...)"
msgstr ""

#: xml/cut-assertions.xml:2329(para)
msgid "a left hand side unsigned integer value."
msgstr "左辺の符号無し整数の値。"

#: xml/cut-assertions.xml:2335(para)
msgid "a right hand side unsigned integer value."
msgstr "右辺の符号無し整数の値。"

#: xml/cut-assertions.xml:2343(title)
msgid "cut_assert_operator_size()"
msgstr ""

#: xml/cut-assertions.xml:2345(programlisting)
#, no-wrap
msgid "#define             cut_assert_operator_size(lhs, operator, rhs, ...)"
msgstr ""

#: xml/cut-assertions.xml:2364(para)
msgid "a left hand side size_t value."
msgstr "左辺のsize_tの値。"

#: xml/cut-assertions.xml:2370(para)
msgid "a right hand side size_t value."
msgstr "右辺のsize_tの値。"

#: xml/cut-assertions.xml:2378(title)
msgid "cut_assert_operator_double()"
msgstr ""

#: xml/cut-assertions.xml:2380(programlisting)
#, no-wrap
msgid "#define             cut_assert_operator_double(lhs, operator, rhs, ...)"
msgstr ""

#: xml/cut-assertions.xml:2399(para)
msgid "a left hand side double value."
msgstr "左辺の浮動小数点値。"

#: xml/cut-assertions.xml:2405(para)
msgid "a right hand side double value."
msgstr "右辺の浮動小数点値。"

#: xml/cut-assertions.xml:2413(title)
msgid "cut_assert_equal()"
msgstr ""

#: xml/cut-assertions.xml:2415(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal(function, expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:2416(para)
#, fuzzy
msgid ""
"Passes if <parameter>function</parameter> (<parameter>expected</parameter> , "
"<parameter>actual</parameter> ) returns <link linkend=\"CUT-TRUE:CAPS"
"\"><literal>CUT_TRUE</literal></link>."
msgstr ""
"<parameter>function</parameter>(<parameter>expected</parameter>, "
"<parameter>actual</parameter>)が<link linkend=\"CUT-TRUE:CAPS"
"\"><literal>CUT_TRUE</literal></link>を返すときパスします。"

#: xml/cut-assertions.xml:2434(para)
#, fuzzy
msgid ""
"a function that compares <parameter>actual</parameter> with "
"<parameter>expected</parameter> ."
msgstr ""
"<parameter>actual</parameter>と<parameter>expected</parameter>を比較する関"
"数。"

#: xml/cut-assertions.xml:2450(title)
msgid "cut_assert_errno ()"
msgstr ""

#: xml/cut-assertions.xml:2452(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_errno (<parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2454(para)
msgid "Passes if errno is 0."
msgstr "errnoが0だとパスします。"

#: xml/cut-assertions.xml:2475(title)
msgid "cut_assert_file_exist ()"
msgstr ""

#: xml/cut-assertions.xml:2477(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_file_exist (<parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                       <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2480(para)
#, fuzzy
msgid ""
"<literal>cut_assert_file_exist</literal> has been deprecated since version "
"1.0.2 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/cut-assertions.xml:2480(para)
#, fuzzy
msgid ""
"Use <link linkend=\"cut-assert-path-exist"
"\"><function>cut_assert_path_exist()</function></link> instead."
msgstr ""
"使用例は<link linkend=\"cut-assert-equal-string"
"\"><function>cut_assert_equal_string()</function></link>を見てください。"

#: xml/cut-assertions.xml:2482(para) xml/cut-assertions.xml:2514(para)
#: xml/cut-assertions.xml:2544(para)
msgid ""
"Passes if <parameter>path</parameter> exists. It may or may not be a regular "
"file."
msgstr ""
"<parameter>path</parameter>が存在するときにパスします。普通のファイルかもしれ"
"ませんし、そうでないかもしれません。（例えばシンボリックリンクやディレクトリ"
"など）"

#: xml/cut-assertions.xml:2499(para) xml/cut-assertions.xml:2531(para)
#: xml/cut-assertions.xml:2561(para) xml/cut-assertions.xml:2593(para)
#: xml/cut-assertions.xml:2623(para)
msgid "the path to test."
msgstr "テストするパス。"

#: xml/cut-assertions.xml:2507(title)
#, fuzzy
msgid "cut_assert_path_exist ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:2509(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_path_exist (<parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                       <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2512(para)
#, fuzzy
msgid ""
"<literal>cut_assert_path_exist</literal> has been deprecated since version "
"1.1.5 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/cut-assertions.xml:2512(para)
#, fuzzy
msgid ""
"Use <link linkend=\"cut-assert-exist-path"
"\"><function>cut_assert_exist_path()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/cut-assertions.xml:2539(title)
#, fuzzy
msgid "cut_assert_exist_path ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:2541(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_exist_path (<parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                       <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2569(title)
#, fuzzy
msgid "cut_assert_path_not_exist ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:2571(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_path_not_exist (<parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                           <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2574(para)
#, fuzzy
msgid ""
"<literal>cut_assert_path_not_exist</literal> has been deprecated since "
"version 1.1.5 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/cut-assertions.xml:2574(para)
#, fuzzy
msgid ""
"Use <link linkend=\"cut-assert-not-exist-path"
"\"><function>cut_assert_not_exist_path()</function></link> instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/cut-assertions.xml:2576(para) xml/cut-assertions.xml:2606(para)
msgid "Passes if <parameter>path</parameter> doesn't exist."
msgstr "<parameter>path</parameter>が存在しないとパスします。"

#: xml/cut-assertions.xml:2601(title)
#, fuzzy
msgid "cut_assert_not_exist_path ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:2603(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_not_exist_path (<parameter>const <link linkend=\"char\"><type>char</type></link> *path</parameter>,\n"
"                           <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2631(title)
#, fuzzy
msgid "cut_assert_match ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:2633(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_match (<parameter>const <link linkend=\"char\"><type>char</type></link> *pattern</parameter>,\n"
"                  <parameter>const <link linkend=\"char\"><type>char</type></link> *actual</parameter>,\n"
"                  <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2637(para)
#, fuzzy
msgid ""
"Passes if <parameter>pattern</parameter> matches <parameter>string</"
"parameter> ."
msgstr ""
"<parameter>pattern</parameter>が<parameter>string</parameter>にマッチしたとき"
"パスします。"

#: xml/cut-assertions.xml:2658(para)
msgid "the string to be matched."
msgstr "マッチされる文字列。"

#: xml/cut-assertions.xml:2666(title)
#, fuzzy
msgid "cut_assert_match_with_free ()"
msgstr "cut_assert_match_with_free ()"

#: xml/cut-assertions.xml:2668(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_match_with_free (<parameter>const <link linkend=\"char\"><type>char</type></link> *pattern</parameter>,\n"
"                            <parameter>const <link linkend=\"char\"><type>char</type></link> *actual</parameter>,\n"
"                            <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2672(para)
msgid ""
"Passes if <parameter>pattern</parameter> matches <parameter>string</"
"parameter> . See <link linkend=\"cut-assert-match"
"\"><function>cut_assert_match()</function></link> for detail."
msgstr "<parameter>pattern</parameter>が<parameter>string</parameter>にマッチしたときパスします。詳細は<link linkend=\"cut-assert-match\"><function>cut_assert_match()</function></link>を見てください。"

#: xml/cut-assertions.xml:2685(para)
msgid "the regular expression as string."
msgstr "正規表現。（文字列で指定）"

#: xml/cut-assertions.xml:2688(para)
msgid "the string to be matched that is freed."
msgstr "マッチされる文字列。（チェック後に開放される）"

#: xml/cut-assertions.xml:2696(title)
msgid "cut_assert_equal_pointer ()"
msgstr ""

#: xml/cut-assertions.xml:2698(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_pointer (<parameter>const <link linkend=\"void\"><type>void</type></link> *expected</parameter>,\n"
"                          <parameter>const <link linkend=\"void\"><type>void</type></link> *actual</parameter>,\n"
"                          <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2714(para)
msgid "an expected pointer."
msgstr "期待するポインタ。"

#: xml/cut-assertions.xml:2717(para)
msgid "an actual pointer."
msgstr "実際のポインタ。"

#: xml/cut-assertions.xml:2725(title)
msgid "cut_assert_equal_fixture_data_string ()"
msgstr ""

#: xml/cut-assertions.xml:2727(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_assert_equal_fixture_data_string (<parameter>const <link linkend=\"char\"><type>char</type></link> *expected</parameter>,\n"
"                                      <parameter>const <link linkend=\"void\"><type>void</type></link> *path</parameter>,\n"
"                                      <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2731(para)
msgid ""
"Passes if <parameter>expected</parameter> == "
"cut_get_fixture_data_string(<parameter>path</parameter> , ...)."
msgstr ""
"<parameter>expected</parameter> == "
"cut_get_fixture_data_string(<parameter>path</parameter>, ...)が成り立つときパ"
"スします。"

#: xml/cut-assertions.xml:2743(para)
msgid "an expected string."
msgstr "期待する文字列。"

#: xml/cut-assertions.xml:2754(title)
msgid "cut_assert_equal_sockaddr()"
msgstr ""

#: xml/cut-assertions.xml:2756(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_sockaddr(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:2760(para)
msgid "This assertion can be disabled by defining CUT_DISABLE_SOCKET_SUPPORT."
msgstr "この検証はCUT_DISABLE_SOCKET_SUPPORTを定義すると無効にできます。"

#: xml/cut-assertions.xml:2770(para)
msgid "an expected socket address."
msgstr "期待するソケットアドレス。"

#: xml/cut-assertions.xml:2773(para)
msgid "an actual socket address."
msgstr "実際のソケットアドレス。"

#: xml/cut-assertions.xml:2781(title)
msgid "cut_assert_equal_file_raw()"
msgstr ""

#: xml/cut-assertions.xml:2783(programlisting)
#, no-wrap
msgid "#define             cut_assert_equal_file_raw(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:2784(para)
#, fuzzy
msgid ""
"Passes if the content of <parameter>expected</parameter> == the content of "
"<parameter>actual</parameter> ."
msgstr ""
"<parameter>expected</parameter>の内容と<parameter>actual</parameter>内容が等"
"しいときパスします。"

#: xml/cut-assertions.xml:2807(title)
msgid "cut_assert_not_equal_file_raw()"
msgstr ""

#: xml/cut-assertions.xml:2809(programlisting)
#, no-wrap
msgid "#define             cut_assert_not_equal_file_raw(expected, actual, ...)"
msgstr ""

#: xml/cut-assertions.xml:2810(para)
#, fuzzy
msgid ""
"Passes if the content of <parameter>expected</parameter> != the content of "
"<parameter>actual</parameter> ."
msgstr ""
"<parameter>expected</parameter>の内容と<parameter>actual</parameter>内容が異"
"なるときパスします。"

#: xml/cut-assertions.xml:2833(title)
msgid "cut_error ()"
msgstr ""

#: xml/cut-assertions.xml:2835(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_error (<parameter>const <link linkend=\"char\"><type>char</type></link> *format</parameter>,\n"
"           <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2838(para)
msgid "Raises an error with message."
msgstr "メッセージ付きでエラーを発生させます。"

#: xml/cut-assertions.xml:2856(title)
msgid "cut_error_errno ()"
msgstr ""

#: xml/cut-assertions.xml:2858(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_error_errno (<parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2885(title)
msgid "cut_fail ()"
msgstr ""

#: xml/cut-assertions.xml:2887(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_fail (<parameter>const <link linkend=\"char\"><type>char</type></link> *format</parameter>,\n"
"          <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2890(para)
msgid "Raises a failure with message."
msgstr "メッセージ付きでテストを失敗させます。"

#: xml/cut-assertions.xml:2908(title)
msgid "cut_pend ()"
msgstr ""

#: xml/cut-assertions.xml:2910(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_pend (<parameter>const <link linkend=\"char\"><type>char</type></link> *format</parameter>,\n"
"          <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2913(para) xml/cut-assertions.xml:2939(para)
msgid "Marks the test is pending with message. The test is stopped."
msgstr ""
"メッセージ付きでこのテストが未解決であると印を付けます。テストはここで中断し"
"ます。"

#: xml/cut-assertions.xml:2932(title)
msgid "cut_pending ()"
msgstr ""

#: xml/cut-assertions.xml:2934(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_pending (<parameter>const <link linkend=\"char\"><type>char</type></link> *format</parameter>,\n"
"             <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2937(para)
#, fuzzy
msgid ""
"<literal>cut_pending</literal> has been deprecated since version 0.4 and "
"should not be used in newly-written code."
msgstr ""
"<literal>GCutEgg</literal>は非推奨です。新しいコードでは使わないでください。"

#: xml/cut-assertions.xml:2937(para)
#, fuzzy
msgid ""
"Use <link linkend=\"cut-pend\"><function>cut_pend()</function></link> "
"instead."
msgstr ""
"<link linkend=\"cut-set-expected\"><function>cut_set_expected()</function></"
"link>も見てください。"

#: xml/cut-assertions.xml:2958(title)
msgid "cut_notify ()"
msgstr ""

#: xml/cut-assertions.xml:2960(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_notify (<parameter>const <link linkend=\"char\"><type>char</type></link> *format</parameter>,\n"
"            <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2963(para)
msgid "Leaves a notification message. The test is continued."
msgstr "通知用のメッセージを残します。テストは続行します。"

#: xml/cut-assertions.xml:2981(title)
msgid "cut_omit ()"
msgstr ""

#: xml/cut-assertions.xml:2983(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_omit (<parameter>const <link linkend=\"char\"><type>char</type></link> *format</parameter>,\n"
"          <parameter>...</parameter>);"
msgstr ""

#: xml/cut-assertions.xml:2986(para)
msgid "Omit the test."
msgstr "このテストを省略します。"

#: xml/cut-assertions.xml:3010(title)
msgid "cut_return ()"
msgstr ""

#: xml/cut-assertions.xml:3012(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"cut_return (<parameter><type>void</type></parameter>);"
msgstr ""

#: xml/cut-assertions.xml:3014(para)
msgid "Finish the test."
msgstr "このテストを終了します。"

#: xml/cppcutter.xml:7(refentrytitle) xml/cppcutter.xml:12(refname)
#: xml/api-index-full.xml:142(link) xml/api-index-full.xml:148(link)
#: xml/api-index-full.xml:150(link) xml/api-index-full.xml:152(link)
#: xml/api-index-deprecated.xml:24(link) xml/api-index-deprecated.xml:25(link)
#: xml/api-index-1.1.0.xml:49(link) xml/api-index-1.0.9.xml:7(link)
#: xml/api-index-1.0.9.xml:9(link) xml/api-index-1.0.9.xml:10(link)
msgid "CppCutter"
msgstr ""

#: xml/cppcutter.xml:13(refpurpose)
msgid "Cutter with C++ support."
msgstr "C++サポート付きのCutter。"

#: xml/cppcutter.xml:23(link) xml/cppcutter.xml:107(primary)
#: xml/api-index-full.xml:152(link) xml/api-index-1.1.0.xml:49(link)
msgid "cppcut_message"
msgstr ""

#: xml/cppcutter.xml:36(link) xml/cppcutter.xml:138(title)
#: xml/cppcutter.xml:139(primary) xml/api-index-full.xml:142(link)
#: xml/api-index-1.0.9.xml:7(link)
msgid "CPPCUTTER_ENABLED"
msgstr ""

#: xml/cppcutter.xml:37(link) xml/cppcutter.xml:145(title)
#: xml/cppcutter.xml:146(primary) xml/api-index-full.xml:148(link)
#: xml/api-index-deprecated.xml:24(link) xml/api-index-1.0.9.xml:9(link)
msgid "CPPCUT_BEGIN_TEST_DECLS"
msgstr ""

#: xml/cppcutter.xml:38(link) xml/cppcutter.xml:164(title)
#: xml/cppcutter.xml:165(primary) xml/api-index-full.xml:150(link)
#: xml/api-index-deprecated.xml:25(link) xml/api-index-1.0.9.xml:10(link)
msgid "CPPCUT_END_TEST_DECLS"
msgstr ""

#: xml/cppcutter.xml:48(para)
msgid ""
"CppCutter provides C++ friendly interface of Cutter. If you want to write "
"tests with C++, it's good idea that you consider CppCutter to be used too."
msgstr ""
"CppCutterはC++で便利な機能をCutterに追加します。C++でテストを書きたい場合は"
"CppCutterの使用を検討してください。"

#: xml/cppcutter.xml:51(para)
msgid ""
"It's easy to use CppCutter. You just include &lt;cppcutter.h&gt; instead of "
"&lt;cutter.h&gt; and use cppcutter.pc instead of cutter.pc:"
msgstr ""
"CppCutterを使うことは簡単です。&lt;cutter.h&gt;の代わりに&lt;cppcutter.h&gt;"
"をinlcudeして、cutter.pcの代わりにcppcutter.pcを使うだけです。"

#: xml/cppcutter.xml:54(para)
msgid "test-xxx.cpp:"
msgstr ""

#: xml/cppcutter.xml:74(para)
msgid ""
"Test functions are defined in namespace. Naming convention is the same as "
"Cutter. i.e.: 'test_...' function is test function, 'setup' or 'cut_setup' "
"is setup function and 'teardown' or 'cut_teardown' is teardown function."
msgstr ""
"テスト関数はnamespaceの中に定義します。名前付け規則はCutterと同じです。つま"
"り、'test_...'関数はテスト関数、'setup'または'cut_setup'は初期化関"
"数、'teardown'または'cut_teardown'は後始末関数になります。"

#: xml/cppcutter.xml:79(para)
msgid "test-calc.cpp:"
msgstr ""

#: xml/cppcutter.xml:99(para)
msgid ""
"You just define a function for adding a new test. You don't need to use "
"magical macros."
msgstr ""
"新しいテストを追加するときはいつも通り関数を定義するだけです。よくわからない"
"マクロを使う必要はありません。"

#: xml/cppcutter.xml:106(title)
msgid "cppcut_message()"
msgstr ""

#: xml/cppcutter.xml:108(programlisting)
#, no-wrap
msgid "#define             cppcut_message(...)"
msgstr ""

#: xml/cppcutter.xml:109(para)
msgid ""
"Specifies optional assertion message with C++ friendly API. The optional "
"message can be specified with <link linkend=\"printf\"><function>printf()</"
"function></link> style API or \"&lt;&lt;\" stream style API."
msgstr ""
"C++らしいAPIで検証の省略可能なメッセージを指定します。メッセージは<link "
"linkend=\"printf\"><function>printf()</function></link>と同じAPIか\"&lt;&lt;"
"\"を使ったストリームと同じAPIを使って指定します。"

#: xml/cppcutter.xml:140(programlisting)
#, no-wrap
msgid "#define CPPCUTTER_ENABLED 1\n"
msgstr ""

#: xml/cppcutter.xml:142(para)
msgid "Defined when CppCutter is enabled."
msgstr "CppCutterが有効なとき定義されます。"

#: xml/cppcutter.xml:147(programlisting)
#, no-wrap
msgid "#define CPPCUT_BEGIN_TEST_DECLS extern \"C\" {\n"
msgstr ""

#: xml/cppcutter.xml:149(para)
#, fuzzy
msgid ""
"<literal>CPPCUT_BEGIN_TEST_DECLS</literal> has been deprecated since version "
"1.1.0 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_BEGIN_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりま"
"した。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/cppcutter.xml:149(para) xml/cppcutter.xml:168(para)
msgid "Use namespace instead."
msgstr ""

#: xml/cppcutter.xml:151(para)
msgid ""
"Use <link linkend=\"CPPCUT-BEGIN-TEST-DECLS:CAPS"
"\"><literal>CPPCUT_BEGIN_TEST_DECLS</literal></link> and <link linkend="
"\"CPPCUT-END-TEST-DECLS:CAPS\"><literal>CPPCUT_END_TEST_DECLS</literal></"
"link> pair for prototype declarations for test functions:"
msgstr ""
"テスト関数のプロトタイプ宣言は<link linkend=\"CPPCUT-BEGIN-TEST-DECLS:CAPS"
"\"><literal>CPPCUT_BEGIN_TEST_DECLS</literal></link>と<link linkend=\"CPPCUT-"
"END-TEST-DECLS:CAPS\"><literal>CPPCUT_END_TEST_DECLS</literal></link>で囲みま"
"す:"

#: xml/cppcutter.xml:160(para)
msgid ""
"Those macros just surround prototype declarations for test functions with "
"'extern \"C\" {...}'."
msgstr ""
"このマクロは単にテスト関数のプロトタイプ宣言を'extern \"C\" {...}'で囲むだけ"
"です。"

#: xml/cppcutter.xml:166(programlisting)
#, no-wrap
msgid "#define CPPCUT_END_TEST_DECLS }\n"
msgstr ""

#: xml/cppcutter.xml:168(para)
#, fuzzy
msgid ""
"<literal>CPPCUT_END_TEST_DECLS</literal> has been deprecated since version "
"1.1.0 and should not be used in newly-written code."
msgstr ""
"<literal>CPPCUT_END_TEST_DECLS</literal>はバージョン1.1.0から非推奨になりまし"
"た。新しく書くコードでは使わないでください。代わりにnamespaceを使ってくださ"
"い。"

#: xml/cppcutter.xml:170(para)
msgid ""
"See <link linkend=\"CPPCUT-BEGIN-TEST-DECLS:CAPS"
"\"><literal>CPPCUT_BEGIN_TEST_DECLS</literal></link>."
msgstr ""
"<link linkend=\"CPPCUT-BEGIN-TEST-DECLS:CAPS"
"\"><literal>CPPCUT_BEGIN_TEST_DECLS</literal></link>を見て下さい。"

#: xml/cppcutter.xml:177(link) xml/cppcut-assertions.xml:7(refentrytitle)
#: xml/cppcut-assertions.xml:12(refname) xml/api-index-full.xml:143(link)
#: xml/api-index-full.xml:144(link) xml/api-index-full.xml:145(link)
#: xml/api-index-full.xml:146(link) xml/api-index-full.xml:147(link)
#: xml/api-index-1.2.0.xml:7(link) xml/api-index-1.2.0.xml:8(link)
#: xml/api-index-1.2.0.xml:9(link) xml/api-index-1.2.0.xml:10(link)
#: xml/api-index-1.0.9.xml:8(link)
msgid "Assertions with C++ support"
msgstr "C++サポート付きの検証"

#: xml/cppcut-test.xml:7(refentrytitle) xml/cppcut-test.xml:12(refname)
msgid "Test class for C++."
msgstr ""

#: xml/cppcut-test.xml:13(refpurpose)
msgid "Adds C++ exception support to CutTest."
msgstr ""

#: xml/cppcut-test.xml:23(returnvalue) xml/api-index-full.xml:154(link)
msgid "CppCutTest"
msgstr ""

#: xml/cppcut-test.xml:23(entry)
#, fuzzy
msgid "<link linkend=\"CppCutTest\"><placeholder-1/></link> *"
msgstr ""
"<link linkend=\"CutCallbackFunction\">CutCallbackFunction<type></type></link>"
"コールバック。"

#: xml/cppcut-test.xml:24(link) xml/cppcut-test.xml:40(primary)
#: xml/api-index-full.xml:154(link)
msgid "cppcut_test_new"
msgstr ""

#: xml/cppcut-test.xml:39(title)
msgid "cppcut_test_new ()"
msgstr ""

#: xml/cppcut-test.xml:41(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CppCutTest\"><returnvalue>CppCutTest</returnvalue></link> *\n"
"cppcut_test_new (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *name</parameter>,\n"
"                 <parameter><link linkend=\"CutTestFunction\"><type>CutTestFunction</type></link> function</parameter>);"
msgstr ""

#: xml/cppcut-test-methods.xml:7(refentrytitle)
#: xml/cppcut-test-methods.xml:12(refname) xml/api-index-full.xml:479(link)
#: xml/api-index-full.xml:520(link)
msgid "cppcut-test-methods"
msgstr ""

#: xml/cppcut-test-methods.xml:24(link) xml/cppcut-test-methods.xml:44(primary)
#: xml/api-index-full.xml:520(link)
msgid "long_jump"
msgstr ""

#: xml/cppcut-test-methods.xml:26(link) xml/cppcut-test-methods.xml:55(primary)
#: xml/api-index-full.xml:479(link)
msgid "invoke"
msgstr ""

#: xml/cppcut-test-methods.xml:43(title)
msgid "long_jump ()"
msgstr ""

#: xml/cppcut-test-methods.xml:45(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"long_jump (<parameter><link linkend=\"CutTestClass\"><type>CutTestClass</type></link> *cut_test_class</parameter>,\n"
"           <parameter><link linkend=\"CutTest\"><type>CutTest</type></link> *test</parameter>,\n"
"           <parameter><link linkend=\"jmp-buf\"><type>jmp_buf</type></link> *jump_buffer</parameter>,\n"
"           <parameter><link linkend=\"gint\"><type>gint</type></link> value</parameter>);"
msgstr ""

#: xml/cppcut-test-methods.xml:54(title)
msgid "invoke ()"
msgstr ""

#: xml/cppcut-test-methods.xml:56(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"void\"><returnvalue>void</returnvalue></link>\n"
"invoke (<parameter><link linkend=\"CutTestClass\"><type>CutTestClass</type></link> *cut_test_class</parameter>,\n"
"        <parameter><link linkend=\"CutTest\"><type>CutTest</type></link> *test</parameter>,\n"
"        <parameter><link linkend=\"CutTestContext\"><type>CutTestContext</type></link> *test_context</parameter>,\n"
"        <parameter><link linkend=\"CutRunContext\"><type>CutRunContext</type></link> *run_context</parameter>);"
msgstr ""

#: xml/cppcut-test-iterator.xml:7(refentrytitle)
#: xml/cppcut-test-iterator.xml:12(refname)
msgid "TestIterator class for C++."
msgstr ""

#: xml/cppcut-test-iterator.xml:13(refpurpose)
msgid "Creates CppCutIteratedTest."
msgstr ""

#: xml/cppcut-test-iterator.xml:23(returnvalue)
#: xml/api-index-full.xml:153(link)
msgid "CppCutTestIterator"
msgstr ""

#: xml/cppcut-test-iterator.xml:23(entry)
#, fuzzy
msgid "<link linkend=\"CppCutTestIterator\"><placeholder-1/></link> *"
msgstr ""
"<link linkend=\"CutCallbackFunction\">CutCallbackFunction<type></type></link>"
"コールバック。"

#: xml/cppcut-test-iterator.xml:24(link)
#: xml/cppcut-test-iterator.xml:40(primary) xml/api-index-full.xml:153(link)
msgid "cppcut_test_iterator_new"
msgstr ""

#: xml/cppcut-test-iterator.xml:39(title)
msgid "cppcut_test_iterator_new ()"
msgstr ""

#: xml/cppcut-test-iterator.xml:41(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CppCutTestIterator\"><returnvalue>CppCutTestIterator</returnvalue></link> *\n"
"cppcut_test_iterator_new (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *name</parameter>,\n"
"                          <parameter><link linkend=\"CutIteratedTestFunction\"><type>CutIteratedTestFunction</type></link> test_function</parameter>,\n"
"                          <parameter><link linkend=\"CutDataSetupFunction\"><type>CutDataSetupFunction</type></link> data_setup_function</parameter>);"
msgstr ""

#: xml/cppcut-macros.xml:7(refentrytitle) xml/cppcut-macros.xml:12(refname)
#: xml/api-index-full.xml:149(link)
msgid "cppcut-macros"
msgstr ""

#: xml/cppcut-macros.xml:23(link) xml/cppcut-macros.xml:44(title)
#: xml/cppcut-macros.xml:45(primary) xml/api-index-full.xml:149(link)
msgid "CPPCUT_DECL"
msgstr ""

#: xml/cppcut-macros.xml:46(programlisting)
#, no-wrap
msgid "#    define CPPCUT_DECL __declspec(dllexport)\n"
msgstr ""

#: xml/cppcut-iterated-test.xml:7(refentrytitle)
#: xml/cppcut-iterated-test.xml:12(refname)
msgid "Iterated test class for C++."
msgstr ""

#: xml/cppcut-iterated-test.xml:13(refpurpose)
msgid "Adds C++ exception support to CutIteratedTest."
msgstr ""

#: xml/cppcut-iterated-test.xml:23(returnvalue)
#: xml/api-index-full.xml:151(link)
msgid "CppCutIteratedTest"
msgstr ""

#: xml/cppcut-iterated-test.xml:23(entry)
#, fuzzy
msgid "<link linkend=\"CppCutIteratedTest\"><placeholder-1/></link> *"
msgstr ""
"<link linkend=\"CutCallbackFunction\">CutCallbackFunction<type></type></link>"
"コールバック。"

#: xml/cppcut-iterated-test.xml:24(link)
#: xml/cppcut-iterated-test.xml:40(primary) xml/api-index-full.xml:151(link)
msgid "cppcut_iterated_test_new"
msgstr ""

#: xml/cppcut-iterated-test.xml:39(title)
msgid "cppcut_iterated_test_new ()"
msgstr ""

#: xml/cppcut-iterated-test.xml:41(programlisting)
#, no-wrap
msgid ""
"<link linkend=\"CppCutIteratedTest\"><returnvalue>CppCutIteratedTest</returnvalue></link> *\n"
"cppcut_iterated_test_new (<parameter>const <link linkend=\"gchar\"><type>gchar</type></link> *name</parameter>,\n"
"                          <parameter><link linkend=\"CutIteratedTestFunction\"><type>CutIteratedTestFunction</type></link> function</parameter>,\n"
"                          <parameter><link linkend=\"CutTestData\"><type>CutTestData</type></link> *data</parameter>);"
msgstr ""

#: xml/cppcut-assertions.xml:13(refpurpose)
msgid "Checks that your program works as you expect with C++ support."
msgstr ""
"C++サポート付きであなたのプログラムが期待通りに動作しているかを検証します。"

#: xml/cppcut-assertions.xml:24(link) xml/cppcut-assertions.xml:44(primary)
#: xml/api-index-full.xml:143(link) xml/api-index-1.0.9.xml:8(link)
msgid "cppcut_assert_equal"
msgstr ""

#: xml/cppcut-assertions.xml:25(link) xml/cppcut-assertions.xml:81(primary)
#: xml/api-index-full.xml:144(link) xml/api-index-1.2.0.xml:7(link)
msgid "cppcut_assert_not_equal"
msgstr ""

#: xml/cppcut-assertions.xml:26(link) xml/cppcut-assertions.xml:118(primary)
#: xml/api-index-full.xml:146(link) xml/api-index-1.2.0.xml:9(link)
msgid "cppcut_assert_null"
msgstr ""

#: xml/cppcut-assertions.xml:27(link) xml/cppcut-assertions.xml:152(primary)
#: xml/api-index-full.xml:145(link) xml/api-index-1.2.0.xml:8(link)
msgid "cppcut_assert_not_null"
msgstr ""

#: xml/cppcut-assertions.xml:28(link) xml/cppcut-assertions.xml:186(primary)
#: xml/api-index-full.xml:147(link) xml/api-index-1.2.0.xml:10(link)
msgid "cppcut_assert_operator"
msgstr ""

#: xml/cppcut-assertions.xml:43(title)
msgid "cppcut_assert_equal()"
msgstr ""

#: xml/cppcut-assertions.xml:45(programlisting)
#, no-wrap
msgid "#define             cppcut_assert_equal(expected, actual, ...)"
msgstr ""

#: xml/cppcut-assertions.xml:46(para) xml/cppcut-assertions.xml:83(para)
#, fuzzy
msgid ""
"This assertion is a generic method based on template. You can pass any "
"object's reference as <parameter>expected</parameter> and <parameter>actual</"
"parameter> ."
msgstr ""
"この検証はテンプレートを利用しています。任意のオブジェクトのリファレンスを"
"<parameter>expected</parameter>と<parameter>actual</parameter>に渡せます。"

#: xml/cppcut-assertions.xml:75(para) xml/cppcut-assertions.xml:112(para)
#: xml/cppcut-assertions.xml:146(para) xml/cppcut-assertions.xml:180(para)
#: xml/cppcut-assertions.xml:220(para)
msgid ""
"an optional message. Use <link linkend=\"cppcut-message"
"\"><function>cppcut_message()</function></link> for this."
msgstr ""
"追加メッセージ（省略可能）。詳細は<link linkend=\"cppcut-message"
"\"><function>cppcut_message()</function></link>を見てください。"

#: xml/cppcut-assertions.xml:80(title)
msgid "cppcut_assert_not_equal()"
msgstr ""

#: xml/cppcut-assertions.xml:82(programlisting)
#, no-wrap
msgid "#define             cppcut_assert_not_equal(expected, actual, ...)"
msgstr ""

#: xml/cppcut-assertions.xml:115(para) xml/cppcut-assertions.xml:149(para)
#: xml/cppcut-assertions.xml:183(para) xml/cppcut-assertions.xml:223(para)
msgid "Since: <link linkend=\"api-index-1.2.0\">1.2.0</link>"
msgstr ""

#: xml/cppcut-assertions.xml:117(title)
msgid "cppcut_assert_null()"
msgstr ""

#: xml/cppcut-assertions.xml:119(programlisting)
#, no-wrap
msgid "#define             cppcut_assert_null(object, ...)"
msgstr ""

#: xml/cppcut-assertions.xml:120(para) xml/cppcut-assertions.xml:154(para)
#, fuzzy
msgid ""
"This assertion is a generic method based on template. You can pass any "
"object's pointer as <parameter>object</parameter> ."
msgstr ""
"この検証はテンプレートを利用しています。任意のオブジェクトのポインタを"
"<parameter>object</parameter>に渡せます。"

#: xml/cppcut-assertions.xml:123(para)
msgid ""
"Passes if <parameter>object</parameter> is <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>."
msgstr ""
"<parameter>object</parameter>が<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>のときパスします。"

#: xml/cppcut-assertions.xml:143(para) xml/cppcut-assertions.xml:177(para)
msgid "the object to be checked."
msgstr "チェックするオブジェクト。"

#: xml/cppcut-assertions.xml:151(title)
msgid "cppcut_assert_not_null()"
msgstr ""

#: xml/cppcut-assertions.xml:153(programlisting)
#, no-wrap
msgid "#define             cppcut_assert_not_null(object, ...)"
msgstr ""

#: xml/cppcut-assertions.xml:157(para)
msgid ""
"Passes if <parameter>object</parameter> is not <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link>."
msgstr ""
"<parameter>object</parameter>が<link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link>以外のときパスします。"

#: xml/cppcut-assertions.xml:185(title)
msgid "cppcut_assert_operator()"
msgstr ""

#: xml/cppcut-assertions.xml:187(programlisting)
#, no-wrap
msgid "#define             cppcut_assert_operator(lhs, operator, rhs, ...)"
msgstr ""

#: xml/cppcut-assertions.xml:188(para)
#, fuzzy
msgid ""
"This assertion is a generic method based on template. You can pass any "
"object as <parameter>lhs</parameter> and <parameter>rhs</parameter> ."
msgstr ""
"この検証はテンプレートを利用しています。任意のオブジェクトを<parameter>lhs</"
"parameter>と<parameter>rhs</parameter>に渡せます。"

#: xml/api-index-full.xml:6(title) xml/api-index-deprecated.xml:6(title)
#: xml/api-index-1.1.5.xml:6(title) xml/api-index-1.1.4.xml:6(title)
#: xml/api-index-1.1.3.xml:6(title) xml/api-index-1.1.1.xml:6(title)
#: xml/api-index-1.1.0.xml:6(title) xml/api-index-1.0.xml:6(title)
#: xml/api-index-1.0.7.xml:6(title) xml/api-index-1.0.6.xml:6(title)
#: xml/api-index-1.0.5.xml:6(title) xml/api-index-1.0.3.xml:6(title)
#: xml/api-index-1.0.2.xml:6(title) xml/api-index-0.9.xml:6(title)
#: xml/api-index-0.8.xml:6(title) xml/api-index-0.3.xml:6(title)
msgid "A"
msgstr ""

#: xml/api-index-full.xml:7(primaryie) xml/api-index-full.xml:8(primaryie)
#: xml/api-index-full.xml:11(primaryie) xml/api-index-full.xml:13(primaryie)
#: xml/api-index-full.xml:15(primaryie) xml/api-index-full.xml:22(primaryie)
#: xml/api-index-full.xml:23(primaryie) xml/api-index-full.xml:24(primaryie)
#: xml/api-index-full.xml:25(primaryie) xml/api-index-full.xml:26(primaryie)
#: xml/api-index-full.xml:27(primaryie) xml/api-index-full.xml:28(primaryie)
#: xml/api-index-full.xml:29(primaryie) xml/api-index-full.xml:30(primaryie)
#: xml/api-index-full.xml:31(primaryie) xml/api-index-full.xml:35(primaryie)
#: xml/api-index-full.xml:43(primaryie) xml/api-index-full.xml:44(primaryie)
#: xml/api-index-full.xml:45(primaryie) xml/api-index-full.xml:46(primaryie)
#: xml/api-index-full.xml:47(primaryie) xml/api-index-full.xml:48(primaryie)
#: xml/api-index-full.xml:49(primaryie) xml/api-index-full.xml:50(primaryie)
#: xml/api-index-full.xml:51(primaryie) xml/api-index-full.xml:52(primaryie)
#: xml/api-index-full.xml:61(primaryie) xml/api-index-full.xml:63(primaryie)
#: xml/api-index-full.xml:65(primaryie) xml/api-index-full.xml:66(primaryie)
#: xml/api-index-full.xml:67(primaryie) xml/api-index-full.xml:68(primaryie)
#: xml/api-index-full.xml:69(primaryie) xml/api-index-full.xml:70(primaryie)
#: xml/api-index-full.xml:71(primaryie) xml/api-index-full.xml:72(primaryie)
#: xml/api-index-full.xml:73(primaryie) xml/api-index-full.xml:74(primaryie)
#: xml/api-index-full.xml:80(primaryie) xml/api-index-full.xml:81(primaryie)
#: xml/api-index-full.xml:82(primaryie) xml/api-index-full.xml:83(primaryie)
#: xml/api-index-full.xml:84(primaryie) xml/api-index-full.xml:85(primaryie)
#: xml/api-index-full.xml:86(primaryie) xml/api-index-full.xml:87(primaryie)
#: xml/api-index-full.xml:88(primaryie) xml/api-index-full.xml:89(primaryie)
#: xml/api-index-full.xml:94(primaryie) xml/api-index-full.xml:95(primaryie)
#: xml/api-index-full.xml:96(primaryie) xml/api-index-full.xml:97(primaryie)
#: xml/api-index-full.xml:98(primaryie) xml/api-index-full.xml:113(primaryie)
#: xml/api-index-full.xml:114(primaryie) xml/api-index-full.xml:115(primaryie)
#: xml/api-index-full.xml:116(primaryie) xml/api-index-full.xml:117(primaryie)
#: xml/api-index-full.xml:118(primaryie) xml/api-index-full.xml:119(primaryie)
#: xml/api-index-full.xml:120(primaryie) xml/api-index-full.xml:121(primaryie)
#: xml/api-index-full.xml:122(primaryie) xml/api-index-full.xml:123(primaryie)
#: xml/api-index-full.xml:124(primaryie) xml/api-index-full.xml:125(primaryie)
#: xml/api-index-full.xml:126(primaryie) xml/api-index-full.xml:142(primaryie)
#: xml/api-index-full.xml:143(primaryie) xml/api-index-full.xml:144(primaryie)
#: xml/api-index-full.xml:145(primaryie) xml/api-index-full.xml:146(primaryie)
#: xml/api-index-full.xml:147(primaryie) xml/api-index-full.xml:148(primaryie)
#: xml/api-index-full.xml:149(primaryie) xml/api-index-full.xml:150(primaryie)
#: xml/api-index-full.xml:152(primaryie) xml/api-index-full.xml:161(primaryie)
#: xml/api-index-full.xml:164(primaryie) xml/api-index-full.xml:168(primaryie)
#: xml/api-index-full.xml:172(primaryie) xml/api-index-full.xml:174(primaryie)
#: xml/api-index-full.xml:176(primaryie) xml/api-index-full.xml:177(primaryie)
#: xml/api-index-full.xml:178(primaryie) xml/api-index-full.xml:195(primaryie)
#: xml/api-index-full.xml:253(primaryie) xml/api-index-full.xml:262(primaryie)
#: xml/api-index-full.xml:269(primaryie) xml/api-index-full.xml:275(primaryie)
#: xml/api-index-full.xml:280(primaryie) xml/api-index-full.xml:301(primaryie)
#: xml/api-index-full.xml:311(primaryie) xml/api-index-full.xml:351(primaryie)
#: xml/api-index-full.xml:356(primaryie) xml/api-index-full.xml:364(primaryie)
#: xml/api-index-full.xml:365(primaryie) xml/api-index-full.xml:369(primaryie)
#: xml/api-index-full.xml:370(primaryie) xml/api-index-full.xml:372(primaryie)
#: xml/api-index-full.xml:375(primaryie) xml/api-index-full.xml:376(primaryie)
#: xml/api-index-full.xml:381(primaryie) xml/api-index-full.xml:431(primaryie)
#: xml/api-index-full.xml:434(primaryie) xml/api-index-full.xml:445(primaryie)
#: xml/api-index-full.xml:455(primaryie) xml/api-index-full.xml:456(primaryie)
#: xml/api-index-full.xml:461(primaryie) xml/api-index-full.xml:463(primaryie)
#: xml/api-index-full.xml:464(primaryie) xml/api-index-full.xml:465(primaryie)
#: xml/api-index-full.xml:466(primaryie) xml/api-index-full.xml:467(primaryie)
#: xml/api-index-full.xml:468(primaryie) xml/api-index-full.xml:471(primaryie)
#: xml/api-index-full.xml:472(primaryie) xml/api-index-full.xml:473(primaryie)
#: xml/api-index-full.xml:474(primaryie) xml/api-index-full.xml:477(primaryie)
#: xml/api-index-full.xml:487(primaryie) xml/api-index-full.xml:508(primaryie)
#: xml/api-index-full.xml:509(primaryie) xml/api-index-full.xml:510(primaryie)
#: xml/api-index-full.xml:511(primaryie) xml/api-index-full.xml:512(primaryie)
#: xml/api-index-full.xml:514(primaryie) xml/api-index-full.xml:516(primaryie)
#: xml/api-index-full.xml:517(primaryie) xml/api-index-full.xml:518(primaryie)
#: xml/api-index-full.xml:519(primaryie) xml/api-index-full.xml:527(primaryie)
#: xml/api-index-full.xml:528(primaryie) xml/api-index-full.xml:529(primaryie)
#: xml/api-index-full.xml:530(primaryie) xml/api-index-full.xml:531(primaryie)
#: xml/api-index-full.xml:532(primaryie) xml/api-index-full.xml:533(primaryie)
#: xml/api-index-full.xml:534(primaryie) xml/api-index-full.xml:547(primaryie)
#: xml/api-index-full.xml:554(primaryie) xml/api-index-full.xml:557(primaryie)
#: xml/api-index-full.xml:559(primaryie) xml/api-index-full.xml:564(primaryie)
#: xml/api-index-full.xml:620(primaryie) xml/api-index-full.xml:621(primaryie)
#: xml/api-index-full.xml:622(primaryie) xml/api-index-full.xml:623(primaryie)
#: xml/api-index-full.xml:627(primaryie) xml/api-index-full.xml:642(primaryie)
#: xml/api-index-full.xml:643(primaryie) xml/api-index-full.xml:644(primaryie)
#: xml/api-index-full.xml:645(primaryie) xml/api-index-full.xml:646(primaryie)
#: xml/api-index-full.xml:655(primaryie) xml/api-index-full.xml:656(primaryie)
#: xml/api-index-full.xml:657(primaryie) xml/api-index-full.xml:660(primaryie)
#: xml/api-index-deprecated.xml:7(primaryie)
#: xml/api-index-deprecated.xml:24(primaryie)
#: xml/api-index-deprecated.xml:25(primaryie)
#: xml/api-index-deprecated.xml:30(primaryie)
#: xml/api-index-deprecated.xml:51(primaryie)
#: xml/api-index-deprecated.xml:52(primaryie)
#: xml/api-index-deprecated.xml:53(primaryie)
#: xml/api-index-deprecated.xml:54(primaryie)
#: xml/api-index-deprecated.xml:55(primaryie)
#: xml/api-index-deprecated.xml:56(primaryie)
#: xml/api-index-deprecated.xml:57(primaryie)
#: xml/api-index-deprecated.xml:58(primaryie)
#: xml/api-index-deprecated.xml:59(primaryie)
#: xml/api-index-deprecated.xml:60(primaryie)
#: xml/api-index-1.2.0.xml:7(primaryie) xml/api-index-1.2.0.xml:8(primaryie)
#: xml/api-index-1.2.0.xml:9(primaryie) xml/api-index-1.2.0.xml:10(primaryie)
#: xml/api-index-1.1.4.xml:7(primaryie) xml/api-index-1.1.4.xml:8(primaryie)
#: xml/api-index-1.1.3.xml:7(primaryie) xml/api-index-1.1.3.xml:8(primaryie)
#: xml/api-index-1.1.3.xml:12(primaryie) xml/api-index-1.1.3.xml:14(primaryie)
#: xml/api-index-1.1.3.xml:15(primaryie) xml/api-index-1.1.3.xml:16(primaryie)
#: xml/api-index-1.1.3.xml:25(primaryie) xml/api-index-1.1.2.xml:7(primaryie)
#: xml/api-index-1.1.1.xml:7(primaryie) xml/api-index-1.1.1.xml:10(primaryie)
#: xml/api-index-1.1.1.xml:16(primaryie) xml/api-index-1.1.1.xml:19(primaryie)
#: xml/api-index-1.1.0.xml:7(primaryie) xml/api-index-1.1.0.xml:8(primaryie)
#: xml/api-index-1.1.0.xml:9(primaryie) xml/api-index-1.1.0.xml:10(primaryie)
#: xml/api-index-1.1.0.xml:11(primaryie) xml/api-index-1.1.0.xml:12(primaryie)
#: xml/api-index-1.1.0.xml:13(primaryie) xml/api-index-1.1.0.xml:14(primaryie)
#: xml/api-index-1.1.0.xml:15(primaryie) xml/api-index-1.1.0.xml:16(primaryie)
#: xml/api-index-1.1.0.xml:17(primaryie) xml/api-index-1.1.0.xml:18(primaryie)
#: xml/api-index-1.1.0.xml:19(primaryie) xml/api-index-1.1.0.xml:20(primaryie)
#: xml/api-index-1.1.0.xml:21(primaryie) xml/api-index-1.1.0.xml:22(primaryie)
#: xml/api-index-1.1.0.xml:23(primaryie) xml/api-index-1.1.0.xml:24(primaryie)
#: xml/api-index-1.1.0.xml:25(primaryie) xml/api-index-1.1.0.xml:26(primaryie)
#: xml/api-index-1.1.0.xml:27(primaryie) xml/api-index-1.1.0.xml:28(primaryie)
#: xml/api-index-1.1.0.xml:29(primaryie) xml/api-index-1.1.0.xml:30(primaryie)
#: xml/api-index-1.1.0.xml:31(primaryie) xml/api-index-1.1.0.xml:32(primaryie)
#: xml/api-index-1.1.0.xml:33(primaryie) xml/api-index-1.1.0.xml:34(primaryie)
#: xml/api-index-1.1.0.xml:35(primaryie) xml/api-index-1.1.0.xml:36(primaryie)
#: xml/api-index-1.1.0.xml:37(primaryie) xml/api-index-1.1.0.xml:38(primaryie)
#: xml/api-index-1.1.0.xml:39(primaryie) xml/api-index-1.1.0.xml:40(primaryie)
#: xml/api-index-1.1.0.xml:41(primaryie) xml/api-index-1.1.0.xml:42(primaryie)
#: xml/api-index-1.1.0.xml:43(primaryie) xml/api-index-1.1.0.xml:44(primaryie)
#: xml/api-index-1.1.0.xml:45(primaryie) xml/api-index-1.1.0.xml:46(primaryie)
#: xml/api-index-1.1.0.xml:49(primaryie) xml/api-index-1.0.9.xml:7(primaryie)
#: xml/api-index-1.0.9.xml:8(primaryie) xml/api-index-1.0.9.xml:9(primaryie)
#: xml/api-index-1.0.9.xml:10(primaryie) xml/api-index-1.0.9.xml:16(primaryie)
#: xml/api-index-1.0.9.xml:17(primaryie) xml/api-index-1.0.8.xml:10(primaryie)
#: xml/api-index-1.0.7.xml:26(primaryie) xml/api-index-1.0.6.xml:17(primaryie)
#: xml/api-index-1.0.6.xml:48(primaryie) xml/api-index-1.0.6.xml:71(primaryie)
#: xml/api-index-1.0.6.xml:81(primaryie) xml/api-index-1.0.5.xml:7(primaryie)
#: xml/api-index-1.0.5.xml:8(primaryie) xml/api-index-1.0.5.xml:9(primaryie)
#: xml/api-index-1.0.5.xml:36(primaryie) xml/api-index-1.0.5.xml:38(primaryie)
#: xml/api-index-1.0.5.xml:40(primaryie) xml/api-index-1.0.5.xml:41(primaryie)
#: xml/api-index-1.0.5.xml:42(primaryie) xml/api-index-1.0.5.xml:43(primaryie)
#: xml/api-index-1.0.5.xml:44(primaryie) xml/api-index-1.0.5.xml:45(primaryie)
#: xml/api-index-1.0.5.xml:46(primaryie) xml/api-index-1.0.5.xml:69(primaryie)
#: xml/api-index-1.0.5.xml:70(primaryie) xml/api-index-1.0.3.xml:7(primaryie)
#: xml/api-index-0.8.xml:12(primaryie) xml/api-index-0.8.xml:13(primaryie)
#: xml/api-index-0.8.xml:14(primaryie) xml/api-index-0.8.xml:20(primaryie)
msgid "<placeholder-1/>, macro in <placeholder-2/>"
msgstr ""

#: xml/api-index-full.xml:9(primaryie) xml/api-index-full.xml:10(primaryie)
#: xml/api-index-full.xml:12(primaryie) xml/api-index-full.xml:14(primaryie)
#: xml/api-index-full.xml:16(primaryie) xml/api-index-full.xml:17(primaryie)
#: xml/api-index-full.xml:18(primaryie) xml/api-index-full.xml:19(primaryie)
#: xml/api-index-full.xml:20(primaryie) xml/api-index-full.xml:21(primaryie)
#: xml/api-index-full.xml:32(primaryie) xml/api-index-full.xml:33(primaryie)
#: xml/api-index-full.xml:34(primaryie) xml/api-index-full.xml:36(primaryie)
#: xml/api-index-full.xml:37(primaryie) xml/api-index-full.xml:38(primaryie)
#: xml/api-index-full.xml:39(primaryie) xml/api-index-full.xml:40(primaryie)
#: xml/api-index-full.xml:41(primaryie) xml/api-index-full.xml:42(primaryie)
#: xml/api-index-full.xml:53(primaryie) xml/api-index-full.xml:54(primaryie)
#: xml/api-index-full.xml:55(primaryie) xml/api-index-full.xml:56(primaryie)
#: xml/api-index-full.xml:57(primaryie) xml/api-index-full.xml:58(primaryie)
#: xml/api-index-full.xml:59(primaryie) xml/api-index-full.xml:60(primaryie)
#: xml/api-index-full.xml:62(primaryie) xml/api-index-full.xml:64(primaryie)
#: xml/api-index-full.xml:75(primaryie) xml/api-index-full.xml:76(primaryie)
#: xml/api-index-full.xml:77(primaryie) xml/api-index-full.xml:78(primaryie)
#: xml/api-index-full.xml:79(primaryie) xml/api-index-full.xml:90(primaryie)
#: xml/api-index-full.xml:91(primaryie) xml/api-index-full.xml:92(primaryie)
#: xml/api-index-full.xml:93(primaryie) xml/api-index-full.xml:99(primaryie)
#: xml/api-index-full.xml:100(primaryie) xml/api-index-full.xml:101(primaryie)
#: xml/api-index-full.xml:102(primaryie) xml/api-index-full.xml:106(primaryie)
#: xml/api-index-full.xml:107(primaryie) xml/api-index-full.xml:108(primaryie)
#: xml/api-index-full.xml:109(primaryie) xml/api-index-full.xml:127(primaryie)
#: xml/api-index-full.xml:128(primaryie) xml/api-index-full.xml:129(primaryie)
#: xml/api-index-full.xml:130(primaryie) xml/api-index-full.xml:131(primaryie)
#: xml/api-index-full.xml:132(primaryie) xml/api-index-full.xml:133(primaryie)
#: xml/api-index-full.xml:134(primaryie) xml/api-index-full.xml:135(primaryie)
#: xml/api-index-full.xml:136(primaryie) xml/api-index-full.xml:137(primaryie)
#: xml/api-index-full.xml:138(primaryie) xml/api-index-full.xml:139(primaryie)
#: xml/api-index-full.xml:140(primaryie) xml/api-index-full.xml:141(primaryie)
#: xml/api-index-full.xml:151(primaryie) xml/api-index-full.xml:153(primaryie)
#: xml/api-index-full.xml:154(primaryie) xml/api-index-full.xml:162(primaryie)
#: xml/api-index-full.xml:163(primaryie) xml/api-index-full.xml:165(primaryie)
#: xml/api-index-full.xml:166(primaryie) xml/api-index-full.xml:167(primaryie)
#: xml/api-index-full.xml:171(primaryie) xml/api-index-full.xml:175(primaryie)
#: xml/api-index-full.xml:196(primaryie) xml/api-index-full.xml:197(primaryie)
#: xml/api-index-full.xml:198(primaryie) xml/api-index-full.xml:199(primaryie)
#: xml/api-index-full.xml:200(primaryie) xml/api-index-full.xml:201(primaryie)
#: xml/api-index-full.xml:202(primaryie) xml/api-index-full.xml:203(primaryie)
#: xml/api-index-full.xml:204(primaryie) xml/api-index-full.xml:205(primaryie)
#: xml/api-index-full.xml:206(primaryie) xml/api-index-full.xml:207(primaryie)
#: xml/api-index-full.xml:208(primaryie) xml/api-index-full.xml:209(primaryie)
#: xml/api-index-full.xml:210(primaryie) xml/api-index-full.xml:211(primaryie)
#: xml/api-index-full.xml:212(primaryie) xml/api-index-full.xml:213(primaryie)
#: xml/api-index-full.xml:214(primaryie) xml/api-index-full.xml:215(primaryie)
#: xml/api-index-full.xml:216(primaryie) xml/api-index-full.xml:217(primaryie)
#: xml/api-index-full.xml:218(primaryie) xml/api-index-full.xml:219(primaryie)
#: xml/api-index-full.xml:220(primaryie) xml/api-index-full.xml:221(primaryie)
#: xml/api-index-full.xml:222(primaryie) xml/api-index-full.xml:223(primaryie)
#: xml/api-index-full.xml:224(primaryie) xml/api-index-full.xml:225(primaryie)
#: xml/api-index-full.xml:226(primaryie) xml/api-index-full.xml:227(primaryie)
#: xml/api-index-full.xml:228(primaryie) xml/api-index-full.xml:229(primaryie)
#: xml/api-index-full.xml:230(primaryie) xml/api-index-full.xml:231(primaryie)
#: xml/api-index-full.xml:232(primaryie) xml/api-index-full.xml:233(primaryie)
#: xml/api-index-full.xml:234(primaryie) xml/api-index-full.xml:235(primaryie)
#: xml/api-index-full.xml:236(primaryie) xml/api-index-full.xml:237(primaryie)
#: xml/api-index-full.xml:238(primaryie) xml/api-index-full.xml:239(primaryie)
#: xml/api-index-full.xml:240(primaryie) xml/api-index-full.xml:241(primaryie)
#: xml/api-index-full.xml:242(primaryie) xml/api-index-full.xml:243(primaryie)
#: xml/api-index-full.xml:244(primaryie) xml/api-index-full.xml:245(primaryie)
#: xml/api-index-full.xml:246(primaryie) xml/api-index-full.xml:247(primaryie)
#: xml/api-index-full.xml:248(primaryie) xml/api-index-full.xml:249(primaryie)
#: xml/api-index-full.xml:250(primaryie) xml/api-index-full.xml:251(primaryie)
#: xml/api-index-full.xml:252(primaryie) xml/api-index-full.xml:254(primaryie)
#: xml/api-index-full.xml:255(primaryie) xml/api-index-full.xml:256(primaryie)
#: xml/api-index-full.xml:257(primaryie) xml/api-index-full.xml:258(primaryie)
#: xml/api-index-full.xml:259(primaryie) xml/api-index-full.xml:260(primaryie)
#: xml/api-index-full.xml:261(primaryie) xml/api-index-full.xml:263(primaryie)
#: xml/api-index-full.xml:264(primaryie) xml/api-index-full.xml:265(primaryie)
#: xml/api-index-full.xml:266(primaryie) xml/api-index-full.xml:267(primaryie)
#: xml/api-index-full.xml:268(primaryie) xml/api-index-full.xml:270(primaryie)
#: xml/api-index-full.xml:271(primaryie) xml/api-index-full.xml:272(primaryie)
#: xml/api-index-full.xml:273(primaryie) xml/api-index-full.xml:274(primaryie)
#: xml/api-index-full.xml:276(primaryie) xml/api-index-full.xml:277(primaryie)
#: xml/api-index-full.xml:278(primaryie) xml/api-index-full.xml:279(primaryie)
#: xml/api-index-full.xml:281(primaryie) xml/api-index-full.xml:282(primaryie)
#: xml/api-index-full.xml:283(primaryie) xml/api-index-full.xml:284(primaryie)
#: xml/api-index-full.xml:285(primaryie) xml/api-index-full.xml:286(primaryie)
#: xml/api-index-full.xml:287(primaryie) xml/api-index-full.xml:288(primaryie)
#: xml/api-index-full.xml:289(primaryie) xml/api-index-full.xml:290(primaryie)
#: xml/api-index-full.xml:291(primaryie) xml/api-index-full.xml:292(primaryie)
#: xml/api-index-full.xml:293(primaryie) xml/api-index-full.xml:294(primaryie)
#: xml/api-index-full.xml:295(primaryie) xml/api-index-full.xml:296(primaryie)
#: xml/api-index-full.xml:297(primaryie) xml/api-index-full.xml:298(primaryie)
#: xml/api-index-full.xml:299(primaryie) xml/api-index-full.xml:300(primaryie)
#: xml/api-index-full.xml:302(primaryie) xml/api-index-full.xml:303(primaryie)
#: xml/api-index-full.xml:304(primaryie) xml/api-index-full.xml:305(primaryie)
#: xml/api-index-full.xml:306(primaryie) xml/api-index-full.xml:307(primaryie)
#: xml/api-index-full.xml:308(primaryie) xml/api-index-full.xml:309(primaryie)
#: xml/api-index-full.xml:310(primaryie) xml/api-index-full.xml:312(primaryie)
#: xml/api-index-full.xml:313(primaryie) xml/api-index-full.xml:314(primaryie)
#: xml/api-index-full.xml:315(primaryie) xml/api-index-full.xml:316(primaryie)
#: xml/api-index-full.xml:317(primaryie) xml/api-index-full.xml:318(primaryie)
#: xml/api-index-full.xml:319(primaryie) xml/api-index-full.xml:320(primaryie)
#: xml/api-index-full.xml:321(primaryie) xml/api-index-full.xml:322(primaryie)
#: xml/api-index-full.xml:323(primaryie) xml/api-index-full.xml:324(primaryie)
#: xml/api-index-full.xml:325(primaryie) xml/api-index-full.xml:326(primaryie)
#: xml/api-index-full.xml:327(primaryie) xml/api-index-full.xml:328(primaryie)
#: xml/api-index-full.xml:329(primaryie) xml/api-index-full.xml:330(primaryie)
#: xml/api-index-full.xml:331(primaryie) xml/api-index-full.xml:332(primaryie)
#: xml/api-index-full.xml:333(primaryie) xml/api-index-full.xml:334(primaryie)
#: xml/api-index-full.xml:335(primaryie) xml/api-index-full.xml:336(primaryie)
#: xml/api-index-full.xml:337(primaryie) xml/api-index-full.xml:338(primaryie)
#: xml/api-index-full.xml:339(primaryie) xml/api-index-full.xml:340(primaryie)
#: xml/api-index-full.xml:341(primaryie) xml/api-index-full.xml:342(primaryie)
#: xml/api-index-full.xml:343(primaryie) xml/api-index-full.xml:344(primaryie)
#: xml/api-index-full.xml:345(primaryie) xml/api-index-full.xml:346(primaryie)
#: xml/api-index-full.xml:347(primaryie) xml/api-index-full.xml:348(primaryie)
#: xml/api-index-full.xml:349(primaryie) xml/api-index-full.xml:350(primaryie)
#: xml/api-index-full.xml:352(primaryie) xml/api-index-full.xml:353(primaryie)
#: xml/api-index-full.xml:354(primaryie) xml/api-index-full.xml:355(primaryie)
#: xml/api-index-full.xml:357(primaryie) xml/api-index-full.xml:358(primaryie)
#: xml/api-index-full.xml:359(primaryie) xml/api-index-full.xml:360(primaryie)
#: xml/api-index-full.xml:361(primaryie) xml/api-index-full.xml:362(primaryie)
#: xml/api-index-full.xml:363(primaryie) xml/api-index-full.xml:366(primaryie)
#: xml/api-index-full.xml:367(primaryie) xml/api-index-full.xml:368(primaryie)
#: xml/api-index-full.xml:371(primaryie) xml/api-index-full.xml:373(primaryie)
#: xml/api-index-full.xml:374(primaryie) xml/api-index-full.xml:377(primaryie)
#: xml/api-index-full.xml:378(primaryie) xml/api-index-full.xml:379(primaryie)
#: xml/api-index-full.xml:380(primaryie) xml/api-index-full.xml:382(primaryie)
#: xml/api-index-full.xml:383(primaryie) xml/api-index-full.xml:384(primaryie)
#: xml/api-index-full.xml:385(primaryie) xml/api-index-full.xml:386(primaryie)
#: xml/api-index-full.xml:387(primaryie) xml/api-index-full.xml:388(primaryie)
#: xml/api-index-full.xml:389(primaryie) xml/api-index-full.xml:390(primaryie)
#: xml/api-index-full.xml:391(primaryie) xml/api-index-full.xml:392(primaryie)
#: xml/api-index-full.xml:393(primaryie) xml/api-index-full.xml:394(primaryie)
#: xml/api-index-full.xml:395(primaryie) xml/api-index-full.xml:396(primaryie)
#: xml/api-index-full.xml:397(primaryie) xml/api-index-full.xml:398(primaryie)
#: xml/api-index-full.xml:399(primaryie) xml/api-index-full.xml:400(primaryie)
#: xml/api-index-full.xml:401(primaryie) xml/api-index-full.xml:402(primaryie)
#: xml/api-index-full.xml:403(primaryie) xml/api-index-full.xml:404(primaryie)
#: xml/api-index-full.xml:405(primaryie) xml/api-index-full.xml:406(primaryie)
#: xml/api-index-full.xml:407(primaryie) xml/api-index-full.xml:408(primaryie)
#: xml/api-index-full.xml:409(primaryie) xml/api-index-full.xml:410(primaryie)
#: xml/api-index-full.xml:411(primaryie) xml/api-index-full.xml:412(primaryie)
#: xml/api-index-full.xml:413(primaryie) xml/api-index-full.xml:414(primaryie)
#: xml/api-index-full.xml:415(primaryie) xml/api-index-full.xml:416(primaryie)
#: xml/api-index-full.xml:417(primaryie) xml/api-index-full.xml:418(primaryie)
#: xml/api-index-full.xml:419(primaryie) xml/api-index-full.xml:420(primaryie)
#: xml/api-index-full.xml:421(primaryie) xml/api-index-full.xml:422(primaryie)
#: xml/api-index-full.xml:423(primaryie) xml/api-index-full.xml:424(primaryie)
#: xml/api-index-full.xml:425(primaryie) xml/api-index-full.xml:426(primaryie)
#: xml/api-index-full.xml:427(primaryie) xml/api-index-full.xml:428(primaryie)
#: xml/api-index-full.xml:429(primaryie) xml/api-index-full.xml:430(primaryie)
#: xml/api-index-full.xml:432(primaryie) xml/api-index-full.xml:433(primaryie)
#: xml/api-index-full.xml:435(primaryie) xml/api-index-full.xml:436(primaryie)
#: xml/api-index-full.xml:437(primaryie) xml/api-index-full.xml:438(primaryie)
#: xml/api-index-full.xml:439(primaryie) xml/api-index-full.xml:440(primaryie)
#: xml/api-index-full.xml:441(primaryie) xml/api-index-full.xml:442(primaryie)
#: xml/api-index-full.xml:443(primaryie) xml/api-index-full.xml:444(primaryie)
#: xml/api-index-full.xml:446(primaryie) xml/api-index-full.xml:447(primaryie)
#: xml/api-index-full.xml:448(primaryie) xml/api-index-full.xml:449(primaryie)
#: xml/api-index-full.xml:450(primaryie) xml/api-index-full.xml:451(primaryie)
#: xml/api-index-full.xml:452(primaryie) xml/api-index-full.xml:453(primaryie)
#: xml/api-index-full.xml:454(primaryie) xml/api-index-full.xml:457(primaryie)
#: xml/api-index-full.xml:458(primaryie) xml/api-index-full.xml:459(primaryie)
#: xml/api-index-full.xml:460(primaryie) xml/api-index-full.xml:462(primaryie)
#: xml/api-index-full.xml:478(primaryie) xml/api-index-full.xml:479(primaryie)
#: xml/api-index-full.xml:482(primaryie) xml/api-index-full.xml:485(primaryie)
#: xml/api-index-full.xml:486(primaryie) xml/api-index-full.xml:489(primaryie)
#: xml/api-index-full.xml:490(primaryie) xml/api-index-full.xml:491(primaryie)
#: xml/api-index-full.xml:492(primaryie) xml/api-index-full.xml:493(primaryie)
#: xml/api-index-full.xml:494(primaryie) xml/api-index-full.xml:495(primaryie)
#: xml/api-index-full.xml:496(primaryie) xml/api-index-full.xml:497(primaryie)
#: xml/api-index-full.xml:498(primaryie) xml/api-index-full.xml:499(primaryie)
#: xml/api-index-full.xml:500(primaryie) xml/api-index-full.xml:501(primaryie)
#: xml/api-index-full.xml:502(primaryie) xml/api-index-full.xml:503(primaryie)
#: xml/api-index-full.xml:504(primaryie) xml/api-index-full.xml:505(primaryie)
#: xml/api-index-full.xml:513(primaryie) xml/api-index-full.xml:515(primaryie)
#: xml/api-index-full.xml:520(primaryie) xml/api-index-full.xml:523(primaryie)
#: xml/api-index-full.xml:524(primaryie) xml/api-index-full.xml:535(primaryie)
#: xml/api-index-full.xml:538(primaryie) xml/api-index-full.xml:541(primaryie)
#: xml/api-index-full.xml:542(primaryie) xml/api-index-full.xml:543(primaryie)
#: xml/api-index-full.xml:544(primaryie) xml/api-index-full.xml:548(primaryie)
#: xml/api-index-full.xml:549(primaryie) xml/api-index-full.xml:552(primaryie)
#: xml/api-index-full.xml:553(primaryie) xml/api-index-full.xml:555(primaryie)
#: xml/api-index-full.xml:556(primaryie) xml/api-index-full.xml:558(primaryie)
#: xml/api-index-full.xml:560(primaryie) xml/api-index-full.xml:561(primaryie)
#: xml/api-index-full.xml:562(primaryie) xml/api-index-full.xml:565(primaryie)
#: xml/api-index-full.xml:566(primaryie) xml/api-index-full.xml:567(primaryie)
#: xml/api-index-full.xml:568(primaryie) xml/api-index-full.xml:569(primaryie)
#: xml/api-index-full.xml:570(primaryie) xml/api-index-full.xml:571(primaryie)
#: xml/api-index-full.xml:572(primaryie) xml/api-index-full.xml:573(primaryie)
#: xml/api-index-full.xml:574(primaryie) xml/api-index-full.xml:575(primaryie)
#: xml/api-index-full.xml:576(primaryie) xml/api-index-full.xml:577(primaryie)
#: xml/api-index-full.xml:578(primaryie) xml/api-index-full.xml:579(primaryie)
#: xml/api-index-full.xml:580(primaryie) xml/api-index-full.xml:581(primaryie)
#: xml/api-index-full.xml:582(primaryie) xml/api-index-full.xml:583(primaryie)
#: xml/api-index-full.xml:584(primaryie) xml/api-index-full.xml:585(primaryie)
#: xml/api-index-full.xml:586(primaryie) xml/api-index-full.xml:587(primaryie)
#: xml/api-index-full.xml:590(primaryie) xml/api-index-full.xml:591(primaryie)
#: xml/api-index-full.xml:592(primaryie) xml/api-index-full.xml:593(primaryie)
#: xml/api-index-full.xml:594(primaryie) xml/api-index-full.xml:595(primaryie)
#: xml/api-index-full.xml:596(primaryie) xml/api-index-full.xml:597(primaryie)
#: xml/api-index-full.xml:598(primaryie) xml/api-index-full.xml:599(primaryie)
#: xml/api-index-full.xml:600(primaryie) xml/api-index-full.xml:601(primaryie)
#: xml/api-index-full.xml:602(primaryie) xml/api-index-full.xml:603(primaryie)
#: xml/api-index-full.xml:604(primaryie) xml/api-index-full.xml:605(primaryie)
#: xml/api-index-full.xml:606(primaryie) xml/api-index-full.xml:607(primaryie)
#: xml/api-index-full.xml:608(primaryie) xml/api-index-full.xml:609(primaryie)
#: xml/api-index-full.xml:610(primaryie) xml/api-index-full.xml:611(primaryie)
#: xml/api-index-full.xml:612(primaryie) xml/api-index-full.xml:613(primaryie)
#: xml/api-index-full.xml:614(primaryie) xml/api-index-full.xml:615(primaryie)
#: xml/api-index-full.xml:616(primaryie) xml/api-index-full.xml:617(primaryie)
#: xml/api-index-full.xml:618(primaryie) xml/api-index-full.xml:619(primaryie)
#: xml/api-index-full.xml:626(primaryie) xml/api-index-full.xml:628(primaryie)
#: xml/api-index-full.xml:629(primaryie) xml/api-index-full.xml:630(primaryie)
#: xml/api-index-full.xml:631(primaryie) xml/api-index-full.xml:632(primaryie)
#: xml/api-index-full.xml:633(primaryie) xml/api-index-full.xml:634(primaryie)
#: xml/api-index-full.xml:635(primaryie) xml/api-index-full.xml:636(primaryie)
#: xml/api-index-full.xml:637(primaryie) xml/api-index-full.xml:638(primaryie)
#: xml/api-index-full.xml:639(primaryie) xml/api-index-full.xml:640(primaryie)
#: xml/api-index-full.xml:641(primaryie) xml/api-index-full.xml:647(primaryie)
#: xml/api-index-full.xml:648(primaryie) xml/api-index-full.xml:649(primaryie)
#: xml/api-index-full.xml:650(primaryie) xml/api-index-full.xml:651(primaryie)
#: xml/api-index-full.xml:652(primaryie) xml/api-index-full.xml:653(primaryie)
#: xml/api-index-full.xml:654(primaryie)
#: xml/api-index-deprecated.xml:8(primaryie)
#: xml/api-index-deprecated.xml:9(primaryie)
#: xml/api-index-deprecated.xml:10(primaryie)
#: xml/api-index-deprecated.xml:11(primaryie)
#: xml/api-index-deprecated.xml:12(primaryie)
#: xml/api-index-deprecated.xml:13(primaryie)
#: xml/api-index-deprecated.xml:14(primaryie)
#: xml/api-index-deprecated.xml:15(primaryie)
#: xml/api-index-deprecated.xml:16(primaryie)
#: xml/api-index-deprecated.xml:17(primaryie)
#: xml/api-index-deprecated.xml:18(primaryie)
#: xml/api-index-deprecated.xml:21(primaryie)
#: xml/api-index-deprecated.xml:29(primaryie)
#: xml/api-index-deprecated.xml:31(primaryie)
#: xml/api-index-deprecated.xml:32(primaryie)
#: xml/api-index-deprecated.xml:33(primaryie)
#: xml/api-index-deprecated.xml:34(primaryie)
#: xml/api-index-deprecated.xml:35(primaryie)
#: xml/api-index-deprecated.xml:36(primaryie)
#: xml/api-index-deprecated.xml:37(primaryie)
#: xml/api-index-deprecated.xml:38(primaryie)
#: xml/api-index-deprecated.xml:39(primaryie)
#: xml/api-index-deprecated.xml:40(primaryie)
#: xml/api-index-deprecated.xml:41(primaryie)
#: xml/api-index-deprecated.xml:42(primaryie)
#: xml/api-index-deprecated.xml:43(primaryie)
#: xml/api-index-deprecated.xml:44(primaryie)
#: xml/api-index-deprecated.xml:45(primaryie)
#: xml/api-index-deprecated.xml:46(primaryie)
#: xml/api-index-deprecated.xml:47(primaryie)
#: xml/api-index-deprecated.xml:48(primaryie)
#: xml/api-index-deprecated.xml:49(primaryie)
#: xml/api-index-deprecated.xml:50(primaryie)
#: xml/api-index-deprecated.xml:63(primaryie)
#: xml/api-index-deprecated.xml:66(primaryie)
#: xml/api-index-deprecated.xml:69(primaryie)
#: xml/api-index-deprecated.xml:70(primaryie)
#: xml/api-index-deprecated.xml:71(primaryie)
#: xml/api-index-deprecated.xml:74(primaryie)
#: xml/api-index-deprecated.xml:75(primaryie)
#: xml/api-index-1.1.6.xml:7(primaryie) xml/api-index-1.1.6.xml:10(primaryie)
#: xml/api-index-1.1.6.xml:11(primaryie) xml/api-index-1.1.6.xml:12(primaryie)
#: xml/api-index-1.1.6.xml:13(primaryie) xml/api-index-1.1.6.xml:14(primaryie)
#: xml/api-index-1.1.6.xml:15(primaryie) xml/api-index-1.1.6.xml:16(primaryie)
#: xml/api-index-1.1.6.xml:17(primaryie) xml/api-index-1.1.6.xml:18(primaryie)
#: xml/api-index-1.1.6.xml:19(primaryie) xml/api-index-1.1.6.xml:20(primaryie)
#: xml/api-index-1.1.6.xml:21(primaryie) xml/api-index-1.1.6.xml:22(primaryie)
#: xml/api-index-1.1.6.xml:23(primaryie) xml/api-index-1.1.6.xml:24(primaryie)
#: xml/api-index-1.1.6.xml:25(primaryie) xml/api-index-1.1.6.xml:26(primaryie)
#: xml/api-index-1.1.6.xml:27(primaryie) xml/api-index-1.1.5.xml:7(primaryie)
#: xml/api-index-1.1.5.xml:8(primaryie) xml/api-index-1.1.5.xml:11(primaryie)
#: xml/api-index-1.1.5.xml:19(primaryie) xml/api-index-1.1.5.xml:20(primaryie)
#: xml/api-index-1.1.5.xml:21(primaryie) xml/api-index-1.1.5.xml:22(primaryie)
#: xml/api-index-1.1.5.xml:23(primaryie) xml/api-index-1.1.5.xml:24(primaryie)
#: xml/api-index-1.1.5.xml:25(primaryie) xml/api-index-1.1.5.xml:26(primaryie)
#: xml/api-index-1.1.5.xml:27(primaryie) xml/api-index-1.1.5.xml:28(primaryie)
#: xml/api-index-1.1.5.xml:29(primaryie) xml/api-index-1.1.5.xml:30(primaryie)
#: xml/api-index-1.1.5.xml:31(primaryie) xml/api-index-1.1.5.xml:32(primaryie)
#: xml/api-index-1.1.5.xml:33(primaryie) xml/api-index-1.1.5.xml:34(primaryie)
#: xml/api-index-1.1.5.xml:35(primaryie) xml/api-index-1.1.5.xml:36(primaryie)
#: xml/api-index-1.1.5.xml:37(primaryie) xml/api-index-1.1.5.xml:38(primaryie)
#: xml/api-index-1.1.5.xml:39(primaryie) xml/api-index-1.1.5.xml:40(primaryie)
#: xml/api-index-1.1.5.xml:41(primaryie) xml/api-index-1.1.5.xml:42(primaryie)
#: xml/api-index-1.1.5.xml:43(primaryie) xml/api-index-1.1.5.xml:44(primaryie)
#: xml/api-index-1.1.5.xml:45(primaryie) xml/api-index-1.1.5.xml:46(primaryie)
#: xml/api-index-1.1.5.xml:47(primaryie) xml/api-index-1.1.5.xml:48(primaryie)
#: xml/api-index-1.1.5.xml:49(primaryie) xml/api-index-1.1.5.xml:50(primaryie)
#: xml/api-index-1.1.5.xml:51(primaryie) xml/api-index-1.1.5.xml:52(primaryie)
#: xml/api-index-1.1.4.xml:11(primaryie) xml/api-index-1.1.4.xml:12(primaryie)
#: xml/api-index-1.1.4.xml:13(primaryie) xml/api-index-1.1.4.xml:16(primaryie)
#: xml/api-index-1.1.3.xml:11(primaryie) xml/api-index-1.1.3.xml:13(primaryie)
#: xml/api-index-1.1.3.xml:17(primaryie) xml/api-index-1.1.3.xml:18(primaryie)
#: xml/api-index-1.1.3.xml:19(primaryie) xml/api-index-1.1.3.xml:20(primaryie)
#: xml/api-index-1.1.3.xml:21(primaryie) xml/api-index-1.1.3.xml:22(primaryie)
#: xml/api-index-1.1.1.xml:13(primaryie) xml/api-index-1.1.1.xml:14(primaryie)
#: xml/api-index-1.1.1.xml:15(primaryie) xml/api-index-1.1.1.xml:22(primaryie)
#: xml/api-index-1.1.0.xml:52(primaryie) xml/api-index-1.0.xml:7(primaryie)
#: xml/api-index-1.0.xml:8(primaryie) xml/api-index-1.0.xml:9(primaryie)
#: xml/api-index-1.0.xml:10(primaryie) xml/api-index-1.0.9.xml:13(primaryie)
#: xml/api-index-1.0.8.xml:7(primaryie) xml/api-index-1.0.8.xml:11(primaryie)
#: xml/api-index-1.0.8.xml:12(primaryie) xml/api-index-1.0.8.xml:13(primaryie)
#: xml/api-index-1.0.8.xml:14(primaryie) xml/api-index-1.0.8.xml:15(primaryie)
#: xml/api-index-1.0.8.xml:16(primaryie) xml/api-index-1.0.8.xml:17(primaryie)
#: xml/api-index-1.0.8.xml:18(primaryie) xml/api-index-1.0.8.xml:19(primaryie)
#: xml/api-index-1.0.8.xml:20(primaryie) xml/api-index-1.0.8.xml:21(primaryie)
#: xml/api-index-1.0.8.xml:22(primaryie) xml/api-index-1.0.8.xml:23(primaryie)
#: xml/api-index-1.0.8.xml:24(primaryie) xml/api-index-1.0.8.xml:25(primaryie)
#: xml/api-index-1.0.7.xml:7(primaryie) xml/api-index-1.0.7.xml:8(primaryie)
#: xml/api-index-1.0.7.xml:9(primaryie) xml/api-index-1.0.7.xml:10(primaryie)
#: xml/api-index-1.0.7.xml:11(primaryie) xml/api-index-1.0.7.xml:12(primaryie)
#: xml/api-index-1.0.7.xml:13(primaryie) xml/api-index-1.0.7.xml:14(primaryie)
#: xml/api-index-1.0.7.xml:15(primaryie) xml/api-index-1.0.7.xml:16(primaryie)
#: xml/api-index-1.0.7.xml:19(primaryie) xml/api-index-1.0.7.xml:22(primaryie)
#: xml/api-index-1.0.7.xml:23(primaryie) xml/api-index-1.0.6.xml:7(primaryie)
#: xml/api-index-1.0.6.xml:18(primaryie) xml/api-index-1.0.6.xml:19(primaryie)
#: xml/api-index-1.0.6.xml:20(primaryie) xml/api-index-1.0.6.xml:21(primaryie)
#: xml/api-index-1.0.6.xml:22(primaryie) xml/api-index-1.0.6.xml:23(primaryie)
#: xml/api-index-1.0.6.xml:24(primaryie) xml/api-index-1.0.6.xml:25(primaryie)
#: xml/api-index-1.0.6.xml:26(primaryie) xml/api-index-1.0.6.xml:27(primaryie)
#: xml/api-index-1.0.6.xml:28(primaryie) xml/api-index-1.0.6.xml:29(primaryie)
#: xml/api-index-1.0.6.xml:30(primaryie) xml/api-index-1.0.6.xml:31(primaryie)
#: xml/api-index-1.0.6.xml:32(primaryie) xml/api-index-1.0.6.xml:33(primaryie)
#: xml/api-index-1.0.6.xml:34(primaryie) xml/api-index-1.0.6.xml:35(primaryie)
#: xml/api-index-1.0.6.xml:36(primaryie) xml/api-index-1.0.6.xml:37(primaryie)
#: xml/api-index-1.0.6.xml:38(primaryie) xml/api-index-1.0.6.xml:39(primaryie)
#: xml/api-index-1.0.6.xml:40(primaryie) xml/api-index-1.0.6.xml:41(primaryie)
#: xml/api-index-1.0.6.xml:42(primaryie) xml/api-index-1.0.6.xml:43(primaryie)
#: xml/api-index-1.0.6.xml:44(primaryie) xml/api-index-1.0.6.xml:45(primaryie)
#: xml/api-index-1.0.6.xml:46(primaryie) xml/api-index-1.0.6.xml:47(primaryie)
#: xml/api-index-1.0.6.xml:49(primaryie) xml/api-index-1.0.6.xml:50(primaryie)
#: xml/api-index-1.0.6.xml:51(primaryie) xml/api-index-1.0.6.xml:52(primaryie)
#: xml/api-index-1.0.6.xml:53(primaryie) xml/api-index-1.0.6.xml:54(primaryie)
#: xml/api-index-1.0.6.xml:55(primaryie) xml/api-index-1.0.6.xml:56(primaryie)
#: xml/api-index-1.0.6.xml:57(primaryie) xml/api-index-1.0.6.xml:58(primaryie)
#: xml/api-index-1.0.6.xml:59(primaryie) xml/api-index-1.0.6.xml:60(primaryie)
#: xml/api-index-1.0.6.xml:61(primaryie) xml/api-index-1.0.6.xml:62(primaryie)
#: xml/api-index-1.0.6.xml:63(primaryie) xml/api-index-1.0.6.xml:64(primaryie)
#: xml/api-index-1.0.6.xml:65(primaryie) xml/api-index-1.0.6.xml:66(primaryie)
#: xml/api-index-1.0.6.xml:67(primaryie) xml/api-index-1.0.6.xml:68(primaryie)
#: xml/api-index-1.0.6.xml:69(primaryie) xml/api-index-1.0.6.xml:70(primaryie)
#: xml/api-index-1.0.6.xml:74(primaryie) xml/api-index-1.0.6.xml:77(primaryie)
#: xml/api-index-1.0.6.xml:78(primaryie) xml/api-index-1.0.6.xml:82(primaryie)
#: xml/api-index-1.0.6.xml:85(primaryie) xml/api-index-1.0.6.xml:86(primaryie)
#: xml/api-index-1.0.6.xml:87(primaryie) xml/api-index-1.0.6.xml:88(primaryie)
#: xml/api-index-1.0.6.xml:89(primaryie) xml/api-index-1.0.6.xml:92(primaryie)
#: xml/api-index-1.0.6.xml:93(primaryie) xml/api-index-1.0.5.xml:12(primaryie)
#: xml/api-index-1.0.5.xml:13(primaryie) xml/api-index-1.0.5.xml:16(primaryie)
#: xml/api-index-1.0.5.xml:17(primaryie) xml/api-index-1.0.5.xml:18(primaryie)
#: xml/api-index-1.0.5.xml:19(primaryie) xml/api-index-1.0.5.xml:20(primaryie)
#: xml/api-index-1.0.5.xml:21(primaryie) xml/api-index-1.0.5.xml:22(primaryie)
#: xml/api-index-1.0.5.xml:23(primaryie) xml/api-index-1.0.5.xml:24(primaryie)
#: xml/api-index-1.0.5.xml:25(primaryie) xml/api-index-1.0.5.xml:26(primaryie)
#: xml/api-index-1.0.5.xml:27(primaryie) xml/api-index-1.0.5.xml:28(primaryie)
#: xml/api-index-1.0.5.xml:29(primaryie) xml/api-index-1.0.5.xml:30(primaryie)
#: xml/api-index-1.0.5.xml:31(primaryie) xml/api-index-1.0.5.xml:32(primaryie)
#: xml/api-index-1.0.5.xml:33(primaryie) xml/api-index-1.0.5.xml:34(primaryie)
#: xml/api-index-1.0.5.xml:35(primaryie) xml/api-index-1.0.5.xml:37(primaryie)
#: xml/api-index-1.0.5.xml:39(primaryie) xml/api-index-1.0.5.xml:47(primaryie)
#: xml/api-index-1.0.5.xml:48(primaryie) xml/api-index-1.0.5.xml:49(primaryie)
#: xml/api-index-1.0.5.xml:50(primaryie) xml/api-index-1.0.5.xml:51(primaryie)
#: xml/api-index-1.0.5.xml:52(primaryie) xml/api-index-1.0.5.xml:53(primaryie)
#: xml/api-index-1.0.5.xml:54(primaryie) xml/api-index-1.0.5.xml:57(primaryie)
#: xml/api-index-1.0.5.xml:58(primaryie) xml/api-index-1.0.5.xml:61(primaryie)
#: xml/api-index-1.0.5.xml:62(primaryie) xml/api-index-1.0.5.xml:63(primaryie)
#: xml/api-index-1.0.5.xml:64(primaryie) xml/api-index-1.0.5.xml:65(primaryie)
#: xml/api-index-1.0.5.xml:66(primaryie) xml/api-index-1.0.5.xml:67(primaryie)
#: xml/api-index-1.0.5.xml:68(primaryie) xml/api-index-1.0.4.xml:7(primaryie)
#: xml/api-index-1.0.4.xml:8(primaryie) xml/api-index-1.0.4.xml:9(primaryie)
#: xml/api-index-1.0.4.xml:10(primaryie) xml/api-index-1.0.4.xml:11(primaryie)
#: xml/api-index-1.0.4.xml:14(primaryie) xml/api-index-1.0.4.xml:15(primaryie)
#: xml/api-index-1.0.4.xml:18(primaryie) xml/api-index-1.0.4.xml:19(primaryie)
#: xml/api-index-1.0.4.xml:20(primaryie) xml/api-index-1.0.4.xml:21(primaryie)
#: xml/api-index-1.0.4.xml:22(primaryie) xml/api-index-1.0.4.xml:23(primaryie)
#: xml/api-index-1.0.4.xml:24(primaryie) xml/api-index-1.0.4.xml:25(primaryie)
#: xml/api-index-1.0.4.xml:26(primaryie) xml/api-index-1.0.4.xml:27(primaryie)
#: xml/api-index-1.0.4.xml:28(primaryie) xml/api-index-1.0.4.xml:29(primaryie)
#: xml/api-index-1.0.4.xml:30(primaryie) xml/api-index-1.0.4.xml:31(primaryie)
#: xml/api-index-1.0.4.xml:32(primaryie) xml/api-index-1.0.4.xml:33(primaryie)
#: xml/api-index-1.0.4.xml:34(primaryie) xml/api-index-1.0.4.xml:35(primaryie)
#: xml/api-index-1.0.4.xml:36(primaryie) xml/api-index-1.0.4.xml:37(primaryie)
#: xml/api-index-1.0.4.xml:38(primaryie) xml/api-index-1.0.4.xml:39(primaryie)
#: xml/api-index-1.0.4.xml:40(primaryie) xml/api-index-1.0.4.xml:41(primaryie)
#: xml/api-index-1.0.4.xml:42(primaryie) xml/api-index-1.0.4.xml:43(primaryie)
#: xml/api-index-1.0.4.xml:44(primaryie) xml/api-index-1.0.4.xml:45(primaryie)
#: xml/api-index-1.0.4.xml:48(primaryie) xml/api-index-1.0.4.xml:49(primaryie)
#: xml/api-index-1.0.3.xml:8(primaryie) xml/api-index-1.0.3.xml:11(primaryie)
#: xml/api-index-1.0.3.xml:12(primaryie) xml/api-index-1.0.3.xml:13(primaryie)
#: xml/api-index-1.0.3.xml:14(primaryie) xml/api-index-1.0.3.xml:15(primaryie)
#: xml/api-index-1.0.3.xml:16(primaryie) xml/api-index-1.0.3.xml:17(primaryie)
#: xml/api-index-1.0.3.xml:18(primaryie) xml/api-index-1.0.3.xml:19(primaryie)
#: xml/api-index-1.0.3.xml:20(primaryie) xml/api-index-1.0.3.xml:21(primaryie)
#: xml/api-index-1.0.3.xml:22(primaryie) xml/api-index-1.0.2.xml:7(primaryie)
#: xml/api-index-1.0.2.xml:8(primaryie) xml/api-index-1.0.2.xml:9(primaryie)
#: xml/api-index-1.0.2.xml:10(primaryie) xml/api-index-1.0.2.xml:13(primaryie)
#: xml/api-index-1.0.2.xml:16(primaryie) xml/api-index-1.0.2.xml:19(primaryie)
#: xml/api-index-1.0.2.xml:22(primaryie) xml/api-index-1.0.2.xml:25(primaryie)
#: xml/api-index-0.9.xml:7(primaryie) xml/api-index-0.9.xml:8(primaryie)
#: xml/api-index-0.9.xml:9(primaryie) xml/api-index-0.9.xml:10(primaryie)
#: xml/api-index-0.8.xml:7(primaryie) xml/api-index-0.8.xml:8(primaryie)
#: xml/api-index-0.8.xml:9(primaryie) xml/api-index-0.8.xml:17(primaryie)
#: xml/api-index-0.3.xml:7(primaryie) xml/api-index-0.3.xml:8(primaryie)
msgid "<placeholder-1/>, function in <placeholder-2/>"
msgstr ""

#: xml/api-index-full.xml:104(title) xml/api-index-deprecated.xml:20(title)
#: xml/api-index-1.1.6.xml:6(title) xml/api-index-1.1.5.xml:10(title)
#: xml/api-index-1.0.7.xml:18(title) xml/api-index-1.0.2.xml:12(title)
msgid "B"
msgstr ""

#: xml/api-index-full.xml:105(primaryie)
msgid "<placeholder-1/>, typedef in <placeholder-2/>"
msgstr ""

#: xml/api-index-full.xml:111(title) xml/api-index-deprecated.xml:23(title)
#: xml/api-index-1.2.0.xml:6(title) xml/api-index-1.1.0.xml:48(title)
#: xml/api-index-1.0.9.xml:6(title)
msgid "C"
msgstr ""

#: xml/api-index-full.xml:112(primaryie) xml/api-index-full.xml:157(primaryie)
#: xml/api-index-full.xml:188(primaryie) xml/api-index-1.0.6.xml:16(primaryie)
msgid "<placeholder-1/>, user_function in <placeholder-2/>"
msgstr ""

#: xml/api-index-full.xml:156(title)
msgid "D"
msgstr ""

#: xml/api-index-full.xml:159(title) xml/api-index-1.1.2.xml:6(title)
#: xml/api-index-1.1.1.xml:9(title) xml/api-index-1.0.5.xml:11(title)
#: xml/api-index-1.0.2.xml:15(title)
msgid "E"
msgstr ""

#: xml/api-index-full.xml:160(primaryie) xml/api-index-full.xml:173(primaryie)
#: xml/api-index-full.xml:186(primaryie) xml/api-index-full.xml:187(primaryie)
#: xml/api-index-full.xml:194(primaryie) xml/api-index-full.xml:488(primaryie)
#: xml/api-index-full.xml:506(primaryie) xml/api-index-full.xml:507(primaryie)
#: xml/api-index-deprecated.xml:28(primaryie)
#: xml/api-index-1.1.5.xml:18(primaryie) xml/api-index-1.0.6.xml:14(primaryie)
#: xml/api-index-1.0.6.xml:15(primaryie)
msgid "<placeholder-1/>, enum in <placeholder-2/>"
msgstr ""

#: xml/api-index-full.xml:170(title) xml/api-index-0.8.xml:11(title)
msgid "F"
msgstr ""

#: xml/api-index-full.xml:180(title) xml/api-index-deprecated.xml:27(title)
#: xml/api-index-1.1.6.xml:9(title) xml/api-index-1.1.5.xml:13(title)
#: xml/api-index-1.1.4.xml:10(title) xml/api-index-1.1.3.xml:10(title)
#: xml/api-index-1.1.1.xml:12(title) xml/api-index-1.0.9.xml:12(title)
#: xml/api-index-1.0.8.xml:6(title) xml/api-index-1.0.7.xml:21(title)
#: xml/api-index-1.0.6.xml:9(title) xml/api-index-1.0.5.xml:15(title)
#: xml/api-index-1.0.4.xml:6(title) xml/api-index-1.0.3.xml:10(title)
#: xml/api-index-1.0.2.xml:18(title)
msgid "G"
msgstr ""

#: xml/api-index-full.xml:181(primaryie) xml/api-index-full.xml:182(primaryie)
#: xml/api-index-full.xml:183(primaryie) xml/api-index-full.xml:184(primaryie)
#: xml/api-index-full.xml:189(primaryie) xml/api-index-full.xml:190(primaryie)
#: xml/api-index-full.xml:191(primaryie) xml/api-index-full.xml:192(primaryie)
#: xml/api-index-1.1.5.xml:14(primaryie) xml/api-index-1.1.5.xml:15(primaryie)
#: xml/api-index-1.1.5.xml:16(primaryie) xml/api-index-1.1.5.xml:17(primaryie)
#: xml/api-index-1.0.6.xml:10(primaryie) xml/api-index-1.0.6.xml:11(primaryie)
#: xml/api-index-1.0.6.xml:12(primaryie) xml/api-index-1.0.6.xml:13(primaryie)
msgid "<placeholder-1/>, object signal in <placeholder-2/>"
msgstr ""

#: xml/api-index-full.xml:185(primaryie) xml/api-index-full.xml:193(primaryie)
#: xml/api-index-full.xml:563(primaryie)
msgid "<placeholder-1/>, object property in <placeholder-2/>"
msgstr ""

#: xml/api-index-full.xml:324(link) xml/api-index-1.1.6.xml:22(link)
msgid "GCutGLibEventLoop"
msgstr ""

#: xml/api-index-full.xml:470(title)
msgid "H"
msgstr ""

#: xml/api-index-full.xml:476(title) xml/api-index-1.1.1.xml:18(title)
msgid "I"
msgstr ""

#: xml/api-index-full.xml:481(title) xml/api-index-deprecated.xml:62(title)
#: xml/api-index-1.0.6.xml:73(title)
msgid "K"
msgstr ""

#: xml/api-index-full.xml:484(title)
msgid "L"
msgstr ""

#: xml/api-index-full.xml:522(title) xml/api-index-1.1.1.xml:21(title)
#: xml/api-index-1.1.0.xml:51(title)
msgid "M"
msgstr ""

#: xml/api-index-full.xml:526(title)
msgid "N"
msgstr ""

#: xml/api-index-full.xml:537(title) xml/api-index-0.8.xml:16(title)
msgid "O"
msgstr ""

#: xml/api-index-full.xml:540(title) xml/api-index-deprecated.xml:65(title)
#: xml/api-index-1.0.6.xml:76(title)
msgid "P"
msgstr ""

#: xml/api-index-full.xml:546(title) xml/api-index-1.0.6.xml:80(title)
#: xml/api-index-1.0.2.xml:21(title)
msgid "R"
msgstr ""

#: xml/api-index-full.xml:551(title) xml/api-index-deprecated.xml:68(title)
#: xml/api-index-1.0.9.xml:15(title) xml/api-index-1.0.8.xml:9(title)
#: xml/api-index-1.0.6.xml:84(title) xml/api-index-1.0.5.xml:56(title)
#: xml/api-index-1.0.4.xml:13(title) xml/api-index-1.0.2.xml:24(title)
msgid "S"
msgstr ""

#: xml/api-index-full.xml:588(primaryie) xml/api-index-full.xml:589(primaryie)
#: xml/api-index-1.0.4.xml:16(primaryie) xml/api-index-1.0.4.xml:17(primaryie)
msgid "<placeholder-1/>, struct in <placeholder-2/>"
msgstr ""

#: xml/api-index-full.xml:625(title) xml/api-index-deprecated.xml:73(title)
#: xml/api-index-1.1.4.xml:15(title) xml/api-index-1.1.3.xml:24(title)
#: xml/api-index-1.0.7.xml:25(title) xml/api-index-1.0.6.xml:91(title)
#: xml/api-index-1.0.5.xml:60(title) xml/api-index-1.0.4.xml:47(title)
msgid "T"
msgstr ""

#: xml/api-index-full.xml:659(title) xml/api-index-0.8.xml:19(title)
msgid "W"
msgstr ""

#: cutter-docs.sgml:7(title)
msgid "Cutter Reference Manual"
msgstr "Cutterリファレンスマニュアル"

#: cutter-docs.sgml:8(releaseinfo)
msgid "for Cutter &version;"
msgstr "Cutter &version;用"

#: cutter-docs.sgml:12(title)
msgid "Introduction"
msgstr "はじめに"

#: cutter-docs.sgml:14(title)
msgid "Overview of Cutter"
msgstr "Cutterの概要"

#: cutter-docs.sgml:21(title)
msgid "Install Cutter to your platform"
msgstr "プラットフォーム毎のCutterのインストール方法"

#: cutter-docs.sgml:33(title)
msgid "Getting start"
msgstr "はじめよう"

#: cutter-docs.sgml:37(title)
msgid "Travis CI Integration"
msgstr ""

#: cutter-docs.sgml:41(title)
msgid "How to release Cutter"
msgstr "Cutterのリリース方法"

#: cutter-docs.sgml:47(title)
msgid "Reference"
msgstr "リファレンス"

#: cutter-docs.sgml:49(title)
msgid "Command"
msgstr "コマンド"

#: cutter-docs.sgml:54(title)
msgid "Writing test"
msgstr "テスト作成"

#: cutter-docs.sgml:84(title)
msgid "Writing assertion"
msgstr "検証作成"

#: cutter-docs.sgml:127(title)
msgid "Index of all symbols"
msgstr "すべてのシンボル一覧"

#: cutter-docs.sgml:130(title)
msgid "Index of deprecated symbols"
msgstr "非推奨のシンボル一覧"

#: cutter-docs.sgml:133(title)
msgid "Index of new symbols in 1.2.0"
msgstr "1.2.0での新しいシンボル一覧"

#: cutter-docs.sgml:136(title)
msgid "Index of new symbols in 1.1.9"
msgstr "1.1.9での新しいシンボル一覧"

#: cutter-docs.sgml:139(title)
msgid "Index of new symbols in 1.1.8"
msgstr "1.1.8での新しいシンボル一覧"

#: cutter-docs.sgml:142(title)
msgid "Index of new symbols in 1.1.7"
msgstr "1.1.7での新しいシンボル一覧"

#: cutter-docs.sgml:145(title)
msgid "Index of new symbols in 1.1.6"
msgstr "1.1.6での新しいシンボル一覧"

#: cutter-docs.sgml:148(title)
msgid "Index of new symbols in 1.1.5"
msgstr "1.1.5での新しいシンボル一覧"

#: cutter-docs.sgml:151(title)
msgid "Index of new symbols in 1.1.4"
msgstr "1.1.4での新しいシンボル一覧"

#: cutter-docs.sgml:154(title)
msgid "Index of new symbols in 1.1.3"
msgstr "1.1.3での新しいシンボル一覧"

#: cutter-docs.sgml:157(title)
msgid "Index of new symbols in 1.1.2"
msgstr "1.1.2での新しいシンボル一覧"

#: cutter-docs.sgml:160(title)
msgid "Index of new symbols in 1.1.1"
msgstr "1.1.1での新しいシンボル一覧"

#: cutter-docs.sgml:163(title)
msgid "Index of new symbols in 1.1.0"
msgstr "1.1.0での新しいシンボル一覧"

#: cutter-docs.sgml:166(title)
msgid "Index of new symbols in 1.0.9"
msgstr "1.0.9での新しいシンボル一覧"

#: cutter-docs.sgml:169(title)
msgid "Index of new symbols in 1.0.8"
msgstr "1.0.8での新しいシンボル一覧"

#: cutter-docs.sgml:172(title)
msgid "Index of new symbols in 1.0.7"
msgstr "1.0.7での新しいシンボル一覧"

#: cutter-docs.sgml:175(title)
msgid "Index of new symbols in 1.0.6"
msgstr "1.0.6での新しいシンボル一覧"

#: cutter-docs.sgml:178(title)
msgid "Index of new symbols in 1.0.5"
msgstr "1.0.5での新しいシンボル一覧"

#: cutter-docs.sgml:181(title)
msgid "Index of new symbols in 1.0.4"
msgstr "1.0.4での新しいシンボル一覧"

#: cutter-docs.sgml:184(title)
msgid "Index of new symbols in 1.0.3"
msgstr "1.0.3での新しいシンボル一覧"

#: cutter-docs.sgml:187(title)
msgid "Index of new symbols in 1.0.2"
msgstr "1.0.2での新しいシンボル一覧"

#: cutter-docs.sgml:190(title)
msgid "Index of new symbols in 1.0.1"
msgstr "1.0.1での新しいシンボル一覧"

#: cutter-docs.sgml:193(title)
msgid "Index of new symbols in 1.0"
msgstr "1.0での新しいシンボル一覧"

#: cutter-docs.sgml:196(title)
msgid "Index of new symbols in 0.9"
msgstr "0.9での新しいシンボル一覧"

#: cutter-docs.sgml:199(title)
msgid "Index of new symbols in 0.8"
msgstr "0.8での新しいシンボル一覧"

#: cutter-docs.sgml:202(title)
msgid "Index of new symbols in 0.7"
msgstr "0.7での新しいシンボル一覧"

#: cutter-docs.sgml:205(title)
msgid "Index of new symbols in 0.6"
msgstr "0.6での新しいシンボル一覧"

#: cutter-docs.sgml:208(title)
msgid "Index of new symbols in 0.5"
msgstr "0.5での新しいシンボル一覧"

#: cutter-docs.sgml:211(title)
msgid "Index of new symbols in 0.4"
msgstr "0.4での新しいシンボル一覧"

#: cutter-docs.sgml:214(title)
msgid "Index of new symbols in 0.3"
msgstr "0.3での新しいシンボル一覧"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: cutter-docs.sgml:0(None)
msgid "translator-credits"
msgstr ""

#~ msgid "Synopsis"
#~ msgstr "概要"

#~ msgid "Details"
#~ msgstr "詳細"

#~ msgid "Since 1.0.8"
#~ msgstr "1.0.8から"

#~ msgid "<emphasis>Returns</emphasis> :"
#~ msgstr "<emphasis>戻り値</emphasis> :"

#~ msgid "Since 1.0.6"
#~ msgstr "1.0.6から"

#~ msgid "Since 1.0.5"
#~ msgstr "1.0.5から"

#~ msgid "Since 1.1.6"
#~ msgstr "1.1.6から"

#~ msgid "Since 1.0.4"
#~ msgstr "1.0.4から"

#~ msgid "Since 1.1.5"
#~ msgstr "1.1.5から"

#~ msgid "Since 1.1.1"
#~ msgstr "1.1.1から"

#~ msgid "Since 1.0.3"
#~ msgstr "1.0.3から"

#~ msgid ""
#~ "It is emitted each time an external process causes an error. (e.g. IO "
#~ "error)"
#~ msgstr ""
#~ "外部プロセス関連のエラーが発生した毎に発行されます。（例: 入出力エラー）"

#~ msgid "the object which received the signal."
#~ msgstr "シグナルを受け取るオブジェクト。"

#~ msgid ""
#~ "the error of an external process. (<link linkend=\"GError"
#~ "\"><literal>GError</literal></link>)"
#~ msgstr ""
#~ "外部プロセスのエラー。（<link linkend=\"GError\"><literal>GError</"
#~ "literal></link>）"

#~ msgid "user data set when the signal handler was connected."
#~ msgstr "シグナルハンドラが接続された時にユーザが指定したデータ。"

#~ msgid ""
#~ "It is emitted each time an external process outputs something to its "
#~ "standard error output and it is read."
#~ msgstr ""
#~ "外部プロセスが標準エラー出力に出力したデータが読み込まれる毎に発行されま"
#~ "す。"

#~ msgid ""
#~ "Note that you need to run <link linkend=\"GCutEventLoop"
#~ "\"><literal>GCutEventLoop</literal></link> by <link linkend=\"gcut-event-"
#~ "loop-run\"><function>gcut_event_loop_run()</function></link> or <link "
#~ "linkend=\"gcut-event-loop-iterate\"><function>gcut_event_loop_iterate()</"
#~ "function></link> for detecting an external process's output is readable."
#~ msgstr ""
#~ "外部コマンドの出力が読み取り可能になったかどうかを検出するために、<link "
#~ "linkend=\"gcut-event-loop-run\"><function>gcut_event_loop_run()</"
#~ "function></link>か<link linkend=\"gcut-event-loop-iterate"
#~ "\"><function>gcut_event_loop_iterate()</function></link>で<link linkend="
#~ "\"GCutEventLoop\"><literl>GCutEventLoop</literal></link>をまわす必要がある"
#~ "ことに注意してください。"

#~ msgid "the chunk read from an external process's standard error output."
#~ msgstr "外部プロセスの標準エラー出力から読み込んだデータ。"

#~ msgid ""
#~ "the size of <parameter>chunk</parameter>. (<link linkend=\"gsize"
#~ "\"><literal>gsize</literal></link>)"
#~ msgstr ""
#~ "<parameter>chunk</parameter>のサイズ。（<link linkend=\"gsize"
#~ "\"><literal>gsize</literal></link>）"

#~ msgid ""
#~ "It is emitted each time an external process outputs something to its "
#~ "standard output and it is read."
#~ msgstr ""
#~ "外部プロセスが標準出力に出力したデータが読み込まれる毎に発行されます。"

#~ msgid "the chunk read from an external process's standard output."
#~ msgstr "外部プロセスの標準出力から読み込んだデータ。"

#~ msgid "It is emitted when an external process is exited."
#~ msgstr "外部プロセスが終了した時に発行されます。"

#~ msgid ""
#~ "Note that you need to run <link linkend=\"GCutEventLoop"
#~ "\"><literal>GCutEventLoop</literal></link> by <link linkend=\"gcut-event-"
#~ "loop-run\"><function>gcut_event_loop_run()</function></link> or <link "
#~ "linkend=\"gcut-event-loop-iterate\"><function>gcut_event_loop_iterate()</"
#~ "function></link> for detecting an external process is exited."
#~ msgstr ""
#~ "外部コマンドが終了したことを検出するために、<link linkend=\"gcut-event-"
#~ "loop-run\"><function>gcut_event_loop_run()</function></link>か<link "
#~ "linkend=\"gcut-event-loop-iterate\"><function>gcut_event_loop_iterate()</"
#~ "function></link>で<link linkend=\"GCutEventLoop\"><literal>GCutEventLoop</"
#~ "literal></link>をまわす必要があることに注意してください。"

#~ msgid "the exit status of an external process."
#~ msgstr "外部プロセスの終了ステータス。"

#~ msgid ""
#~ "<literal>gcut_list_enum_inspect</literal> has been deprecated since "
#~ "version 1.0.6 and should not be used in newly-written code. Use <link "
#~ "linkend=\"gcut-list-inspect-enum\"><function>gcut_list_inspect_enum()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_list_enum_inspect</literal>はバージョン1.0.6から非推奨になり"
#~ "ました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-list-inspect-enum\"><function>gcut_list_inspect_enum()</function></"
#~ "link>を使ってください。"

#~ msgid ""
#~ "<literal>gcut_list_flags_inspect</literal> has been deprecated since "
#~ "version 1.0.6 and should not be used in newly-written code. Use <link "
#~ "linkend=\"gcut-list-inspect-flags\"><function>gcut_list_inspect_flags()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_list_flags_inspect</literal>はバージョン1.0.6から非推奨にな"
#~ "りました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-list-inspect-flags\"><function>gcut_list_inspect_flags()</"
#~ "function></link>を使ってください。"

#~ msgid ""
#~ "<literal>gcut_list_int_equal</literal> has been deprecated since version "
#~ "1.0.6 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-list-equal-int\"><function>gcut_list_equal_int()</function></link> "
#~ "instead."
#~ msgstr ""
#~ "<literal>gcut_list_int_equal</literal>はバージョン1.0.6から非推奨になりま"
#~ "した。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-list-equal-int\"><function>gcut_list_equal_int()</function></link>"
#~ "を使って下さい。"

#~ msgid ""
#~ "<literal>gcut_list_int_inspect</literal> has been deprecated since "
#~ "version 1.0.6 and should not be used in newly-written code. Use <link "
#~ "linkend=\"gcut-list-inspect-int\"><function>gcut_list_inspect_int()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_list_int_inspect</literal>はバージョン1.0.6から非推奨になり"
#~ "ました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-list-inspect-int\"><function>gcut_list_inspect_int()</function></"
#~ "link>を使ってください。"

#~ msgid ""
#~ "<literal>gcut_list_object_inspect</literal> has been deprecated since "
#~ "version 1.0.6 and should not be used in newly-written code. Use <link "
#~ "linkend=\"gcut-list-inspect-object"
#~ "\"><function>gcut_list_inspect_object()</function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_list_object_inspect</literal>はバージョン1.0.6から非推奨にな"
#~ "りました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-list-inspect-object\"><function>gcut_list_inspect_object()</"
#~ "function></link>を使ってください。"

#~ msgid ""
#~ "<literal>gcut_list_string_equal</literal> has been deprecated since "
#~ "version 1.0.6 and should not be used in newly-written code. Use <link "
#~ "linkend=\"gcut-list-equal-string\"><function>gcut_list_equal_string()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_list_string_equal</literal>はバージョン1.0.6から非推奨になり"
#~ "ました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-list-equal-string\"><function>gcut_list_equal_string()</function></"
#~ "link>を使ってください。"

#~ msgid ""
#~ "<literal>gcut_list_string_inspect</literal> has been deprecated since "
#~ "version 1.0.6 and should not be used in newly-written code. Use <link "
#~ "linkend=\"gcut-list-inspect-string"
#~ "\"><function>gcut_list_inspect_string()</function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_list_string_inspect</literal>はバージョン1.0.6から非推奨にな"
#~ "りました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-list-inspect-string\"><function>gcut_list_inspect_string()</"
#~ "function></link>を使ってください。"

#~ msgid ""
#~ "<literal>gcut_list_uint_equal</literal> has been deprecated since version "
#~ "1.0.6 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-list-equal-uint\"><function>gcut_list_equal_uint()</function></"
#~ "link> instead."
#~ msgstr ""
#~ "<literal>gcut_list_uint_equal</literal>はバージョン1.0.6から非推奨になりま"
#~ "した。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-list-equal-uint\"><function>gcut_list_equal_uint()</function></"
#~ "link>を使ってください。"

#~ msgid ""
#~ "<literal>gcut_list_uint_inspect</literal> has been deprecated since "
#~ "version 1.0.6 and should not be used in newly-written code. Use <link "
#~ "linkend=\"gcut-list-inspect-uint\"><function>gcut_list_inspect_uint()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_list_uint_inspect</literal>はバージョン1.0.6から非推奨になり"
#~ "ました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-list-inspect-uint\"><function>gcut_list_inspect_uint()</function></"
#~ "link>を使ってください。"

#~ msgid "Since 1.1.3"
#~ msgstr "1.1.3から"

#~ msgid "Since 1.0.9"
#~ msgstr "1.0.9から"

#~ msgid ""
#~ "<literal>GCutEggError</literal> has been deprecated since version 1.1.5 "
#~ "and should not be used in newly-written code. Use <link linkend="
#~ "\"GCutProcessError\"><type>GCutProcessError</type></link> instead."
#~ msgstr ""
#~ "<literal>GCutEggError</literal>はバージョン1.1.5から非推奨になりました。新"
#~ "しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"GCutProcessError\"><type>GCutProcessError</type></link>を使ってくださ"
#~ "い。"

#~ msgid ""
#~ "<literal>gcut_egg_close</literal> has been deprecated since version 1.1.5 "
#~ "and should not be used in newly-written code. no need to close explicitly "
#~ "on <link linkend=\"GCutProcess\"><type>GCutProcess</type></link>."
#~ msgstr ""
#~ "<literal>gcut_egg_close</literal>はバージョン1.1.5から非推奨になりました。"
#~ "新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"GCutProcess\"><type>GCutProcess</type></link>を使ってください。"

#~ msgid ""
#~ "<literal>gcut_egg_get_env</literal> has been deprecated since version "
#~ "1.1.5 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-process-get-env\"><function>gcut_process_get_env()</function></"
#~ "link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_get_env</literal>はバージョン1.1.5から非推奨になりまし"
#~ "た。新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "process-get-env\"><function>gcut_process_get_env()</function></link>を使っ"
#~ "てください。"

#~ msgid ""
#~ "<literal>gcut_egg_get_error</literal> has been deprecated since version "
#~ "1.1.5 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-process-get-error-channel"
#~ "\"><function>gcut_process_get_error_channel()</function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_get_error</literal>はバージョン1.1.5から非推奨になりまし"
#~ "た。新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "egg-get-error\"><function>gcut_egg_get_error()</function></link>を使ってく"
#~ "ださい。"

#~ msgid ""
#~ "<literal>gcut_egg_get_flags</literal> has been deprecated since version "
#~ "1.1.5 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-process-get-flags\"><function>gcut_process_get_flags()</function></"
#~ "link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_get_flags</literal>はバージョン1.1.5から非推奨になりまし"
#~ "た。新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "process-get-flags\"><function>gcut_process_get_flags()</function></link>を"
#~ "使ってください。"

#~ msgid ""
#~ "<literal>gcut_egg_get_input</literal> has been deprecated since version "
#~ "1.1.5 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-process-get-input-channel"
#~ "\"><function>gcut_process_get_input_channel()</function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_get_input</literal>はバージョン1.1.5から非推奨になりまし"
#~ "た。新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "process-get-input-channel\"><function>gcut_process_get_input_channel()</"
#~ "function></link>を使ってください。"

#~ msgid ""
#~ "<literal>gcut_egg_get_output</literal> has been deprecated since version "
#~ "1.1.5 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-process-get-output-channel"
#~ "\"><function>gcut_process_get_output_channel()</function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_get_output</literal>はバージョン1.1.5から非推奨になりま"
#~ "した。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-process-get-output-channel"
#~ "\"><function>gcut_process_get_output_channel()</function></link>を使ってく"
#~ "ださい。"

#~ msgid ""
#~ "<literal>gcut_egg_get_pid</literal> has been deprecated since version "
#~ "1.1.5 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-process-get-pid\"><function>gcut_process_get_pid()</function></"
#~ "link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_get_pid</literal>はバージョン1.1.5から非推奨になりまし"
#~ "た。新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "process-get-pid\"><function>gcut_process_get_pid()</function></link>を使っ"
#~ "てください。"

#~ msgid ""
#~ "<literal>gcut_egg_hatch</literal> has been deprecated since version 1.1.5 "
#~ "and should not be used in newly-written code. Use <link linkend=\"gcut-"
#~ "process-run\"><function>gcut_process_run()</function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_hatch</literal>はバージョン1.1.5から非推奨になりました。"
#~ "新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "process-run\"><function>gcut_process_run()</function></link>を使ってくださ"
#~ "い。"

#~ msgid ""
#~ "<literal>gcut_egg_kill</literal> has been deprecated since version 1.1.5 "
#~ "and should not be used in newly-written code. Use <link linkend=\"gcut-"
#~ "process-kill\"><function>gcut_process_kill()</function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_kill</literal>はバージョン1.1.5から非推奨になりました。"
#~ "新しく書くコードでは使わないで下さい。代わりに<link linkend=\"gcut-"
#~ "process-kill\"><function>gcut_process_kill()</function></link>を使ってくだ"
#~ "さい。"

#~ msgid ""
#~ "<literal>gcut_egg_new</literal> has been deprecated since version 1.1.5 "
#~ "and should not be used in newly-written code. Use <link linkend=\"gcut-"
#~ "process-new\"><function>gcut_process_new()</function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_new</literal>はバージョン1.1.5から非推奨になりました。新"
#~ "しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "process-new\"><function>gcut_process_new()</function></link>を使ってくださ"
#~ "い。"

#~ msgid ""
#~ "<literal>gcut_egg_new_argv</literal> has been deprecated since version "
#~ "1.1.5 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-process-new-argv\"><function>gcut_process_new_argv()</function></"
#~ "link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_new_argv</literal>はバージョン1.1.5から非推奨になりまし"
#~ "た。新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "egg-new-argv\"><function>gcut_egg_new_argv()</function></link>を使ってくだ"
#~ "さい。"

#~ msgid ""
#~ "<literal>gcut_egg_new_array</literal> has been deprecated since version "
#~ "1.1.5 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-process-new-array\"><function>gcut_process_new_array()</function></"
#~ "link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_new_array</literal>はバージョン1.1.5から非推奨になりまし"
#~ "た。新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "egg-new-array\"><function>gcut_egg_new_array()</function></link>を使ってく"
#~ "ださい。"

#~ msgid ""
#~ "<literal>gcut_egg_new_strings</literal> has been deprecated since version "
#~ "1.1.5 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-process-new-strings\"><function>gcut_process_new_strings()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_new_strings</literal>はバージョン1.1.5から非推奨になりま"
#~ "した。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-process-new-strings\"><function>gcut_process_new_strings()</"
#~ "function></link>を使ってください。"

#~ msgid ""
#~ "<literal>gcut_egg_new_va_list</literal> has been deprecated since version "
#~ "1.1.5 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-process-new-va-list\"><function>gcut_process_new_va_list()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_new_va_list</literal>はバージョン1.1.5から非推奨になりま"
#~ "した。新しく書くコードでは使わないで下さい。代わりに<link linkend=\"gcut-"
#~ "process-new-va-list\"><function>gcut_process_new_va_list()</function></"
#~ "link>を使ってください。"

#~ msgid ""
#~ "<literal>gcut_egg_set_env</literal> has been deprecated since version "
#~ "1.1.5 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-process-set-env\"><function>gcut_process_set_env()</function></"
#~ "link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_set_env</literal>はバージョン1.1.5から非推奨になりまし"
#~ "た。新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "process-set-env\"><function>gcut_process_set_env()</function></link>を使っ"
#~ "てください。"

#~ msgid ""
#~ "<literal>gcut_egg_set_flags</literal> has been deprecated since version "
#~ "1.1.5 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-process-set-flags\"><function>gcut_process_set_flags()</function></"
#~ "link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_set_flags</literal>はバージョン1.1.5から非推奨になりまし"
#~ "た。新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "process-set-flags\"><function>gcut_process_set_flags()</function></link>を"
#~ "使ってください。"

#~ msgid ""
#~ "<literal>gcut_egg_wait</literal> has been deprecated since version 1.1.5 "
#~ "and should not be used in newly-written code. Use <link linkend=\"gcut-"
#~ "process-wait\"><function>gcut_process_wait()</function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_wait</literal>はバージョン1.1.5から非推奨になりました。"
#~ "新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "process-wait\"><function>gcut_process_wait()</function></link>を使ってくだ"
#~ "さい。"

#~ msgid ""
#~ "<literal>gcut_egg_write</literal> has been deprecated since version 1.1.5 "
#~ "and should not be used in newly-written code. Use <link linkend=\"gcut-"
#~ "process-write\"><function>gcut_process_write()</function></link> instead."
#~ msgstr ""
#~ "<literal>gcut_egg_write</literal>はバージョン1.1.5から非推奨になりました。"
#~ "新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "process-write\"><function>gcut_process_write()</function></link>を使ってく"
#~ "ださい。"

#~ msgid ""
#~ "Note that you need to run GLib's main loop by <link linkend=\"g-main-loop-"
#~ "run\"><function>g_main_loop_run()</function></link>, <link linkend=\"g-"
#~ "main-context-iteration\"><function>g_main_context_iteration()</function></"
#~ "link> and so on for detecting an external process's output is readable."
#~ msgstr ""
#~ "外部コマンドの出力が読み取り可能になったかどうかを検出するために、<link "
#~ "linkend=\"g-main-loop-run\"><function>g_main_loop_run()</function></link>"
#~ "や<link linkend=\"g-main-context-iteration"
#~ "\"><function>g_main_context_iteration()</function></link>などでGLibのメイ"
#~ "ンループをまわす必要があることに注意してください。"

#~ msgid ""
#~ "Note that you need to run GLib's main loop by <link linkend=\"g-main-loop-"
#~ "run\"><function>g_main_loop_run()</function></link>, <link linkend=\"g-"
#~ "main-context-iteration\"><function>g_main_context_iteration()</function></"
#~ "link> and so on for detecting an external process is exited."
#~ msgstr ""
#~ "外部コマンドが終了したこと検出するために、<link linkend=\"g-main-loop-run"
#~ "\"><function>g_main_loop_run()</function></link>や<link linkend=\"g-main-"
#~ "context-iteration\"><function>g_main_context_iteration()</function></link>"
#~ "などでGLibのメインループをまわす必要があることに注意してください。"

#~ msgid "Since 1.0.7"
#~ msgstr "1.0.7から"

#~ msgid ""
#~ "<literal>cut_assert_equal_g_list_int</literal> has been deprecated since "
#~ "version 1.0.3 and should not be used in newly-written code. Use <link "
#~ "linkend=\"gcut-assert-equal-list-int"
#~ "\"><function>gcut_assert_equal_list_int()</function></link> instead."
#~ msgstr ""
#~ "<literal>cut_assert_equal_g_string_list_int</literal>はバージョン1.0.3から"
#~ "非推奨になりました。新しく書くコードでは使わないでください。代わりに<link "
#~ "linkend=\"gcut-assert-equal-list-int"
#~ "\"><function>gcut_assert_equal_list_int()</function></link>を使ってくださ"
#~ "い。"

#~ msgid "Since 0.8"
#~ msgstr "0.8から"

#~ msgid ""
#~ "<literal>cut_assert_equal_g_list_string</literal> has been deprecated "
#~ "since version 1.0.3 and should not be used in newly-written code. Use "
#~ "<link linkend=\"gcut-assert-equal-list-string"
#~ "\"><function>gcut_assert_equal_list_string()</function></link> instead."
#~ msgstr ""
#~ "<literal>cut_assert_equal_g_list_string</literal>はバージョン1.0.3から非推"
#~ "奨になりました。新しく書くコードでは使わないでください。代わりに<link "
#~ "linkend=\"gcut-assert-equal-list-string"
#~ "\"><function>gcut_assert_equal_list_string()</function></link>を使ってくだ"
#~ "さい。"

#~ msgid ""
#~ "<literal>cut_assert_equal_g_type</literal> has been deprecated since "
#~ "version 1.0.3 and should not be used in newly-written code. Use <link "
#~ "linkend=\"gcut-assert-equal-type\"><function>gcut_assert_equal_type()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>cut_assert_equal_g_type</literal>はバージョン1.0.3から非推奨にな"
#~ "りました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-assert-equal-type\"><function>gcut_assert_equal_type()</function></"
#~ "link>を使ってください。"

#~ msgid ""
#~ "<literal>cut_assert_equal_g_value</literal> has been deprecated since "
#~ "version 1.0.3 and should not be used in newly-written code. Use <link "
#~ "linkend=\"gcut-assert-equal-value\"><function>gcut_assert_equal_value()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>cut_assert_equal_g_value</literal>はバージョン1.0.3から非推奨にな"
#~ "りました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-assert-equal-value\"><function>gcut_assert_equal_value()</"
#~ "function></link>を使ってください。"

#~ msgid ""
#~ "<literal>cut_assert_g_error</literal> has been deprecated since version "
#~ "1.0.3 and should not be used in newly-written code. Use <link linkend="
#~ "\"gcut-assert-error\"><function>gcut_assert_error()</function></link> "
#~ "instead."
#~ msgstr ""
#~ "<literal>cut_assert_g_error</literal>はバージョン1.0.3から非推奨になりまし"
#~ "た。新しく書くコードでは使わないでください。代わりに<link linkend=\"gcut-"
#~ "assert-error\"><function>gcut_assert_error()</function></link>を使ってくだ"
#~ "さい。"

#~ msgid "Since 1.0"
#~ msgstr "1.0から"

#~ msgid ""
#~ "<literal>cut_assert_remove_path</literal> has been deprecated since "
#~ "version 1.0.3 and should not be used in newly-written code. Use <link "
#~ "linkend=\"gcut-assert-remove-path\"><function>gcut_assert_remove_path()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>cut_assert_remove_path</literal>はバージョン1.0.3から非推奨になり"
#~ "ました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"gcut-assert-remove-path\"><function>gcut_assert_remove_path()</"
#~ "function></link>を使ってください。"

#~ msgid "Since 1.0.2"
#~ msgstr "1.0.2から"

#~ msgid ""
#~ "\n"
#~ "gcut_assert_equal_enum(GTK_TYPE_DIRECTION_TYPE,\n"
#~ "                          GTK_DIR_LEFT, GTK_DIR_LEFT); -&gt; Pass\n"
#~ "gcut_assert_equal_enum(GTK_TYPE_DIRECTION_TYPE,\n"
#~ "                          GTK_DIR_DOWN, GTK_DIR_LEFT); -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "gcut_assert_equal_enum(GTK_TYPE_DIRECTION_TYPE,\n"
#~ "                          GTK_DIR_LEFT, GTK_DIR_LEFT); -&gt; パス\n"
#~ "gcut_assert_equal_enum(GTK_TYPE_DIRECTION_TYPE,\n"
#~ "                          GTK_DIR_DOWN, GTK_DIR_LEFT); -&gt; 失敗\n"

#~ msgid ""
#~ "\n"
#~ "gcut_assert_equal_flags(GTK_TYPE_DIALOG_FLAGS,\n"
#~ "                        GTK_DIALOG_DESTROY_MODAL |\n"
#~ "                          GTK_DIALOG_DESTROY_WITH_PARENT,\n"
#~ "                        GTK_DIALOG_DESTROY_MODAL |\n"
#~ "                          GTK_DIALOG_DESTROY_WITH_PARENT); -&gt; Pass\n"
#~ "gcut_assert_equal_flags(GTK_TYPE_DIALOG_FLAGS,\n"
#~ "                        GTK_DIALOG_DESTROY_MODAL |\n"
#~ "                          GTK_DIALOG_DESTROY_WITH_PARENT,\n"
#~ "                        GTK_DIALOG_DESTROY_MODAL); -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "gcut_assert_equal_flags(GTK_TYPE_DIALOG_FLAGS,\n"
#~ "                        GTK_DIALOG_DESTROY_MODAL |\n"
#~ "                          GTK_DIALOG_DESTROY_WITH_PARENT,\n"
#~ "                        GTK_DIALOG_DESTROY_MODAL |\n"
#~ "                          GTK_DIALOG_DESTROY_WITH_PARENT); -&gt; パス\n"
#~ "gcut_assert_equal_flags(GTK_TYPE_DIALOG_FLAGS,\n"
#~ "                        GTK_DIALOG_DESTROY_MODAL |\n"
#~ "                          GTK_DIALOG_DESTROY_WITH_PARENT,\n"
#~ "                        GTK_DIALOG_DESTROY_MODAL); -&gt; 失敗\n"

#~ msgid ""
#~ "\n"
#~ "gcut_assert_equal_object(object, object);   -&gt; Pass\n"
#~ "gcut_assert_equal_object(object1, object2); -&gt; Fail\n"
#~ "gcut_assert_equal_object(NULL, NULL);       -&gt; Pass\n"
#~ "gcut_assert_equal_object(object1, NULL);    -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "gcut_assert_equal_object(object, object);   -&gt; パス\n"
#~ "gcut_assert_equal_object(object1, object2); -&gt; 失敗\n"
#~ "gcut_assert_equal_object(NULL, NULL);       -&gt; パス\n"
#~ "gcut_assert_equal_object(object1, NULL);    -&gt; 失敗\n"

#~ msgid ""
#~ "\n"
#~ "static gboolean\n"
#~ "equal_name (gconstpointer data1, gconstpointer data2)\n"
#~ "{\n"
#~ "    return g_str_equal(my_object_get_name(MY_OBJECT(data1)),\n"
#~ "                       my_object_get_name(MY_OBJECT(data2)));\n"
#~ "}\n"
#~ "\n"
#~ "gcut_assert_equal_object_custom(object, object, equal_name);   -&gt; "
#~ "Pass\n"
#~ "gcut_assert_equal_object_custom(same_name_object1,\n"
#~ "                                same_name_object2,\n"
#~ "                                equal_name);                   -&gt; "
#~ "Pass\n"
#~ "gcut_assert_equal_object_custom(different_name_object1,\n"
#~ "                                different_name_object2,\n"
#~ "                                equal_name);                   -&gt; "
#~ "Fail\n"
#~ msgstr ""
#~ "\n"
#~ "static gboolean\n"
#~ "equal_name (gconstpointer data1, gconstpointer data2)\n"
#~ "{\n"
#~ "    return g_str_equal(my_object_get_name(MY_OBJECT(data1)),\n"
#~ "                       my_object_get_name(MY_OBJECT(data2)));\n"
#~ "}\n"
#~ "\n"
#~ "gcut_assert_equal_object_custom(object, object, equal_name);   -&gt; パ"
#~ "ス\n"
#~ "gcut_assert_equal_object_custom(same_name_object1,\n"
#~ "                                same_name_object2,\n"
#~ "                                equal_name);                   -&gt; パ"
#~ "ス\n"
#~ "gcut_assert_equal_object_custom(different_name_object1,\n"
#~ "                                different_name_object2,\n"
#~ "                                equal_name);                   -&gt; 失"
#~ "敗\n"

#~ msgid "Since 1.1.4"
#~ msgstr "1.1.4から"

#~ msgid "Since 1.1.2"
#~ msgstr "1.1.2から"

#~ msgid ""
#~ "<literal>cut_keep_message</literal> has been deprecated since version "
#~ "1.1.0 and should not be used in newly-written code. Use <link linkend="
#~ "\"cut-message\"><function>cut_message()</function></link> instead."
#~ msgstr ""
#~ "<literal>cut_keep_message</literal>はバージョン1.1.0から非推奨になりまし"
#~ "た。新しく書くコードでは使わないでください。代わりに<link linkend=\"cut-"
#~ "message\"><function>cut_message()</function></link>を使ってください。"

#~ msgid "Since 1.1.0"
#~ msgstr "1.1.0から"

#~ msgid ""
#~ "<literal>cut_set_message</literal> has been deprecated since version "
#~ "1.1.0 and should not be used in newly-written code. Use <link linkend="
#~ "\"cut-message\"><function>cut_message()</function></link> instead."
#~ msgstr ""
#~ "<literal>cut_set_message</literal>はバージョン1.1.0から非推奨になりまし"
#~ "た。新しく書くコードでは使わないでください。代わりに<link linkend=\"cut-"
#~ "message\"><function>cut_message()</function></link>を使ってください。"

#~ msgid ""
#~ "<literal>cut_set_message_va_list</literal> has been deprecated since "
#~ "version 1.1.0 and should not be used in newly-written code. Use <link "
#~ "linkend=\"cut-message\"><function>cut_message()</function></link> instead."
#~ msgstr ""
#~ "<literal>cut_set_message_va_list</literal>はバージョン1.1.0から非推奨にな"
#~ "りました。新しく書くコードでは使わないで下さい。代わりに<link linkend="
#~ "\"cut-message\"><function>cut_message()</function></link>を使ってくださ"
#~ "い。"

#~ msgid ""
#~ "<literal>setup</literal> has been deprecated since version 1.0.7 and "
#~ "should not be used in newly-written code. Use <link linkend=\"cut-setup"
#~ "\"><function>cut_setup()</function></link> instead."
#~ msgstr ""
#~ "<literal>setup</literal>はバージョン1.0.7から非推奨になりました。新しく書"
#~ "くコードでは使わないでください。代わりに<link linkend=\"cut-setup"
#~ "\"><function>cut_setup()</function></link>を使ってください。"

#~ msgid ""
#~ "<literal>teardown</literal> has been deprecated since version 1.0.7 and "
#~ "should not be used in newly-written code. Use <link linkend=\"cut-teardown"
#~ "\"><function>cut_teardown()</function></link> instead."
#~ msgstr ""
#~ "<literal>teardown</literal>はバージョン1.0.7から非推奨になりました。新しく"
#~ "書くコードでは使わないでください。代わりに<link linkend=\"cut-teardown"
#~ "\"><function>cut_teardown()</function></link>を使ってください。"

#~ msgid ""
#~ "<literal>cut_build_fixture_data_path</literal> has been deprecated since "
#~ "version 1.1.6 and should not be used in newly-written code. Use <link "
#~ "linkend=\"cut-build-fixture-path\"><function>cut_build_fixture_path()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>cut_build_fixture_data_path</literal>はバージョン1.1.6から非推奨"
#~ "になりました。新しく書くコードでは使わないでください。代わりに<link "
#~ "linkend=\"cut-build-fixture-path\"><function>cut_build_fixture_path()</"
#~ "function></link>を使ってください。"

#~ msgid ""
#~ "\n"
#~ "--- core-lib/ --- XXX.c # Your core library\n"
#~ " |             +- ...\n"
#~ " |             +- YYY.c\n"
#~ " +- util-lib/ --- AAA.c # Your utility library\n"
#~ " |             +- ...\n"
#~ " |             +- BBB.c\n"
#~ " |\n"
#~ " +- test/ --- core/ --- test-XXX.c # Tests for your core library\n"
#~ "           |         +- ...\n"
#~ "           |         +- test-YYY.c\n"
#~ "           +- util/ --- test-AAA.c # Tests for your utility library\n"
#~ "           |         +- ...\n"
#~ "           |         +- test-BBB.c\n"
#~ "           +- lib/  --- my-assertions.c # Your library of tests.\n"
#~ "                     +- my-assertions.h # This library will be used\n"
#~ "                     |                  # as shared library of your\n"
#~ "                     |                  # tests (test/core/test-*.so\n"
#~ "                     |                  # and test/util/test-*.so)\n"
#~ "                     +- ...\n"
#~ "\n"
#~ "  % cutter --source-directory=test test\n"
#~ msgstr ""
#~ "\n"
#~ "--- core-lib/ --- XXX.c # コアライブラリ\n"
#~ " |             +- ...\n"
#~ " |             +- YYY.c\n"
#~ " +- util-lib/ --- AAA.c # 便利ライブラリ\n"
#~ " |             +- ...\n"
#~ " |             +- BBB.c\n"
#~ " |\n"
#~ " +- test/ --- core/ --- test-XXX.c # コアライブラリのテスト\n"
#~ "           |         +- ...\n"
#~ "           |         +- test-YYY.c\n"
#~ "           +- util/ --- test-AAA.c # 便利ライブラリのテスト\n"
#~ "           |         +- ...\n"
#~ "           |         +- test-BBB.c\n"
#~ "           +- lib/  --- my-assertions.c # テスト用補助ライブラリ\n"
#~ "                     +- my-assertions.h # テスト中（\n"
#~ "                     |                  # test/core/test-*.soと\n"
#~ "                     |                  # test/util/test-*.soの中）\n"
#~ "                     |                  # で共有ライブラリとして使われる\n"
#~ "                     +- ...\n"
#~ "\n"
#~ "  % cutter --source-directory=test test\n"

#~ msgid ""
#~ "<literal>cut_test_fail_va_list</literal> has been deprecated since "
#~ "version 1.0.6 and should not be used in newly-written code. Use <link "
#~ "linkend=\"cut-test-fail\"><function>cut_test_fail()</function></link> "
#~ "instead."
#~ msgstr ""
#~ "<literal>cut_test_fail_va_list</literal>はバージョン1.0.6から非推奨になり"
#~ "ました。新しく書くコードでは使わないで下さい。代わりに<link linkend=\"cut-"
#~ "test-fail\"><function>cut_test_fail()</function></link>を使ってください。"

#~ msgid ""
#~ "\n"
#~ "cut_assert_equal(!strcmp, \"abc\", \"abc\"); -&gt; Pass\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_equal(!strcmp, \"abc\", \"abc\"); -&gt; パス\n"

#~ msgid ""
#~ "\n"
#~ "cut_assert_equal_boolean(CUT_TRUE, CUT_TRUE);   -&gt; Pass\n"
#~ "cut_assert_equal_boolean(CUT_FALSE, CUT_FALSE); -&gt; Pass\n"
#~ "cut_assert_equal_boolean(CUT_TRUE, CUT_FALSE);  -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_equal_boolean(CUT_TRUE, CUT_TRUE);   -&gt; パス\n"
#~ "cut_assert_equal_boolean(CUT_FALSE, CUT_FALSE); -&gt; パス\n"
#~ "cut_assert_equal_boolean(CUT_TRUE, CUT_FALSE);  -&gt; 失敗\n"

#~ msgid ""
#~ "\n"
#~ "cut_assert_equal_char('a', 'a'); -&gt; Pass\n"
#~ "cut_assert_equal_char('a', 'b'); -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_equal_char('a', 'a'); -&gt; パス\n"
#~ "cut_assert_equal_char('a', 'b'); -&gt; 失敗\n"

#~ msgid ""
#~ "\n"
#~ "cut_assert_equal_string(\"abc\", \"abc\"); -&gt; Pass\n"
#~ "cut_assert_equal_string(NULL, NULL);   -&gt; Pass\n"
#~ "cut_assert_equal_string(\"abc\", \"ABC\"); -&gt; Fail\n"
#~ "cut_assert_equal_string(\"abc\", NULL);  -&gt; Fail\n"
#~ "cut_assert_equal_string(NULL, \"abc\");  -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_equal_string(\"abc\", \"abc\"); -&gt; パス\n"
#~ "cut_assert_equal_string(NULL, NULL);   -&gt; パス\n"
#~ "cut_assert_equal_string(\"abc\", \"ABC\"); -&gt; 失敗\n"
#~ "cut_assert_equal_string(\"abc\", NULL);  -&gt; 失敗\n"
#~ "cut_assert_equal_string(NULL, \"abc\");  -&gt; 失敗\n"

#~ msgid "Since 0.9"
#~ msgstr "0.9から"

#~ msgid ""
#~ "<literal>cut_assert_equal_string_or_null</literal> has been deprecated "
#~ "since version 0.3 and should not be used in newly-written code. Use <link "
#~ "linkend=\"cut-assert-equal-string\"><function>cut_assert_equal_string()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>cut_assert_equal_string_or_null</literal>はバージョン0.3から非推"
#~ "奨になりました。新しく書くコードでは使わないでください。代わりに<link "
#~ "linkend=\"cut-assert-equal-string\"><function>cut_assert_equal_string()</"
#~ "function></link>を使ってください。"

#~ msgid "Since 0.3"
#~ msgstr "0.3から"

#~ msgid ""
#~ "\n"
#~ "cut_assert_equal_substring(\"abcdef\", \"abcDEF\", 3); -&gt; Pass\n"
#~ "cut_assert_equal_substring(NULL, NULL, 0);         -&gt; Pass\n"
#~ "cut_assert_equal_substring(NULL, NULL, 3);         -&gt; Fail\n"
#~ "cut_assert_equal_substring(\"abc\", \"ABC\", 3);       -&gt; Fail\n"
#~ "cut_assert_equal_substring(\"abc\", NULL, 3);        -&gt; Fail\n"
#~ "cut_assert_equal_substring(NULL, \"abc\", 3);        -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_equal_substring(\"abcdef\", \"abcDEF\", 3); -&gt; パス\n"
#~ "cut_assert_equal_substring(NULL, NULL, 0);         -&gt; パス\n"
#~ "cut_assert_equal_substring(NULL, NULL, 3);         -&gt; 失敗\n"
#~ "cut_assert_equal_substring(\"abc\", \"ABC\", 3);       -&gt; 失敗\n"
#~ "cut_assert_equal_substring(\"abc\", NULL, 3);        -&gt; 失敗\n"
#~ "cut_assert_equal_substring(NULL, \"abc\", 3);        -&gt; 失敗\n"

#~ msgid ""
#~ "\n"
#~ "count = write(stdout, buffer, strlen(buffer));\n"
#~ "cut_assert_errno(\"Failed to write\");            -&gt; Pass when count !"
#~ "= -1\n"
#~ msgstr ""
#~ "\n"
#~ "count = write(stdout, buffer, strlen(buffer));\n"
#~ "cut_assert_errno(\"Failed to write\");            -&gt; count != -1のとき"
#~ "パス\n"

#~ msgid ""
#~ "\n"
#~ "cut_assert_exist_path(\"/tmp\");             -&gt; Pass on many "
#~ "environment\n"
#~ "cut_assert_exist_path(\"/non-existent\");    -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_exist_path(\"/tmp\");             -&gt; 多くの環境ではパス\n"
#~ "cut_assert_exist_path(\"/non-existent\");    -&gt; 失敗\n"

#~ msgid ""
#~ "<literal>cut_assert_file_exist</literal> has been deprecated since "
#~ "version 1.0.2 and should not be used in newly-written code. Use <link "
#~ "linkend=\"cut-assert-path-exist\"><function>cut_assert_path_exist()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>cut_assert_file_exist</literal>はバージョン1.0.2から非推奨になり"
#~ "ました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"cut-assert-path-exist\"><function>cut_assert_path_exist()</function></"
#~ "link>を使ってください。"

#~ msgid ""
#~ "\n"
#~ "cut_assert_file_exist(\"/tmp\");             -&gt; Pass on many "
#~ "environment\n"
#~ "cut_assert_file_exist(\"/non-existent\");    -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_file_exist(\"/tmp\");             -&gt; 多くの環境ではパス\n"
#~ "cut_assert_file_exist(\"/non-existent\");    -&gt; 失敗\n"

#~ msgid ""
#~ "\n"
#~ "cut_assert_match(\"^abc\", \"abc\");            -&gt; Pass\n"
#~ "cut_assert_match(\"^abc\", \" abc\");           -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_match(\"^abc\", \"abc\");            -&gt; パス\n"
#~ "cut_assert_match(\"^abc\", \" abc\");           -&gt; 失敗\n"

#~ msgid ""
#~ "\n"
#~ "cut_assert_not_equal_boolean(CUT_TRUE, CUT_TRUE);   -&gt; Fail\n"
#~ "cut_assert_not_equal_boolean(CUT_FALSE, CUT_FALSE); -&gt; Fail\n"
#~ "cut_assert_not_equal_boolean(CUT_TRUE, CUT_FALSE);  -&gt; Pass\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_not_equal_boolean(CUT_TRUE, CUT_TRUE);   -&gt; 失敗\n"
#~ "cut_assert_not_equal_boolean(CUT_FALSE, CUT_FALSE); -&gt; 失敗\n"
#~ "cut_assert_not_equal_boolean(CUT_TRUE, CUT_FALSE);  -&gt; パス\n"

#~ msgid ""
#~ "\n"
#~ "cut_assert_not_equal_char('a', 'b'); -&gt; Pass\n"
#~ "cut_assert_not_equal_char('a', 'a'); -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_not_equal_char('a', 'b'); -&gt; パス\n"
#~ "cut_assert_not_equal_char('a', 'a'); -&gt; 失敗\n"

#~ msgid ""
#~ "\n"
#~ "cut_assert_not_equal_string(\"abc\", NULL);  -&gt; Pass\n"
#~ "cut_assert_not_equal_string(NULL, \"abc\");  -&gt; Pass\n"
#~ "cut_assert_not_equal_string(\"abc\", \"ABC\"); -&gt; Pass\n"
#~ "cut_assert_not_equal_string(\"abc\", \"abc\"); -&gt; Fail\n"
#~ "cut_assert_not_equal_string(NULL, NULL);   -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_not_equal_string(\"abc\", NULL);  -&gt; パス\n"
#~ "cut_assert_not_equal_string(NULL, \"abc\");  -&gt; パス\n"
#~ "cut_assert_not_equal_string(\"abc\", \"ABC\"); -&gt; パス\n"
#~ "cut_assert_not_equal_string(\"abc\", \"abc\"); -&gt; 失敗\n"
#~ "cut_assert_not_equal_string(NULL, NULL);   -&gt; 失敗\n"

#~ msgid ""
#~ "\n"
#~ "cut_assert_not_equal_substring(\"abc\", \"ABC\", 3);       -&gt; Pass\n"
#~ "cut_assert_not_equal_substring(\"abc\", NULL, 3);        -&gt; Pass\n"
#~ "cut_assert_not_equal_substring(NULL, \"abc\", 3);        -&gt; Pass\n"
#~ "cut_assert_not_equal_substring(\"abcdef\", \"abcDEF\", 3); -&gt; Fail\n"
#~ "cut_assert_not_equal_substring(NULL, NULL, 0);         -&gt; Fail\n"
#~ "cut_assert_not_equal_substring(NULL, NULL, 3);         -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_not_equal_substring(\"abc\", \"ABC\", 3);       -&gt; パス\n"
#~ "cut_assert_not_equal_substring(\"abc\", NULL, 3);        -&gt; パス\n"
#~ "cut_assert_not_equal_substring(NULL, \"abc\", 3);        -&gt; パス\n"
#~ "cut_assert_not_equal_substring(\"abcdef\", \"abcDEF\", 3); -&gt; 失敗\n"
#~ "cut_assert_not_equal_substring(NULL, NULL, 0);         -&gt; 失敗\n"
#~ "cut_assert_not_equal_substring(NULL, NULL, 3);         -&gt; 失敗\n"

#~ msgid ""
#~ "\n"
#~ "cut_assert_not_exist_path(\"/non-existent\");    -&gt; Pass on many "
#~ "environment\n"
#~ "cut_assert_not_exist_path(\"/tmp\");             -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_not_exist_path(\"/non-existent\");    -&gt; 多くの環境ではパ"
#~ "ス\n"
#~ "cut_assert_not_exist_path(\"/tmp\");             -&gt; 失敗\n"

#~ msgid ""
#~ "<literal>cut_assert_path_exist</literal> has been deprecated since "
#~ "version 1.1.5 and should not be used in newly-written code. Use <link "
#~ "linkend=\"cut-assert-exist-path\"><function>cut_assert_exist_path()</"
#~ "function></link> instead."
#~ msgstr ""
#~ "<literal>cut_assert_path_exist</literal>はバージョン1.1.5から非推奨になり"
#~ "ました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"cut-assert-exist-path\"><function>cut_assert_exist_path()</function></"
#~ "link>を使ってください。"

#~ msgid ""
#~ "\n"
#~ "cut_assert_path_exist(\"/tmp\");             -&gt; Pass on many "
#~ "environment\n"
#~ "cut_assert_path_exist(\"/non-existent\");    -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_path_exist(\"/tmp\");             -&gt; 多くの環境ではパス\n"
#~ "cut_assert_path_exist(\"/non-existent\");    -&gt; 失敗\n"

#~ msgid ""
#~ "<literal>cut_assert_path_not_exist</literal> has been deprecated since "
#~ "version 1.1.5 and should not be used in newly-written code. Use <link "
#~ "linkend=\"cut-assert-not-exist-path"
#~ "\"><function>cut_assert_not_exist_path()</function></link> instead."
#~ msgstr ""
#~ "<literal>cut_assert_path_not_exist</literal>はバージョン1.1.5から非推奨に"
#~ "なりました。新しく書くコードでは使わないでください。代わりに<link linkend="
#~ "\"cut-assert-not-exist-path\"><function>cut_assert_not_exist_path()</"
#~ "function></link>を使ってください。"

#~ msgid ""
#~ "\n"
#~ "cut_assert_path_not_exist(\"/non-existent\");    -&gt; Pass on many "
#~ "environment\n"
#~ "cut_assert_path_not_exist(\"/tmp\");             -&gt; Fail\n"
#~ msgstr ""
#~ "\n"
#~ "cut_assert_path_not_exist(\"/non-existent\");    -&gt; 多くの環境ではパ"
#~ "ス\n"
#~ "cut_assert_path_not_exist(\"/tmp\");             -&gt; 失敗\n"

#~ msgid ""
#~ "<literal>cut_pending</literal> has been deprecated since version 0.4 and "
#~ "should not be used in newly-written code. Use <link linkend=\"cut-pend"
#~ "\"><function>cut_pend()</function></link> instead."
#~ msgstr ""
#~ "<literal>cut_pending</literal>はバージョン0.4から非推奨になりました。新し"
#~ "く書くコードでは使わないでください。代わりに<link linkend=\"cut-pend"
#~ "\"><function>cut_pend()</function></link>を使ってください。"

#~ msgid "Since 1.2.0"
#~ msgstr "1.2.0から"

#~ msgid ""
#~ "\n"
#~ "cppcut_assert_operator(1, &lt;, 2); // pass\n"
#~ "cppcut_assert_operator(1, &gt;, 2); // fail\n"
#~ msgstr ""
#~ "\n"
#~ "cppcut_assert_operator(1, &lt;, 2); // パス\n"
#~ "cppcut_assert_operator(1, &gt;, 2); // 失敗\n"
